"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/xmlbuilder";
exports.ids = ["vendor-chunks/xmlbuilder"];
exports.modules = {

/***/ "(ssr)/../node_modules/xmlbuilder/lib/Utility.js":
/*!*************************************************!*\
  !*** ../node_modules/xmlbuilder/lib/Utility.js ***!
  \*************************************************/
/***/ ((module) => {

eval("\n// Generated by CoffeeScript 1.12.7\n(function() {\n    var assign, getValue, isArray, isEmpty, isFunction, isObject, isPlainObject, slice = [].slice, hasProp = {}.hasOwnProperty;\n    assign = function() {\n        var i, key, len, source, sources, target;\n        target = arguments[0], sources = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n        if (isFunction(Object.assign)) {\n            Object.assign.apply(null, arguments);\n        } else {\n            for(i = 0, len = sources.length; i < len; i++){\n                source = sources[i];\n                if (source != null) {\n                    for(key in source){\n                        if (!hasProp.call(source, key)) continue;\n                        target[key] = source[key];\n                    }\n                }\n            }\n        }\n        return target;\n    };\n    isFunction = function(val) {\n        return !!val && Object.prototype.toString.call(val) === \"[object Function]\";\n    };\n    isObject = function(val) {\n        var ref;\n        return !!val && ((ref = typeof val) === \"function\" || ref === \"object\");\n    };\n    isArray = function(val) {\n        if (isFunction(Array.isArray)) {\n            return Array.isArray(val);\n        } else {\n            return Object.prototype.toString.call(val) === \"[object Array]\";\n        }\n    };\n    isEmpty = function(val) {\n        var key;\n        if (isArray(val)) {\n            return !val.length;\n        } else {\n            for(key in val){\n                if (!hasProp.call(val, key)) continue;\n                return false;\n            }\n            return true;\n        }\n    };\n    isPlainObject = function(val) {\n        var ctor, proto;\n        return isObject(val) && (proto = Object.getPrototypeOf(val)) && (ctor = proto.constructor) && typeof ctor === \"function\" && ctor instanceof ctor && Function.prototype.toString.call(ctor) === Function.prototype.toString.call(Object);\n    };\n    getValue = function(obj) {\n        if (isFunction(obj.valueOf)) {\n            return obj.valueOf();\n        } else {\n            return obj;\n        }\n    };\n    module.exports.assign = assign;\n    module.exports.isFunction = isFunction;\n    module.exports.isObject = isObject;\n    module.exports.isArray = isArray;\n    module.exports.isEmpty = isEmpty;\n    module.exports.isPlainObject = isPlainObject;\n    module.exports.getValue = getValue;\n}).call(void 0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL3htbGJ1aWxkZXIvbGliL1V0aWxpdHkuanMiLCJtYXBwaW5ncyI6IjtBQUFBLG1DQUFtQztBQUNsQztJQUNDLElBQUlBLFFBQVFDLFVBQVVDLFNBQVNDLFNBQVNDLFlBQVlDLFVBQVVDLGVBQzVEQyxRQUFRLEVBQUUsQ0FBQ0EsS0FBSyxFQUNoQkMsVUFBVSxDQUFDLEVBQUVDLGNBQWM7SUFFN0JULFNBQVM7UUFDUCxJQUFJVSxHQUFHQyxLQUFLQyxLQUFLQyxRQUFRQyxTQUFTQztRQUNsQ0EsU0FBU0MsU0FBUyxDQUFDLEVBQUUsRUFBRUYsVUFBVSxLQUFLRSxVQUFVQyxNQUFNLEdBQUdWLE1BQU1XLElBQUksQ0FBQ0YsV0FBVyxLQUFLLEVBQUU7UUFDdEYsSUFBSVosV0FBV2UsT0FBT25CLE1BQU0sR0FBRztZQUM3Qm1CLE9BQU9uQixNQUFNLENBQUNvQixLQUFLLENBQUMsTUFBTUo7UUFDNUIsT0FBTztZQUNMLElBQUtOLElBQUksR0FBR0UsTUFBTUUsUUFBUUcsTUFBTSxFQUFFUCxJQUFJRSxLQUFLRixJQUFLO2dCQUM5Q0csU0FBU0MsT0FBTyxDQUFDSixFQUFFO2dCQUNuQixJQUFJRyxVQUFVLE1BQU07b0JBQ2xCLElBQUtGLE9BQU9FLE9BQVE7d0JBQ2xCLElBQUksQ0FBQ0wsUUFBUVUsSUFBSSxDQUFDTCxRQUFRRixNQUFNO3dCQUNoQ0ksTUFBTSxDQUFDSixJQUFJLEdBQUdFLE1BQU0sQ0FBQ0YsSUFBSTtvQkFDM0I7Z0JBQ0Y7WUFDRjtRQUNGO1FBQ0EsT0FBT0k7SUFDVDtJQUVBWCxhQUFhLFNBQVNpQixHQUFHO1FBQ3ZCLE9BQU8sQ0FBQyxDQUFDQSxPQUFPRixPQUFPRyxTQUFTLENBQUNDLFFBQVEsQ0FBQ0wsSUFBSSxDQUFDRyxTQUFTO0lBQzFEO0lBRUFoQixXQUFXLFNBQVNnQixHQUFHO1FBQ3JCLElBQUlHO1FBQ0osT0FBTyxDQUFDLENBQUNILE9BQVEsRUFBQ0csTUFBTSxPQUFPSCxHQUFFLE1BQU8sY0FBY0csUUFBUSxRQUFPO0lBQ3ZFO0lBRUF0QixVQUFVLFNBQVNtQixHQUFHO1FBQ3BCLElBQUlqQixXQUFXcUIsTUFBTXZCLE9BQU8sR0FBRztZQUM3QixPQUFPdUIsTUFBTXZCLE9BQU8sQ0FBQ21CO1FBQ3ZCLE9BQU87WUFDTCxPQUFPRixPQUFPRyxTQUFTLENBQUNDLFFBQVEsQ0FBQ0wsSUFBSSxDQUFDRyxTQUFTO1FBQ2pEO0lBQ0Y7SUFFQWxCLFVBQVUsU0FBU2tCLEdBQUc7UUFDcEIsSUFBSVY7UUFDSixJQUFJVCxRQUFRbUIsTUFBTTtZQUNoQixPQUFPLENBQUNBLElBQUlKLE1BQU07UUFDcEIsT0FBTztZQUNMLElBQUtOLE9BQU9VLElBQUs7Z0JBQ2YsSUFBSSxDQUFDYixRQUFRVSxJQUFJLENBQUNHLEtBQUtWLE1BQU07Z0JBQzdCLE9BQU87WUFDVDtZQUNBLE9BQU87UUFDVDtJQUNGO0lBRUFMLGdCQUFnQixTQUFTZSxHQUFHO1FBQzFCLElBQUlLLE1BQU1DO1FBQ1YsT0FBT3RCLFNBQVNnQixRQUFTTSxDQUFBQSxRQUFRUixPQUFPUyxjQUFjLENBQUNQLElBQUcsS0FBT0ssQ0FBQUEsT0FBT0MsTUFBTUUsV0FBVyxLQUFNLE9BQU9ILFNBQVMsY0FBZ0JBLGdCQUFnQkEsUUFBVUksU0FBU1IsU0FBUyxDQUFDQyxRQUFRLENBQUNMLElBQUksQ0FBQ1EsVUFBVUksU0FBU1IsU0FBUyxDQUFDQyxRQUFRLENBQUNMLElBQUksQ0FBQ0M7SUFDdk87SUFFQWxCLFdBQVcsU0FBUzhCLEdBQUc7UUFDckIsSUFBSTNCLFdBQVcyQixJQUFJQyxPQUFPLEdBQUc7WUFDM0IsT0FBT0QsSUFBSUMsT0FBTztRQUNwQixPQUFPO1lBQ0wsT0FBT0Q7UUFDVDtJQUNGO0lBRUFFLHFCQUFxQixHQUFHakM7SUFFeEJpQyx5QkFBeUIsR0FBRzdCO0lBRTVCNkIsdUJBQXVCLEdBQUc1QjtJQUUxQjRCLHNCQUFzQixHQUFHL0I7SUFFekIrQixzQkFBc0IsR0FBRzlCO0lBRXpCOEIsNEJBQTRCLEdBQUczQjtJQUUvQjJCLHVCQUF1QixHQUFHaEM7QUFFNUIsR0FBR2lCLElBQUksQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2V0cy1hZXJvLWlzby1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMveG1sYnVpbGRlci9saWIvVXRpbGl0eS5qcz9mNmMwIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEdlbmVyYXRlZCBieSBDb2ZmZWVTY3JpcHQgMS4xMi43XG4oZnVuY3Rpb24oKSB7XG4gIHZhciBhc3NpZ24sIGdldFZhbHVlLCBpc0FycmF5LCBpc0VtcHR5LCBpc0Z1bmN0aW9uLCBpc09iamVjdCwgaXNQbGFpbk9iamVjdCxcbiAgICBzbGljZSA9IFtdLnNsaWNlLFxuICAgIGhhc1Byb3AgPSB7fS5oYXNPd25Qcm9wZXJ0eTtcblxuICBhc3NpZ24gPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgaSwga2V5LCBsZW4sIHNvdXJjZSwgc291cmNlcywgdGFyZ2V0O1xuICAgIHRhcmdldCA9IGFyZ3VtZW50c1swXSwgc291cmNlcyA9IDIgPD0gYXJndW1lbnRzLmxlbmd0aCA/IHNsaWNlLmNhbGwoYXJndW1lbnRzLCAxKSA6IFtdO1xuICAgIGlmIChpc0Z1bmN0aW9uKE9iamVjdC5hc3NpZ24pKSB7XG4gICAgICBPYmplY3QuYXNzaWduLmFwcGx5KG51bGwsIGFyZ3VtZW50cyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGZvciAoaSA9IDAsIGxlbiA9IHNvdXJjZXMubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgICAgc291cmNlID0gc291cmNlc1tpXTtcbiAgICAgICAgaWYgKHNvdXJjZSAhPSBudWxsKSB7XG4gICAgICAgICAgZm9yIChrZXkgaW4gc291cmNlKSB7XG4gICAgICAgICAgICBpZiAoIWhhc1Byb3AuY2FsbChzb3VyY2UsIGtleSkpIGNvbnRpbnVlO1xuICAgICAgICAgICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRhcmdldDtcbiAgfTtcblxuICBpc0Z1bmN0aW9uID0gZnVuY3Rpb24odmFsKSB7XG4gICAgcmV0dXJuICEhdmFsICYmIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh2YWwpID09PSAnW29iamVjdCBGdW5jdGlvbl0nO1xuICB9O1xuXG4gIGlzT2JqZWN0ID0gZnVuY3Rpb24odmFsKSB7XG4gICAgdmFyIHJlZjtcbiAgICByZXR1cm4gISF2YWwgJiYgKChyZWYgPSB0eXBlb2YgdmFsKSA9PT0gJ2Z1bmN0aW9uJyB8fCByZWYgPT09ICdvYmplY3QnKTtcbiAgfTtcblxuICBpc0FycmF5ID0gZnVuY3Rpb24odmFsKSB7XG4gICAgaWYgKGlzRnVuY3Rpb24oQXJyYXkuaXNBcnJheSkpIHtcbiAgICAgIHJldHVybiBBcnJheS5pc0FycmF5KHZhbCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodmFsKSA9PT0gJ1tvYmplY3QgQXJyYXldJztcbiAgICB9XG4gIH07XG5cbiAgaXNFbXB0eSA9IGZ1bmN0aW9uKHZhbCkge1xuICAgIHZhciBrZXk7XG4gICAgaWYgKGlzQXJyYXkodmFsKSkge1xuICAgICAgcmV0dXJuICF2YWwubGVuZ3RoO1xuICAgIH0gZWxzZSB7XG4gICAgICBmb3IgKGtleSBpbiB2YWwpIHtcbiAgICAgICAgaWYgKCFoYXNQcm9wLmNhbGwodmFsLCBrZXkpKSBjb250aW51ZTtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICB9O1xuXG4gIGlzUGxhaW5PYmplY3QgPSBmdW5jdGlvbih2YWwpIHtcbiAgICB2YXIgY3RvciwgcHJvdG87XG4gICAgcmV0dXJuIGlzT2JqZWN0KHZhbCkgJiYgKHByb3RvID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKHZhbCkpICYmIChjdG9yID0gcHJvdG8uY29uc3RydWN0b3IpICYmICh0eXBlb2YgY3RvciA9PT0gJ2Z1bmN0aW9uJykgJiYgKGN0b3IgaW5zdGFuY2VvZiBjdG9yKSAmJiAoRnVuY3Rpb24ucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoY3RvcikgPT09IEZ1bmN0aW9uLnByb3RvdHlwZS50b1N0cmluZy5jYWxsKE9iamVjdCkpO1xuICB9O1xuXG4gIGdldFZhbHVlID0gZnVuY3Rpb24ob2JqKSB7XG4gICAgaWYgKGlzRnVuY3Rpb24ob2JqLnZhbHVlT2YpKSB7XG4gICAgICByZXR1cm4gb2JqLnZhbHVlT2YoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIG9iajtcbiAgICB9XG4gIH07XG5cbiAgbW9kdWxlLmV4cG9ydHMuYXNzaWduID0gYXNzaWduO1xuXG4gIG1vZHVsZS5leHBvcnRzLmlzRnVuY3Rpb24gPSBpc0Z1bmN0aW9uO1xuXG4gIG1vZHVsZS5leHBvcnRzLmlzT2JqZWN0ID0gaXNPYmplY3Q7XG5cbiAgbW9kdWxlLmV4cG9ydHMuaXNBcnJheSA9IGlzQXJyYXk7XG5cbiAgbW9kdWxlLmV4cG9ydHMuaXNFbXB0eSA9IGlzRW1wdHk7XG5cbiAgbW9kdWxlLmV4cG9ydHMuaXNQbGFpbk9iamVjdCA9IGlzUGxhaW5PYmplY3Q7XG5cbiAgbW9kdWxlLmV4cG9ydHMuZ2V0VmFsdWUgPSBnZXRWYWx1ZTtcblxufSkuY2FsbCh0aGlzKTtcbiJdLCJuYW1lcyI6WyJhc3NpZ24iLCJnZXRWYWx1ZSIsImlzQXJyYXkiLCJpc0VtcHR5IiwiaXNGdW5jdGlvbiIsImlzT2JqZWN0IiwiaXNQbGFpbk9iamVjdCIsInNsaWNlIiwiaGFzUHJvcCIsImhhc093blByb3BlcnR5IiwiaSIsImtleSIsImxlbiIsInNvdXJjZSIsInNvdXJjZXMiLCJ0YXJnZXQiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJjYWxsIiwiT2JqZWN0IiwiYXBwbHkiLCJ2YWwiLCJwcm90b3R5cGUiLCJ0b1N0cmluZyIsInJlZiIsIkFycmF5IiwiY3RvciIsInByb3RvIiwiZ2V0UHJvdG90eXBlT2YiLCJjb25zdHJ1Y3RvciIsIkZ1bmN0aW9uIiwib2JqIiwidmFsdWVPZiIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/xmlbuilder/lib/Utility.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/xmlbuilder/lib/XMLAttribute.js":
/*!******************************************************!*\
  !*** ../node_modules/xmlbuilder/lib/XMLAttribute.js ***!
  \******************************************************/
/***/ ((module) => {

eval("\n// Generated by CoffeeScript 1.12.7\n(function() {\n    var XMLAttribute;\n    module.exports = XMLAttribute = function() {\n        function XMLAttribute(parent, name, value) {\n            this.options = parent.options;\n            this.stringify = parent.stringify;\n            this.parent = parent;\n            if (name == null) {\n                throw new Error(\"Missing attribute name. \" + this.debugInfo(name));\n            }\n            if (value == null) {\n                throw new Error(\"Missing attribute value. \" + this.debugInfo(name));\n            }\n            this.name = this.stringify.attName(name);\n            this.value = this.stringify.attValue(value);\n        }\n        XMLAttribute.prototype.clone = function() {\n            return Object.create(this);\n        };\n        XMLAttribute.prototype.toString = function(options) {\n            return this.options.writer.set(options).attribute(this);\n        };\n        XMLAttribute.prototype.debugInfo = function(name) {\n            name = name || this.name;\n            if (name == null) {\n                return \"parent: <\" + this.parent.name + \">\";\n            } else {\n                return \"attribute: {\" + name + \"}, parent: <\" + this.parent.name + \">\";\n            }\n        };\n        return XMLAttribute;\n    }();\n}).call(void 0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL3htbGJ1aWxkZXIvbGliL1hNTEF0dHJpYnV0ZS5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsbUNBQW1DO0FBQ2xDO0lBQ0MsSUFBSUE7SUFFSkMsT0FBT0MsT0FBTyxHQUFHRixlQUFlO1FBQzlCLFNBQVNBLGFBQWFHLE1BQU0sRUFBRUMsSUFBSSxFQUFFQyxLQUFLO1lBQ3ZDLElBQUksQ0FBQ0MsT0FBTyxHQUFHSCxPQUFPRyxPQUFPO1lBQzdCLElBQUksQ0FBQ0MsU0FBUyxHQUFHSixPQUFPSSxTQUFTO1lBQ2pDLElBQUksQ0FBQ0osTUFBTSxHQUFHQTtZQUNkLElBQUlDLFFBQVEsTUFBTTtnQkFDaEIsTUFBTSxJQUFJSSxNQUFNLDZCQUE2QixJQUFJLENBQUNDLFNBQVMsQ0FBQ0w7WUFDOUQ7WUFDQSxJQUFJQyxTQUFTLE1BQU07Z0JBQ2pCLE1BQU0sSUFBSUcsTUFBTSw4QkFBOEIsSUFBSSxDQUFDQyxTQUFTLENBQUNMO1lBQy9EO1lBQ0EsSUFBSSxDQUFDQSxJQUFJLEdBQUcsSUFBSSxDQUFDRyxTQUFTLENBQUNHLE9BQU8sQ0FBQ047WUFDbkMsSUFBSSxDQUFDQyxLQUFLLEdBQUcsSUFBSSxDQUFDRSxTQUFTLENBQUNJLFFBQVEsQ0FBQ047UUFDdkM7UUFFQUwsYUFBYVksU0FBUyxDQUFDQyxLQUFLLEdBQUc7WUFDN0IsT0FBT0MsT0FBT0MsTUFBTSxDQUFDLElBQUk7UUFDM0I7UUFFQWYsYUFBYVksU0FBUyxDQUFDSSxRQUFRLEdBQUcsU0FBU1YsT0FBTztZQUNoRCxPQUFPLElBQUksQ0FBQ0EsT0FBTyxDQUFDVyxNQUFNLENBQUNDLEdBQUcsQ0FBQ1osU0FBU2EsU0FBUyxDQUFDLElBQUk7UUFDeEQ7UUFFQW5CLGFBQWFZLFNBQVMsQ0FBQ0gsU0FBUyxHQUFHLFNBQVNMLElBQUk7WUFDOUNBLE9BQU9BLFFBQVEsSUFBSSxDQUFDQSxJQUFJO1lBQ3hCLElBQUlBLFFBQVEsTUFBTTtnQkFDaEIsT0FBTyxjQUFjLElBQUksQ0FBQ0QsTUFBTSxDQUFDQyxJQUFJLEdBQUc7WUFDMUMsT0FBTztnQkFDTCxPQUFPLGlCQUFpQkEsT0FBTyxpQkFBaUIsSUFBSSxDQUFDRCxNQUFNLENBQUNDLElBQUksR0FBRztZQUNyRTtRQUNGO1FBRUEsT0FBT0o7SUFFVDtBQUVGLEdBQUdvQixJQUFJLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ldHMtYWVyby1pc28tZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL3htbGJ1aWxkZXIvbGliL1hNTEF0dHJpYnV0ZS5qcz82OTg5Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEdlbmVyYXRlZCBieSBDb2ZmZWVTY3JpcHQgMS4xMi43XG4oZnVuY3Rpb24oKSB7XG4gIHZhciBYTUxBdHRyaWJ1dGU7XG5cbiAgbW9kdWxlLmV4cG9ydHMgPSBYTUxBdHRyaWJ1dGUgPSAoZnVuY3Rpb24oKSB7XG4gICAgZnVuY3Rpb24gWE1MQXR0cmlidXRlKHBhcmVudCwgbmFtZSwgdmFsdWUpIHtcbiAgICAgIHRoaXMub3B0aW9ucyA9IHBhcmVudC5vcHRpb25zO1xuICAgICAgdGhpcy5zdHJpbmdpZnkgPSBwYXJlbnQuc3RyaW5naWZ5O1xuICAgICAgdGhpcy5wYXJlbnQgPSBwYXJlbnQ7XG4gICAgICBpZiAobmFtZSA9PSBudWxsKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIk1pc3NpbmcgYXR0cmlidXRlIG5hbWUuIFwiICsgdGhpcy5kZWJ1Z0luZm8obmFtZSkpO1xuICAgICAgfVxuICAgICAgaWYgKHZhbHVlID09IG51bGwpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTWlzc2luZyBhdHRyaWJ1dGUgdmFsdWUuIFwiICsgdGhpcy5kZWJ1Z0luZm8obmFtZSkpO1xuICAgICAgfVxuICAgICAgdGhpcy5uYW1lID0gdGhpcy5zdHJpbmdpZnkuYXR0TmFtZShuYW1lKTtcbiAgICAgIHRoaXMudmFsdWUgPSB0aGlzLnN0cmluZ2lmeS5hdHRWYWx1ZSh2YWx1ZSk7XG4gICAgfVxuXG4gICAgWE1MQXR0cmlidXRlLnByb3RvdHlwZS5jbG9uZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIE9iamVjdC5jcmVhdGUodGhpcyk7XG4gICAgfTtcblxuICAgIFhNTEF0dHJpYnV0ZS5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbihvcHRpb25zKSB7XG4gICAgICByZXR1cm4gdGhpcy5vcHRpb25zLndyaXRlci5zZXQob3B0aW9ucykuYXR0cmlidXRlKHRoaXMpO1xuICAgIH07XG5cbiAgICBYTUxBdHRyaWJ1dGUucHJvdG90eXBlLmRlYnVnSW5mbyA9IGZ1bmN0aW9uKG5hbWUpIHtcbiAgICAgIG5hbWUgPSBuYW1lIHx8IHRoaXMubmFtZTtcbiAgICAgIGlmIChuYW1lID09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIFwicGFyZW50OiA8XCIgKyB0aGlzLnBhcmVudC5uYW1lICsgXCI+XCI7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gXCJhdHRyaWJ1dGU6IHtcIiArIG5hbWUgKyBcIn0sIHBhcmVudDogPFwiICsgdGhpcy5wYXJlbnQubmFtZSArIFwiPlwiO1xuICAgICAgfVxuICAgIH07XG5cbiAgICByZXR1cm4gWE1MQXR0cmlidXRlO1xuXG4gIH0pKCk7XG5cbn0pLmNhbGwodGhpcyk7XG4iXSwibmFtZXMiOlsiWE1MQXR0cmlidXRlIiwibW9kdWxlIiwiZXhwb3J0cyIsInBhcmVudCIsIm5hbWUiLCJ2YWx1ZSIsIm9wdGlvbnMiLCJzdHJpbmdpZnkiLCJFcnJvciIsImRlYnVnSW5mbyIsImF0dE5hbWUiLCJhdHRWYWx1ZSIsInByb3RvdHlwZSIsImNsb25lIiwiT2JqZWN0IiwiY3JlYXRlIiwidG9TdHJpbmciLCJ3cml0ZXIiLCJzZXQiLCJhdHRyaWJ1dGUiLCJjYWxsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/xmlbuilder/lib/XMLAttribute.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/xmlbuilder/lib/XMLCData.js":
/*!**************************************************!*\
  !*** ../node_modules/xmlbuilder/lib/XMLCData.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n// Generated by CoffeeScript 1.12.7\n(function() {\n    var XMLCData, XMLNode, extend = function(child, parent) {\n        for(var key in parent){\n            if (hasProp.call(parent, key)) child[key] = parent[key];\n        }\n        function ctor() {\n            this.constructor = child;\n        }\n        ctor.prototype = parent.prototype;\n        child.prototype = new ctor();\n        child.__super__ = parent.prototype;\n        return child;\n    }, hasProp = {}.hasOwnProperty;\n    XMLNode = __webpack_require__(/*! ./XMLNode */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLNode.js\");\n    module.exports = XMLCData = function(superClass) {\n        extend(XMLCData, superClass);\n        function XMLCData(parent, text) {\n            XMLCData.__super__.constructor.call(this, parent);\n            if (text == null) {\n                throw new Error(\"Missing CDATA text. \" + this.debugInfo());\n            }\n            this.text = this.stringify.cdata(text);\n        }\n        XMLCData.prototype.clone = function() {\n            return Object.create(this);\n        };\n        XMLCData.prototype.toString = function(options) {\n            return this.options.writer.set(options).cdata(this);\n        };\n        return XMLCData;\n    }(XMLNode);\n}).call(void 0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL3htbGJ1aWxkZXIvbGliL1hNTENEYXRhLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxtQ0FBbUM7QUFDbEM7SUFDQyxJQUFJQSxVQUFVQyxTQUNaQyxTQUFTLFNBQVNDLEtBQUssRUFBRUMsTUFBTTtRQUFJLElBQUssSUFBSUMsT0FBT0QsT0FBUTtZQUFFLElBQUlFLFFBQVFDLElBQUksQ0FBQ0gsUUFBUUMsTUFBTUYsS0FBSyxDQUFDRSxJQUFJLEdBQUdELE1BQU0sQ0FBQ0MsSUFBSTtRQUFFO1FBQUUsU0FBU0c7WUFBUyxJQUFJLENBQUNDLFdBQVcsR0FBR047UUFBTztRQUFFSyxLQUFLRSxTQUFTLEdBQUdOLE9BQU9NLFNBQVM7UUFBRVAsTUFBTU8sU0FBUyxHQUFHLElBQUlGO1FBQVFMLE1BQU1RLFNBQVMsR0FBR1AsT0FBT00sU0FBUztRQUFFLE9BQU9QO0lBQU8sR0FDelJHLFVBQVUsQ0FBQyxFQUFFTSxjQUFjO0lBRTdCWCxVQUFVWSxtQkFBT0EsQ0FBQztJQUVsQkMsT0FBT0MsT0FBTyxHQUFHZixXQUFXLFNBQVVnQixVQUFVO1FBQzlDZCxPQUFPRixVQUFVZ0I7UUFFakIsU0FBU2hCLFNBQVNJLE1BQU0sRUFBRWEsSUFBSTtZQUM1QmpCLFNBQVNXLFNBQVMsQ0FBQ0YsV0FBVyxDQUFDRixJQUFJLENBQUMsSUFBSSxFQUFFSDtZQUMxQyxJQUFJYSxRQUFRLE1BQU07Z0JBQ2hCLE1BQU0sSUFBSUMsTUFBTSx5QkFBeUIsSUFBSSxDQUFDQyxTQUFTO1lBQ3pEO1lBQ0EsSUFBSSxDQUFDRixJQUFJLEdBQUcsSUFBSSxDQUFDRyxTQUFTLENBQUNDLEtBQUssQ0FBQ0o7UUFDbkM7UUFFQWpCLFNBQVNVLFNBQVMsQ0FBQ1ksS0FBSyxHQUFHO1lBQ3pCLE9BQU9DLE9BQU9DLE1BQU0sQ0FBQyxJQUFJO1FBQzNCO1FBRUF4QixTQUFTVSxTQUFTLENBQUNlLFFBQVEsR0FBRyxTQUFTQyxPQUFPO1lBQzVDLE9BQU8sSUFBSSxDQUFDQSxPQUFPLENBQUNDLE1BQU0sQ0FBQ0MsR0FBRyxDQUFDRixTQUFTTCxLQUFLLENBQUMsSUFBSTtRQUNwRDtRQUVBLE9BQU9yQjtJQUVULEVBQUdDO0FBRUwsR0FBR00sSUFBSSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZXRzLWFlcm8taXNvLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy94bWxidWlsZGVyL2xpYi9YTUxDRGF0YS5qcz8zNmNiIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEdlbmVyYXRlZCBieSBDb2ZmZWVTY3JpcHQgMS4xMi43XG4oZnVuY3Rpb24oKSB7XG4gIHZhciBYTUxDRGF0YSwgWE1MTm9kZSxcbiAgICBleHRlbmQgPSBmdW5jdGlvbihjaGlsZCwgcGFyZW50KSB7IGZvciAodmFyIGtleSBpbiBwYXJlbnQpIHsgaWYgKGhhc1Byb3AuY2FsbChwYXJlbnQsIGtleSkpIGNoaWxkW2tleV0gPSBwYXJlbnRba2V5XTsgfSBmdW5jdGlvbiBjdG9yKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gY2hpbGQ7IH0gY3Rvci5wcm90b3R5cGUgPSBwYXJlbnQucHJvdG90eXBlOyBjaGlsZC5wcm90b3R5cGUgPSBuZXcgY3RvcigpOyBjaGlsZC5fX3N1cGVyX18gPSBwYXJlbnQucHJvdG90eXBlOyByZXR1cm4gY2hpbGQ7IH0sXG4gICAgaGFzUHJvcCA9IHt9Lmhhc093blByb3BlcnR5O1xuXG4gIFhNTE5vZGUgPSByZXF1aXJlKCcuL1hNTE5vZGUnKTtcblxuICBtb2R1bGUuZXhwb3J0cyA9IFhNTENEYXRhID0gKGZ1bmN0aW9uKHN1cGVyQ2xhc3MpIHtcbiAgICBleHRlbmQoWE1MQ0RhdGEsIHN1cGVyQ2xhc3MpO1xuXG4gICAgZnVuY3Rpb24gWE1MQ0RhdGEocGFyZW50LCB0ZXh0KSB7XG4gICAgICBYTUxDRGF0YS5fX3N1cGVyX18uY29uc3RydWN0b3IuY2FsbCh0aGlzLCBwYXJlbnQpO1xuICAgICAgaWYgKHRleHQgPT0gbnVsbCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJNaXNzaW5nIENEQVRBIHRleHQuIFwiICsgdGhpcy5kZWJ1Z0luZm8oKSk7XG4gICAgICB9XG4gICAgICB0aGlzLnRleHQgPSB0aGlzLnN0cmluZ2lmeS5jZGF0YSh0ZXh0KTtcbiAgICB9XG5cbiAgICBYTUxDRGF0YS5wcm90b3R5cGUuY2xvbmUgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBPYmplY3QuY3JlYXRlKHRoaXMpO1xuICAgIH07XG5cbiAgICBYTUxDRGF0YS5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbihvcHRpb25zKSB7XG4gICAgICByZXR1cm4gdGhpcy5vcHRpb25zLndyaXRlci5zZXQob3B0aW9ucykuY2RhdGEodGhpcyk7XG4gICAgfTtcblxuICAgIHJldHVybiBYTUxDRGF0YTtcblxuICB9KShYTUxOb2RlKTtcblxufSkuY2FsbCh0aGlzKTtcbiJdLCJuYW1lcyI6WyJYTUxDRGF0YSIsIlhNTE5vZGUiLCJleHRlbmQiLCJjaGlsZCIsInBhcmVudCIsImtleSIsImhhc1Byb3AiLCJjYWxsIiwiY3RvciIsImNvbnN0cnVjdG9yIiwicHJvdG90eXBlIiwiX19zdXBlcl9fIiwiaGFzT3duUHJvcGVydHkiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsInN1cGVyQ2xhc3MiLCJ0ZXh0IiwiRXJyb3IiLCJkZWJ1Z0luZm8iLCJzdHJpbmdpZnkiLCJjZGF0YSIsImNsb25lIiwiT2JqZWN0IiwiY3JlYXRlIiwidG9TdHJpbmciLCJvcHRpb25zIiwid3JpdGVyIiwic2V0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/xmlbuilder/lib/XMLCData.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/xmlbuilder/lib/XMLComment.js":
/*!****************************************************!*\
  !*** ../node_modules/xmlbuilder/lib/XMLComment.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n// Generated by CoffeeScript 1.12.7\n(function() {\n    var XMLComment, XMLNode, extend = function(child, parent) {\n        for(var key in parent){\n            if (hasProp.call(parent, key)) child[key] = parent[key];\n        }\n        function ctor() {\n            this.constructor = child;\n        }\n        ctor.prototype = parent.prototype;\n        child.prototype = new ctor();\n        child.__super__ = parent.prototype;\n        return child;\n    }, hasProp = {}.hasOwnProperty;\n    XMLNode = __webpack_require__(/*! ./XMLNode */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLNode.js\");\n    module.exports = XMLComment = function(superClass) {\n        extend(XMLComment, superClass);\n        function XMLComment(parent, text) {\n            XMLComment.__super__.constructor.call(this, parent);\n            if (text == null) {\n                throw new Error(\"Missing comment text. \" + this.debugInfo());\n            }\n            this.text = this.stringify.comment(text);\n        }\n        XMLComment.prototype.clone = function() {\n            return Object.create(this);\n        };\n        XMLComment.prototype.toString = function(options) {\n            return this.options.writer.set(options).comment(this);\n        };\n        return XMLComment;\n    }(XMLNode);\n}).call(void 0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL3htbGJ1aWxkZXIvbGliL1hNTENvbW1lbnQuanMiLCJtYXBwaW5ncyI6IjtBQUFBLG1DQUFtQztBQUNsQztJQUNDLElBQUlBLFlBQVlDLFNBQ2RDLFNBQVMsU0FBU0MsS0FBSyxFQUFFQyxNQUFNO1FBQUksSUFBSyxJQUFJQyxPQUFPRCxPQUFRO1lBQUUsSUFBSUUsUUFBUUMsSUFBSSxDQUFDSCxRQUFRQyxNQUFNRixLQUFLLENBQUNFLElBQUksR0FBR0QsTUFBTSxDQUFDQyxJQUFJO1FBQUU7UUFBRSxTQUFTRztZQUFTLElBQUksQ0FBQ0MsV0FBVyxHQUFHTjtRQUFPO1FBQUVLLEtBQUtFLFNBQVMsR0FBR04sT0FBT00sU0FBUztRQUFFUCxNQUFNTyxTQUFTLEdBQUcsSUFBSUY7UUFBUUwsTUFBTVEsU0FBUyxHQUFHUCxPQUFPTSxTQUFTO1FBQUUsT0FBT1A7SUFBTyxHQUN6UkcsVUFBVSxDQUFDLEVBQUVNLGNBQWM7SUFFN0JYLFVBQVVZLG1CQUFPQSxDQUFDO0lBRWxCQyxPQUFPQyxPQUFPLEdBQUdmLGFBQWEsU0FBVWdCLFVBQVU7UUFDaERkLE9BQU9GLFlBQVlnQjtRQUVuQixTQUFTaEIsV0FBV0ksTUFBTSxFQUFFYSxJQUFJO1lBQzlCakIsV0FBV1csU0FBUyxDQUFDRixXQUFXLENBQUNGLElBQUksQ0FBQyxJQUFJLEVBQUVIO1lBQzVDLElBQUlhLFFBQVEsTUFBTTtnQkFDaEIsTUFBTSxJQUFJQyxNQUFNLDJCQUEyQixJQUFJLENBQUNDLFNBQVM7WUFDM0Q7WUFDQSxJQUFJLENBQUNGLElBQUksR0FBRyxJQUFJLENBQUNHLFNBQVMsQ0FBQ0MsT0FBTyxDQUFDSjtRQUNyQztRQUVBakIsV0FBV1UsU0FBUyxDQUFDWSxLQUFLLEdBQUc7WUFDM0IsT0FBT0MsT0FBT0MsTUFBTSxDQUFDLElBQUk7UUFDM0I7UUFFQXhCLFdBQVdVLFNBQVMsQ0FBQ2UsUUFBUSxHQUFHLFNBQVNDLE9BQU87WUFDOUMsT0FBTyxJQUFJLENBQUNBLE9BQU8sQ0FBQ0MsTUFBTSxDQUFDQyxHQUFHLENBQUNGLFNBQVNMLE9BQU8sQ0FBQyxJQUFJO1FBQ3REO1FBRUEsT0FBT3JCO0lBRVQsRUFBR0M7QUFFTCxHQUFHTSxJQUFJLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ldHMtYWVyby1pc28tZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL3htbGJ1aWxkZXIvbGliL1hNTENvbW1lbnQuanM/ZDA2OSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBHZW5lcmF0ZWQgYnkgQ29mZmVlU2NyaXB0IDEuMTIuN1xuKGZ1bmN0aW9uKCkge1xuICB2YXIgWE1MQ29tbWVudCwgWE1MTm9kZSxcbiAgICBleHRlbmQgPSBmdW5jdGlvbihjaGlsZCwgcGFyZW50KSB7IGZvciAodmFyIGtleSBpbiBwYXJlbnQpIHsgaWYgKGhhc1Byb3AuY2FsbChwYXJlbnQsIGtleSkpIGNoaWxkW2tleV0gPSBwYXJlbnRba2V5XTsgfSBmdW5jdGlvbiBjdG9yKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gY2hpbGQ7IH0gY3Rvci5wcm90b3R5cGUgPSBwYXJlbnQucHJvdG90eXBlOyBjaGlsZC5wcm90b3R5cGUgPSBuZXcgY3RvcigpOyBjaGlsZC5fX3N1cGVyX18gPSBwYXJlbnQucHJvdG90eXBlOyByZXR1cm4gY2hpbGQ7IH0sXG4gICAgaGFzUHJvcCA9IHt9Lmhhc093blByb3BlcnR5O1xuXG4gIFhNTE5vZGUgPSByZXF1aXJlKCcuL1hNTE5vZGUnKTtcblxuICBtb2R1bGUuZXhwb3J0cyA9IFhNTENvbW1lbnQgPSAoZnVuY3Rpb24oc3VwZXJDbGFzcykge1xuICAgIGV4dGVuZChYTUxDb21tZW50LCBzdXBlckNsYXNzKTtcblxuICAgIGZ1bmN0aW9uIFhNTENvbW1lbnQocGFyZW50LCB0ZXh0KSB7XG4gICAgICBYTUxDb21tZW50Ll9fc3VwZXJfXy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsIHBhcmVudCk7XG4gICAgICBpZiAodGV4dCA9PSBudWxsKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIk1pc3NpbmcgY29tbWVudCB0ZXh0LiBcIiArIHRoaXMuZGVidWdJbmZvKCkpO1xuICAgICAgfVxuICAgICAgdGhpcy50ZXh0ID0gdGhpcy5zdHJpbmdpZnkuY29tbWVudCh0ZXh0KTtcbiAgICB9XG5cbiAgICBYTUxDb21tZW50LnByb3RvdHlwZS5jbG9uZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIE9iamVjdC5jcmVhdGUodGhpcyk7XG4gICAgfTtcblxuICAgIFhNTENvbW1lbnQucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24ob3B0aW9ucykge1xuICAgICAgcmV0dXJuIHRoaXMub3B0aW9ucy53cml0ZXIuc2V0KG9wdGlvbnMpLmNvbW1lbnQodGhpcyk7XG4gICAgfTtcblxuICAgIHJldHVybiBYTUxDb21tZW50O1xuXG4gIH0pKFhNTE5vZGUpO1xuXG59KS5jYWxsKHRoaXMpO1xuIl0sIm5hbWVzIjpbIlhNTENvbW1lbnQiLCJYTUxOb2RlIiwiZXh0ZW5kIiwiY2hpbGQiLCJwYXJlbnQiLCJrZXkiLCJoYXNQcm9wIiwiY2FsbCIsImN0b3IiLCJjb25zdHJ1Y3RvciIsInByb3RvdHlwZSIsIl9fc3VwZXJfXyIsImhhc093blByb3BlcnR5IiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJzdXBlckNsYXNzIiwidGV4dCIsIkVycm9yIiwiZGVidWdJbmZvIiwic3RyaW5naWZ5IiwiY29tbWVudCIsImNsb25lIiwiT2JqZWN0IiwiY3JlYXRlIiwidG9TdHJpbmciLCJvcHRpb25zIiwid3JpdGVyIiwic2V0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/xmlbuilder/lib/XMLComment.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/xmlbuilder/lib/XMLDTDAttList.js":
/*!*******************************************************!*\
  !*** ../node_modules/xmlbuilder/lib/XMLDTDAttList.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n// Generated by CoffeeScript 1.12.7\n(function() {\n    var XMLDTDAttList, XMLNode, extend = function(child, parent) {\n        for(var key in parent){\n            if (hasProp.call(parent, key)) child[key] = parent[key];\n        }\n        function ctor() {\n            this.constructor = child;\n        }\n        ctor.prototype = parent.prototype;\n        child.prototype = new ctor();\n        child.__super__ = parent.prototype;\n        return child;\n    }, hasProp = {}.hasOwnProperty;\n    XMLNode = __webpack_require__(/*! ./XMLNode */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLNode.js\");\n    module.exports = XMLDTDAttList = function(superClass) {\n        extend(XMLDTDAttList, superClass);\n        function XMLDTDAttList(parent, elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n            XMLDTDAttList.__super__.constructor.call(this, parent);\n            if (elementName == null) {\n                throw new Error(\"Missing DTD element name. \" + this.debugInfo());\n            }\n            if (attributeName == null) {\n                throw new Error(\"Missing DTD attribute name. \" + this.debugInfo(elementName));\n            }\n            if (!attributeType) {\n                throw new Error(\"Missing DTD attribute type. \" + this.debugInfo(elementName));\n            }\n            if (!defaultValueType) {\n                throw new Error(\"Missing DTD attribute default. \" + this.debugInfo(elementName));\n            }\n            if (defaultValueType.indexOf(\"#\") !== 0) {\n                defaultValueType = \"#\" + defaultValueType;\n            }\n            if (!defaultValueType.match(/^(#REQUIRED|#IMPLIED|#FIXED|#DEFAULT)$/)) {\n                throw new Error(\"Invalid default value type; expected: #REQUIRED, #IMPLIED, #FIXED or #DEFAULT. \" + this.debugInfo(elementName));\n            }\n            if (defaultValue && !defaultValueType.match(/^(#FIXED|#DEFAULT)$/)) {\n                throw new Error(\"Default value only applies to #FIXED or #DEFAULT. \" + this.debugInfo(elementName));\n            }\n            this.elementName = this.stringify.eleName(elementName);\n            this.attributeName = this.stringify.attName(attributeName);\n            this.attributeType = this.stringify.dtdAttType(attributeType);\n            this.defaultValue = this.stringify.dtdAttDefault(defaultValue);\n            this.defaultValueType = defaultValueType;\n        }\n        XMLDTDAttList.prototype.toString = function(options) {\n            return this.options.writer.set(options).dtdAttList(this);\n        };\n        return XMLDTDAttList;\n    }(XMLNode);\n}).call(void 0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL3htbGJ1aWxkZXIvbGliL1hNTERUREF0dExpc3QuanMiLCJtYXBwaW5ncyI6IjtBQUFBLG1DQUFtQztBQUNsQztJQUNDLElBQUlBLGVBQWVDLFNBQ2pCQyxTQUFTLFNBQVNDLEtBQUssRUFBRUMsTUFBTTtRQUFJLElBQUssSUFBSUMsT0FBT0QsT0FBUTtZQUFFLElBQUlFLFFBQVFDLElBQUksQ0FBQ0gsUUFBUUMsTUFBTUYsS0FBSyxDQUFDRSxJQUFJLEdBQUdELE1BQU0sQ0FBQ0MsSUFBSTtRQUFFO1FBQUUsU0FBU0c7WUFBUyxJQUFJLENBQUNDLFdBQVcsR0FBR047UUFBTztRQUFFSyxLQUFLRSxTQUFTLEdBQUdOLE9BQU9NLFNBQVM7UUFBRVAsTUFBTU8sU0FBUyxHQUFHLElBQUlGO1FBQVFMLE1BQU1RLFNBQVMsR0FBR1AsT0FBT00sU0FBUztRQUFFLE9BQU9QO0lBQU8sR0FDelJHLFVBQVUsQ0FBQyxFQUFFTSxjQUFjO0lBRTdCWCxVQUFVWSxtQkFBT0EsQ0FBQztJQUVsQkMsT0FBT0MsT0FBTyxHQUFHZixnQkFBZ0IsU0FBVWdCLFVBQVU7UUFDbkRkLE9BQU9GLGVBQWVnQjtRQUV0QixTQUFTaEIsY0FBY0ksTUFBTSxFQUFFYSxXQUFXLEVBQUVDLGFBQWEsRUFBRUMsYUFBYSxFQUFFQyxnQkFBZ0IsRUFBRUMsWUFBWTtZQUN0R3JCLGNBQWNXLFNBQVMsQ0FBQ0YsV0FBVyxDQUFDRixJQUFJLENBQUMsSUFBSSxFQUFFSDtZQUMvQyxJQUFJYSxlQUFlLE1BQU07Z0JBQ3ZCLE1BQU0sSUFBSUssTUFBTSwrQkFBK0IsSUFBSSxDQUFDQyxTQUFTO1lBQy9EO1lBQ0EsSUFBSUwsaUJBQWlCLE1BQU07Z0JBQ3pCLE1BQU0sSUFBSUksTUFBTSxpQ0FBaUMsSUFBSSxDQUFDQyxTQUFTLENBQUNOO1lBQ2xFO1lBQ0EsSUFBSSxDQUFDRSxlQUFlO2dCQUNsQixNQUFNLElBQUlHLE1BQU0saUNBQWlDLElBQUksQ0FBQ0MsU0FBUyxDQUFDTjtZQUNsRTtZQUNBLElBQUksQ0FBQ0csa0JBQWtCO2dCQUNyQixNQUFNLElBQUlFLE1BQU0sb0NBQW9DLElBQUksQ0FBQ0MsU0FBUyxDQUFDTjtZQUNyRTtZQUNBLElBQUlHLGlCQUFpQkksT0FBTyxDQUFDLFNBQVMsR0FBRztnQkFDdkNKLG1CQUFtQixNQUFNQTtZQUMzQjtZQUNBLElBQUksQ0FBQ0EsaUJBQWlCSyxLQUFLLENBQUMsMkNBQTJDO2dCQUNyRSxNQUFNLElBQUlILE1BQU0sb0ZBQW9GLElBQUksQ0FBQ0MsU0FBUyxDQUFDTjtZQUNySDtZQUNBLElBQUlJLGdCQUFnQixDQUFDRCxpQkFBaUJLLEtBQUssQ0FBQyx3QkFBd0I7Z0JBQ2xFLE1BQU0sSUFBSUgsTUFBTSx1REFBdUQsSUFBSSxDQUFDQyxTQUFTLENBQUNOO1lBQ3hGO1lBQ0EsSUFBSSxDQUFDQSxXQUFXLEdBQUcsSUFBSSxDQUFDUyxTQUFTLENBQUNDLE9BQU8sQ0FBQ1Y7WUFDMUMsSUFBSSxDQUFDQyxhQUFhLEdBQUcsSUFBSSxDQUFDUSxTQUFTLENBQUNFLE9BQU8sQ0FBQ1Y7WUFDNUMsSUFBSSxDQUFDQyxhQUFhLEdBQUcsSUFBSSxDQUFDTyxTQUFTLENBQUNHLFVBQVUsQ0FBQ1Y7WUFDL0MsSUFBSSxDQUFDRSxZQUFZLEdBQUcsSUFBSSxDQUFDSyxTQUFTLENBQUNJLGFBQWEsQ0FBQ1Q7WUFDakQsSUFBSSxDQUFDRCxnQkFBZ0IsR0FBR0E7UUFDMUI7UUFFQXBCLGNBQWNVLFNBQVMsQ0FBQ3FCLFFBQVEsR0FBRyxTQUFTQyxPQUFPO1lBQ2pELE9BQU8sSUFBSSxDQUFDQSxPQUFPLENBQUNDLE1BQU0sQ0FBQ0MsR0FBRyxDQUFDRixTQUFTRyxVQUFVLENBQUMsSUFBSTtRQUN6RDtRQUVBLE9BQU9uQztJQUVULEVBQUdDO0FBRUwsR0FBR00sSUFBSSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZXRzLWFlcm8taXNvLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy94bWxidWlsZGVyL2xpYi9YTUxEVERBdHRMaXN0LmpzPzgzZWIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gR2VuZXJhdGVkIGJ5IENvZmZlZVNjcmlwdCAxLjEyLjdcbihmdW5jdGlvbigpIHtcbiAgdmFyIFhNTERUREF0dExpc3QsIFhNTE5vZGUsXG4gICAgZXh0ZW5kID0gZnVuY3Rpb24oY2hpbGQsIHBhcmVudCkgeyBmb3IgKHZhciBrZXkgaW4gcGFyZW50KSB7IGlmIChoYXNQcm9wLmNhbGwocGFyZW50LCBrZXkpKSBjaGlsZFtrZXldID0gcGFyZW50W2tleV07IH0gZnVuY3Rpb24gY3RvcigpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGNoaWxkOyB9IGN0b3IucHJvdG90eXBlID0gcGFyZW50LnByb3RvdHlwZTsgY2hpbGQucHJvdG90eXBlID0gbmV3IGN0b3IoKTsgY2hpbGQuX19zdXBlcl9fID0gcGFyZW50LnByb3RvdHlwZTsgcmV0dXJuIGNoaWxkOyB9LFxuICAgIGhhc1Byb3AgPSB7fS5oYXNPd25Qcm9wZXJ0eTtcblxuICBYTUxOb2RlID0gcmVxdWlyZSgnLi9YTUxOb2RlJyk7XG5cbiAgbW9kdWxlLmV4cG9ydHMgPSBYTUxEVERBdHRMaXN0ID0gKGZ1bmN0aW9uKHN1cGVyQ2xhc3MpIHtcbiAgICBleHRlbmQoWE1MRFREQXR0TGlzdCwgc3VwZXJDbGFzcyk7XG5cbiAgICBmdW5jdGlvbiBYTUxEVERBdHRMaXN0KHBhcmVudCwgZWxlbWVudE5hbWUsIGF0dHJpYnV0ZU5hbWUsIGF0dHJpYnV0ZVR5cGUsIGRlZmF1bHRWYWx1ZVR5cGUsIGRlZmF1bHRWYWx1ZSkge1xuICAgICAgWE1MRFREQXR0TGlzdC5fX3N1cGVyX18uY29uc3RydWN0b3IuY2FsbCh0aGlzLCBwYXJlbnQpO1xuICAgICAgaWYgKGVsZW1lbnROYW1lID09IG51bGwpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTWlzc2luZyBEVEQgZWxlbWVudCBuYW1lLiBcIiArIHRoaXMuZGVidWdJbmZvKCkpO1xuICAgICAgfVxuICAgICAgaWYgKGF0dHJpYnV0ZU5hbWUgPT0gbnVsbCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJNaXNzaW5nIERURCBhdHRyaWJ1dGUgbmFtZS4gXCIgKyB0aGlzLmRlYnVnSW5mbyhlbGVtZW50TmFtZSkpO1xuICAgICAgfVxuICAgICAgaWYgKCFhdHRyaWJ1dGVUeXBlKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIk1pc3NpbmcgRFREIGF0dHJpYnV0ZSB0eXBlLiBcIiArIHRoaXMuZGVidWdJbmZvKGVsZW1lbnROYW1lKSk7XG4gICAgICB9XG4gICAgICBpZiAoIWRlZmF1bHRWYWx1ZVR5cGUpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTWlzc2luZyBEVEQgYXR0cmlidXRlIGRlZmF1bHQuIFwiICsgdGhpcy5kZWJ1Z0luZm8oZWxlbWVudE5hbWUpKTtcbiAgICAgIH1cbiAgICAgIGlmIChkZWZhdWx0VmFsdWVUeXBlLmluZGV4T2YoJyMnKSAhPT0gMCkge1xuICAgICAgICBkZWZhdWx0VmFsdWVUeXBlID0gJyMnICsgZGVmYXVsdFZhbHVlVHlwZTtcbiAgICAgIH1cbiAgICAgIGlmICghZGVmYXVsdFZhbHVlVHlwZS5tYXRjaCgvXigjUkVRVUlSRUR8I0lNUExJRUR8I0ZJWEVEfCNERUZBVUxUKSQvKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGRlZmF1bHQgdmFsdWUgdHlwZTsgZXhwZWN0ZWQ6ICNSRVFVSVJFRCwgI0lNUExJRUQsICNGSVhFRCBvciAjREVGQVVMVC4gXCIgKyB0aGlzLmRlYnVnSW5mbyhlbGVtZW50TmFtZSkpO1xuICAgICAgfVxuICAgICAgaWYgKGRlZmF1bHRWYWx1ZSAmJiAhZGVmYXVsdFZhbHVlVHlwZS5tYXRjaCgvXigjRklYRUR8I0RFRkFVTFQpJC8pKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkRlZmF1bHQgdmFsdWUgb25seSBhcHBsaWVzIHRvICNGSVhFRCBvciAjREVGQVVMVC4gXCIgKyB0aGlzLmRlYnVnSW5mbyhlbGVtZW50TmFtZSkpO1xuICAgICAgfVxuICAgICAgdGhpcy5lbGVtZW50TmFtZSA9IHRoaXMuc3RyaW5naWZ5LmVsZU5hbWUoZWxlbWVudE5hbWUpO1xuICAgICAgdGhpcy5hdHRyaWJ1dGVOYW1lID0gdGhpcy5zdHJpbmdpZnkuYXR0TmFtZShhdHRyaWJ1dGVOYW1lKTtcbiAgICAgIHRoaXMuYXR0cmlidXRlVHlwZSA9IHRoaXMuc3RyaW5naWZ5LmR0ZEF0dFR5cGUoYXR0cmlidXRlVHlwZSk7XG4gICAgICB0aGlzLmRlZmF1bHRWYWx1ZSA9IHRoaXMuc3RyaW5naWZ5LmR0ZEF0dERlZmF1bHQoZGVmYXVsdFZhbHVlKTtcbiAgICAgIHRoaXMuZGVmYXVsdFZhbHVlVHlwZSA9IGRlZmF1bHRWYWx1ZVR5cGU7XG4gICAgfVxuXG4gICAgWE1MRFREQXR0TGlzdC5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbihvcHRpb25zKSB7XG4gICAgICByZXR1cm4gdGhpcy5vcHRpb25zLndyaXRlci5zZXQob3B0aW9ucykuZHRkQXR0TGlzdCh0aGlzKTtcbiAgICB9O1xuXG4gICAgcmV0dXJuIFhNTERUREF0dExpc3Q7XG5cbiAgfSkoWE1MTm9kZSk7XG5cbn0pLmNhbGwodGhpcyk7XG4iXSwibmFtZXMiOlsiWE1MRFREQXR0TGlzdCIsIlhNTE5vZGUiLCJleHRlbmQiLCJjaGlsZCIsInBhcmVudCIsImtleSIsImhhc1Byb3AiLCJjYWxsIiwiY3RvciIsImNvbnN0cnVjdG9yIiwicHJvdG90eXBlIiwiX19zdXBlcl9fIiwiaGFzT3duUHJvcGVydHkiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsInN1cGVyQ2xhc3MiLCJlbGVtZW50TmFtZSIsImF0dHJpYnV0ZU5hbWUiLCJhdHRyaWJ1dGVUeXBlIiwiZGVmYXVsdFZhbHVlVHlwZSIsImRlZmF1bHRWYWx1ZSIsIkVycm9yIiwiZGVidWdJbmZvIiwiaW5kZXhPZiIsIm1hdGNoIiwic3RyaW5naWZ5IiwiZWxlTmFtZSIsImF0dE5hbWUiLCJkdGRBdHRUeXBlIiwiZHRkQXR0RGVmYXVsdCIsInRvU3RyaW5nIiwib3B0aW9ucyIsIndyaXRlciIsInNldCIsImR0ZEF0dExpc3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/xmlbuilder/lib/XMLDTDAttList.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/xmlbuilder/lib/XMLDTDElement.js":
/*!*******************************************************!*\
  !*** ../node_modules/xmlbuilder/lib/XMLDTDElement.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n// Generated by CoffeeScript 1.12.7\n(function() {\n    var XMLDTDElement, XMLNode, extend = function(child, parent) {\n        for(var key in parent){\n            if (hasProp.call(parent, key)) child[key] = parent[key];\n        }\n        function ctor() {\n            this.constructor = child;\n        }\n        ctor.prototype = parent.prototype;\n        child.prototype = new ctor();\n        child.__super__ = parent.prototype;\n        return child;\n    }, hasProp = {}.hasOwnProperty;\n    XMLNode = __webpack_require__(/*! ./XMLNode */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLNode.js\");\n    module.exports = XMLDTDElement = function(superClass) {\n        extend(XMLDTDElement, superClass);\n        function XMLDTDElement(parent, name, value) {\n            XMLDTDElement.__super__.constructor.call(this, parent);\n            if (name == null) {\n                throw new Error(\"Missing DTD element name. \" + this.debugInfo());\n            }\n            if (!value) {\n                value = \"(#PCDATA)\";\n            }\n            if (Array.isArray(value)) {\n                value = \"(\" + value.join(\",\") + \")\";\n            }\n            this.name = this.stringify.eleName(name);\n            this.value = this.stringify.dtdElementValue(value);\n        }\n        XMLDTDElement.prototype.toString = function(options) {\n            return this.options.writer.set(options).dtdElement(this);\n        };\n        return XMLDTDElement;\n    }(XMLNode);\n}).call(void 0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL3htbGJ1aWxkZXIvbGliL1hNTERUREVsZW1lbnQuanMiLCJtYXBwaW5ncyI6IjtBQUFBLG1DQUFtQztBQUNsQztJQUNDLElBQUlBLGVBQWVDLFNBQ2pCQyxTQUFTLFNBQVNDLEtBQUssRUFBRUMsTUFBTTtRQUFJLElBQUssSUFBSUMsT0FBT0QsT0FBUTtZQUFFLElBQUlFLFFBQVFDLElBQUksQ0FBQ0gsUUFBUUMsTUFBTUYsS0FBSyxDQUFDRSxJQUFJLEdBQUdELE1BQU0sQ0FBQ0MsSUFBSTtRQUFFO1FBQUUsU0FBU0c7WUFBUyxJQUFJLENBQUNDLFdBQVcsR0FBR047UUFBTztRQUFFSyxLQUFLRSxTQUFTLEdBQUdOLE9BQU9NLFNBQVM7UUFBRVAsTUFBTU8sU0FBUyxHQUFHLElBQUlGO1FBQVFMLE1BQU1RLFNBQVMsR0FBR1AsT0FBT00sU0FBUztRQUFFLE9BQU9QO0lBQU8sR0FDelJHLFVBQVUsQ0FBQyxFQUFFTSxjQUFjO0lBRTdCWCxVQUFVWSxtQkFBT0EsQ0FBQztJQUVsQkMsT0FBT0MsT0FBTyxHQUFHZixnQkFBZ0IsU0FBVWdCLFVBQVU7UUFDbkRkLE9BQU9GLGVBQWVnQjtRQUV0QixTQUFTaEIsY0FBY0ksTUFBTSxFQUFFYSxJQUFJLEVBQUVDLEtBQUs7WUFDeENsQixjQUFjVyxTQUFTLENBQUNGLFdBQVcsQ0FBQ0YsSUFBSSxDQUFDLElBQUksRUFBRUg7WUFDL0MsSUFBSWEsUUFBUSxNQUFNO2dCQUNoQixNQUFNLElBQUlFLE1BQU0sK0JBQStCLElBQUksQ0FBQ0MsU0FBUztZQUMvRDtZQUNBLElBQUksQ0FBQ0YsT0FBTztnQkFDVkEsUUFBUTtZQUNWO1lBQ0EsSUFBSUcsTUFBTUMsT0FBTyxDQUFDSixRQUFRO2dCQUN4QkEsUUFBUSxNQUFNQSxNQUFNSyxJQUFJLENBQUMsT0FBTztZQUNsQztZQUNBLElBQUksQ0FBQ04sSUFBSSxHQUFHLElBQUksQ0FBQ08sU0FBUyxDQUFDQyxPQUFPLENBQUNSO1lBQ25DLElBQUksQ0FBQ0MsS0FBSyxHQUFHLElBQUksQ0FBQ00sU0FBUyxDQUFDRSxlQUFlLENBQUNSO1FBQzlDO1FBRUFsQixjQUFjVSxTQUFTLENBQUNpQixRQUFRLEdBQUcsU0FBU0MsT0FBTztZQUNqRCxPQUFPLElBQUksQ0FBQ0EsT0FBTyxDQUFDQyxNQUFNLENBQUNDLEdBQUcsQ0FBQ0YsU0FBU0csVUFBVSxDQUFDLElBQUk7UUFDekQ7UUFFQSxPQUFPL0I7SUFFVCxFQUFHQztBQUVMLEdBQUdNLElBQUksQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2V0cy1hZXJvLWlzby1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMveG1sYnVpbGRlci9saWIvWE1MRFRERWxlbWVudC5qcz9kNDQ5Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEdlbmVyYXRlZCBieSBDb2ZmZWVTY3JpcHQgMS4xMi43XG4oZnVuY3Rpb24oKSB7XG4gIHZhciBYTUxEVERFbGVtZW50LCBYTUxOb2RlLFxuICAgIGV4dGVuZCA9IGZ1bmN0aW9uKGNoaWxkLCBwYXJlbnQpIHsgZm9yICh2YXIga2V5IGluIHBhcmVudCkgeyBpZiAoaGFzUHJvcC5jYWxsKHBhcmVudCwga2V5KSkgY2hpbGRba2V5XSA9IHBhcmVudFtrZXldOyB9IGZ1bmN0aW9uIGN0b3IoKSB7IHRoaXMuY29uc3RydWN0b3IgPSBjaGlsZDsgfSBjdG9yLnByb3RvdHlwZSA9IHBhcmVudC5wcm90b3R5cGU7IGNoaWxkLnByb3RvdHlwZSA9IG5ldyBjdG9yKCk7IGNoaWxkLl9fc3VwZXJfXyA9IHBhcmVudC5wcm90b3R5cGU7IHJldHVybiBjaGlsZDsgfSxcbiAgICBoYXNQcm9wID0ge30uaGFzT3duUHJvcGVydHk7XG5cbiAgWE1MTm9kZSA9IHJlcXVpcmUoJy4vWE1MTm9kZScpO1xuXG4gIG1vZHVsZS5leHBvcnRzID0gWE1MRFRERWxlbWVudCA9IChmdW5jdGlvbihzdXBlckNsYXNzKSB7XG4gICAgZXh0ZW5kKFhNTERUREVsZW1lbnQsIHN1cGVyQ2xhc3MpO1xuXG4gICAgZnVuY3Rpb24gWE1MRFRERWxlbWVudChwYXJlbnQsIG5hbWUsIHZhbHVlKSB7XG4gICAgICBYTUxEVERFbGVtZW50Ll9fc3VwZXJfXy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsIHBhcmVudCk7XG4gICAgICBpZiAobmFtZSA9PSBudWxsKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIk1pc3NpbmcgRFREIGVsZW1lbnQgbmFtZS4gXCIgKyB0aGlzLmRlYnVnSW5mbygpKTtcbiAgICAgIH1cbiAgICAgIGlmICghdmFsdWUpIHtcbiAgICAgICAgdmFsdWUgPSAnKCNQQ0RBVEEpJztcbiAgICAgIH1cbiAgICAgIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgICAgICB2YWx1ZSA9ICcoJyArIHZhbHVlLmpvaW4oJywnKSArICcpJztcbiAgICAgIH1cbiAgICAgIHRoaXMubmFtZSA9IHRoaXMuc3RyaW5naWZ5LmVsZU5hbWUobmFtZSk7XG4gICAgICB0aGlzLnZhbHVlID0gdGhpcy5zdHJpbmdpZnkuZHRkRWxlbWVudFZhbHVlKHZhbHVlKTtcbiAgICB9XG5cbiAgICBYTUxEVERFbGVtZW50LnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uKG9wdGlvbnMpIHtcbiAgICAgIHJldHVybiB0aGlzLm9wdGlvbnMud3JpdGVyLnNldChvcHRpb25zKS5kdGRFbGVtZW50KHRoaXMpO1xuICAgIH07XG5cbiAgICByZXR1cm4gWE1MRFRERWxlbWVudDtcblxuICB9KShYTUxOb2RlKTtcblxufSkuY2FsbCh0aGlzKTtcbiJdLCJuYW1lcyI6WyJYTUxEVERFbGVtZW50IiwiWE1MTm9kZSIsImV4dGVuZCIsImNoaWxkIiwicGFyZW50Iiwia2V5IiwiaGFzUHJvcCIsImNhbGwiLCJjdG9yIiwiY29uc3RydWN0b3IiLCJwcm90b3R5cGUiLCJfX3N1cGVyX18iLCJoYXNPd25Qcm9wZXJ0eSIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwic3VwZXJDbGFzcyIsIm5hbWUiLCJ2YWx1ZSIsIkVycm9yIiwiZGVidWdJbmZvIiwiQXJyYXkiLCJpc0FycmF5Iiwiam9pbiIsInN0cmluZ2lmeSIsImVsZU5hbWUiLCJkdGRFbGVtZW50VmFsdWUiLCJ0b1N0cmluZyIsIm9wdGlvbnMiLCJ3cml0ZXIiLCJzZXQiLCJkdGRFbGVtZW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/xmlbuilder/lib/XMLDTDElement.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/xmlbuilder/lib/XMLDTDEntity.js":
/*!******************************************************!*\
  !*** ../node_modules/xmlbuilder/lib/XMLDTDEntity.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n// Generated by CoffeeScript 1.12.7\n(function() {\n    var XMLDTDEntity, XMLNode, isObject, extend = function(child, parent) {\n        for(var key in parent){\n            if (hasProp.call(parent, key)) child[key] = parent[key];\n        }\n        function ctor() {\n            this.constructor = child;\n        }\n        ctor.prototype = parent.prototype;\n        child.prototype = new ctor();\n        child.__super__ = parent.prototype;\n        return child;\n    }, hasProp = {}.hasOwnProperty;\n    isObject = (__webpack_require__(/*! ./Utility */ \"(ssr)/../node_modules/xmlbuilder/lib/Utility.js\").isObject);\n    XMLNode = __webpack_require__(/*! ./XMLNode */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLNode.js\");\n    module.exports = XMLDTDEntity = function(superClass) {\n        extend(XMLDTDEntity, superClass);\n        function XMLDTDEntity(parent, pe, name, value) {\n            XMLDTDEntity.__super__.constructor.call(this, parent);\n            if (name == null) {\n                throw new Error(\"Missing DTD entity name. \" + this.debugInfo(name));\n            }\n            if (value == null) {\n                throw new Error(\"Missing DTD entity value. \" + this.debugInfo(name));\n            }\n            this.pe = !!pe;\n            this.name = this.stringify.eleName(name);\n            if (!isObject(value)) {\n                this.value = this.stringify.dtdEntityValue(value);\n            } else {\n                if (!value.pubID && !value.sysID) {\n                    throw new Error(\"Public and/or system identifiers are required for an external entity. \" + this.debugInfo(name));\n                }\n                if (value.pubID && !value.sysID) {\n                    throw new Error(\"System identifier is required for a public external entity. \" + this.debugInfo(name));\n                }\n                if (value.pubID != null) {\n                    this.pubID = this.stringify.dtdPubID(value.pubID);\n                }\n                if (value.sysID != null) {\n                    this.sysID = this.stringify.dtdSysID(value.sysID);\n                }\n                if (value.nData != null) {\n                    this.nData = this.stringify.dtdNData(value.nData);\n                }\n                if (this.pe && this.nData) {\n                    throw new Error(\"Notation declaration is not allowed in a parameter entity. \" + this.debugInfo(name));\n                }\n            }\n        }\n        XMLDTDEntity.prototype.toString = function(options) {\n            return this.options.writer.set(options).dtdEntity(this);\n        };\n        return XMLDTDEntity;\n    }(XMLNode);\n}).call(void 0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL3htbGJ1aWxkZXIvbGliL1hNTERUREVudGl0eS5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsbUNBQW1DO0FBQ2xDO0lBQ0MsSUFBSUEsY0FBY0MsU0FBU0MsVUFDekJDLFNBQVMsU0FBU0MsS0FBSyxFQUFFQyxNQUFNO1FBQUksSUFBSyxJQUFJQyxPQUFPRCxPQUFRO1lBQUUsSUFBSUUsUUFBUUMsSUFBSSxDQUFDSCxRQUFRQyxNQUFNRixLQUFLLENBQUNFLElBQUksR0FBR0QsTUFBTSxDQUFDQyxJQUFJO1FBQUU7UUFBRSxTQUFTRztZQUFTLElBQUksQ0FBQ0MsV0FBVyxHQUFHTjtRQUFPO1FBQUVLLEtBQUtFLFNBQVMsR0FBR04sT0FBT00sU0FBUztRQUFFUCxNQUFNTyxTQUFTLEdBQUcsSUFBSUY7UUFBUUwsTUFBTVEsU0FBUyxHQUFHUCxPQUFPTSxTQUFTO1FBQUUsT0FBT1A7SUFBTyxHQUN6UkcsVUFBVSxDQUFDLEVBQUVNLGNBQWM7SUFFN0JYLFdBQVdZLGtHQUE2QjtJQUV4Q2IsVUFBVWEsbUJBQU9BLENBQUM7SUFFbEJDLE9BQU9DLE9BQU8sR0FBR2hCLGVBQWUsU0FBVWlCLFVBQVU7UUFDbERkLE9BQU9ILGNBQWNpQjtRQUVyQixTQUFTakIsYUFBYUssTUFBTSxFQUFFYSxFQUFFLEVBQUVDLElBQUksRUFBRUMsS0FBSztZQUMzQ3BCLGFBQWFZLFNBQVMsQ0FBQ0YsV0FBVyxDQUFDRixJQUFJLENBQUMsSUFBSSxFQUFFSDtZQUM5QyxJQUFJYyxRQUFRLE1BQU07Z0JBQ2hCLE1BQU0sSUFBSUUsTUFBTSw4QkFBOEIsSUFBSSxDQUFDQyxTQUFTLENBQUNIO1lBQy9EO1lBQ0EsSUFBSUMsU0FBUyxNQUFNO2dCQUNqQixNQUFNLElBQUlDLE1BQU0sK0JBQStCLElBQUksQ0FBQ0MsU0FBUyxDQUFDSDtZQUNoRTtZQUNBLElBQUksQ0FBQ0QsRUFBRSxHQUFHLENBQUMsQ0FBQ0E7WUFDWixJQUFJLENBQUNDLElBQUksR0FBRyxJQUFJLENBQUNJLFNBQVMsQ0FBQ0MsT0FBTyxDQUFDTDtZQUNuQyxJQUFJLENBQUNqQixTQUFTa0IsUUFBUTtnQkFDcEIsSUFBSSxDQUFDQSxLQUFLLEdBQUcsSUFBSSxDQUFDRyxTQUFTLENBQUNFLGNBQWMsQ0FBQ0w7WUFDN0MsT0FBTztnQkFDTCxJQUFJLENBQUNBLE1BQU1NLEtBQUssSUFBSSxDQUFDTixNQUFNTyxLQUFLLEVBQUU7b0JBQ2hDLE1BQU0sSUFBSU4sTUFBTSwyRUFBMkUsSUFBSSxDQUFDQyxTQUFTLENBQUNIO2dCQUM1RztnQkFDQSxJQUFJQyxNQUFNTSxLQUFLLElBQUksQ0FBQ04sTUFBTU8sS0FBSyxFQUFFO29CQUMvQixNQUFNLElBQUlOLE1BQU0saUVBQWlFLElBQUksQ0FBQ0MsU0FBUyxDQUFDSDtnQkFDbEc7Z0JBQ0EsSUFBSUMsTUFBTU0sS0FBSyxJQUFJLE1BQU07b0JBQ3ZCLElBQUksQ0FBQ0EsS0FBSyxHQUFHLElBQUksQ0FBQ0gsU0FBUyxDQUFDSyxRQUFRLENBQUNSLE1BQU1NLEtBQUs7Z0JBQ2xEO2dCQUNBLElBQUlOLE1BQU1PLEtBQUssSUFBSSxNQUFNO29CQUN2QixJQUFJLENBQUNBLEtBQUssR0FBRyxJQUFJLENBQUNKLFNBQVMsQ0FBQ00sUUFBUSxDQUFDVCxNQUFNTyxLQUFLO2dCQUNsRDtnQkFDQSxJQUFJUCxNQUFNVSxLQUFLLElBQUksTUFBTTtvQkFDdkIsSUFBSSxDQUFDQSxLQUFLLEdBQUcsSUFBSSxDQUFDUCxTQUFTLENBQUNRLFFBQVEsQ0FBQ1gsTUFBTVUsS0FBSztnQkFDbEQ7Z0JBQ0EsSUFBSSxJQUFJLENBQUNaLEVBQUUsSUFBSSxJQUFJLENBQUNZLEtBQUssRUFBRTtvQkFDekIsTUFBTSxJQUFJVCxNQUFNLGdFQUFnRSxJQUFJLENBQUNDLFNBQVMsQ0FBQ0g7Z0JBQ2pHO1lBQ0Y7UUFDRjtRQUVBbkIsYUFBYVcsU0FBUyxDQUFDcUIsUUFBUSxHQUFHLFNBQVNDLE9BQU87WUFDaEQsT0FBTyxJQUFJLENBQUNBLE9BQU8sQ0FBQ0MsTUFBTSxDQUFDQyxHQUFHLENBQUNGLFNBQVNHLFNBQVMsQ0FBQyxJQUFJO1FBQ3hEO1FBRUEsT0FBT3BDO0lBRVQsRUFBR0M7QUFFTCxHQUFHTyxJQUFJLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ldHMtYWVyby1pc28tZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL3htbGJ1aWxkZXIvbGliL1hNTERUREVudGl0eS5qcz9hNDkwIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEdlbmVyYXRlZCBieSBDb2ZmZWVTY3JpcHQgMS4xMi43XG4oZnVuY3Rpb24oKSB7XG4gIHZhciBYTUxEVERFbnRpdHksIFhNTE5vZGUsIGlzT2JqZWN0LFxuICAgIGV4dGVuZCA9IGZ1bmN0aW9uKGNoaWxkLCBwYXJlbnQpIHsgZm9yICh2YXIga2V5IGluIHBhcmVudCkgeyBpZiAoaGFzUHJvcC5jYWxsKHBhcmVudCwga2V5KSkgY2hpbGRba2V5XSA9IHBhcmVudFtrZXldOyB9IGZ1bmN0aW9uIGN0b3IoKSB7IHRoaXMuY29uc3RydWN0b3IgPSBjaGlsZDsgfSBjdG9yLnByb3RvdHlwZSA9IHBhcmVudC5wcm90b3R5cGU7IGNoaWxkLnByb3RvdHlwZSA9IG5ldyBjdG9yKCk7IGNoaWxkLl9fc3VwZXJfXyA9IHBhcmVudC5wcm90b3R5cGU7IHJldHVybiBjaGlsZDsgfSxcbiAgICBoYXNQcm9wID0ge30uaGFzT3duUHJvcGVydHk7XG5cbiAgaXNPYmplY3QgPSByZXF1aXJlKCcuL1V0aWxpdHknKS5pc09iamVjdDtcblxuICBYTUxOb2RlID0gcmVxdWlyZSgnLi9YTUxOb2RlJyk7XG5cbiAgbW9kdWxlLmV4cG9ydHMgPSBYTUxEVERFbnRpdHkgPSAoZnVuY3Rpb24oc3VwZXJDbGFzcykge1xuICAgIGV4dGVuZChYTUxEVERFbnRpdHksIHN1cGVyQ2xhc3MpO1xuXG4gICAgZnVuY3Rpb24gWE1MRFRERW50aXR5KHBhcmVudCwgcGUsIG5hbWUsIHZhbHVlKSB7XG4gICAgICBYTUxEVERFbnRpdHkuX19zdXBlcl9fLmNvbnN0cnVjdG9yLmNhbGwodGhpcywgcGFyZW50KTtcbiAgICAgIGlmIChuYW1lID09IG51bGwpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTWlzc2luZyBEVEQgZW50aXR5IG5hbWUuIFwiICsgdGhpcy5kZWJ1Z0luZm8obmFtZSkpO1xuICAgICAgfVxuICAgICAgaWYgKHZhbHVlID09IG51bGwpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTWlzc2luZyBEVEQgZW50aXR5IHZhbHVlLiBcIiArIHRoaXMuZGVidWdJbmZvKG5hbWUpKTtcbiAgICAgIH1cbiAgICAgIHRoaXMucGUgPSAhIXBlO1xuICAgICAgdGhpcy5uYW1lID0gdGhpcy5zdHJpbmdpZnkuZWxlTmFtZShuYW1lKTtcbiAgICAgIGlmICghaXNPYmplY3QodmFsdWUpKSB7XG4gICAgICAgIHRoaXMudmFsdWUgPSB0aGlzLnN0cmluZ2lmeS5kdGRFbnRpdHlWYWx1ZSh2YWx1ZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAoIXZhbHVlLnB1YklEICYmICF2YWx1ZS5zeXNJRCkge1xuICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlB1YmxpYyBhbmQvb3Igc3lzdGVtIGlkZW50aWZpZXJzIGFyZSByZXF1aXJlZCBmb3IgYW4gZXh0ZXJuYWwgZW50aXR5LiBcIiArIHRoaXMuZGVidWdJbmZvKG5hbWUpKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodmFsdWUucHViSUQgJiYgIXZhbHVlLnN5c0lEKSB7XG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiU3lzdGVtIGlkZW50aWZpZXIgaXMgcmVxdWlyZWQgZm9yIGEgcHVibGljIGV4dGVybmFsIGVudGl0eS4gXCIgKyB0aGlzLmRlYnVnSW5mbyhuYW1lKSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHZhbHVlLnB1YklEICE9IG51bGwpIHtcbiAgICAgICAgICB0aGlzLnB1YklEID0gdGhpcy5zdHJpbmdpZnkuZHRkUHViSUQodmFsdWUucHViSUQpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh2YWx1ZS5zeXNJRCAhPSBudWxsKSB7XG4gICAgICAgICAgdGhpcy5zeXNJRCA9IHRoaXMuc3RyaW5naWZ5LmR0ZFN5c0lEKHZhbHVlLnN5c0lEKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodmFsdWUubkRhdGEgIT0gbnVsbCkge1xuICAgICAgICAgIHRoaXMubkRhdGEgPSB0aGlzLnN0cmluZ2lmeS5kdGRORGF0YSh2YWx1ZS5uRGF0YSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMucGUgJiYgdGhpcy5uRGF0YSkge1xuICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIk5vdGF0aW9uIGRlY2xhcmF0aW9uIGlzIG5vdCBhbGxvd2VkIGluIGEgcGFyYW1ldGVyIGVudGl0eS4gXCIgKyB0aGlzLmRlYnVnSW5mbyhuYW1lKSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBYTUxEVERFbnRpdHkucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24ob3B0aW9ucykge1xuICAgICAgcmV0dXJuIHRoaXMub3B0aW9ucy53cml0ZXIuc2V0KG9wdGlvbnMpLmR0ZEVudGl0eSh0aGlzKTtcbiAgICB9O1xuXG4gICAgcmV0dXJuIFhNTERUREVudGl0eTtcblxuICB9KShYTUxOb2RlKTtcblxufSkuY2FsbCh0aGlzKTtcbiJdLCJuYW1lcyI6WyJYTUxEVERFbnRpdHkiLCJYTUxOb2RlIiwiaXNPYmplY3QiLCJleHRlbmQiLCJjaGlsZCIsInBhcmVudCIsImtleSIsImhhc1Byb3AiLCJjYWxsIiwiY3RvciIsImNvbnN0cnVjdG9yIiwicHJvdG90eXBlIiwiX19zdXBlcl9fIiwiaGFzT3duUHJvcGVydHkiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsInN1cGVyQ2xhc3MiLCJwZSIsIm5hbWUiLCJ2YWx1ZSIsIkVycm9yIiwiZGVidWdJbmZvIiwic3RyaW5naWZ5IiwiZWxlTmFtZSIsImR0ZEVudGl0eVZhbHVlIiwicHViSUQiLCJzeXNJRCIsImR0ZFB1YklEIiwiZHRkU3lzSUQiLCJuRGF0YSIsImR0ZE5EYXRhIiwidG9TdHJpbmciLCJvcHRpb25zIiwid3JpdGVyIiwic2V0IiwiZHRkRW50aXR5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/xmlbuilder/lib/XMLDTDEntity.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/xmlbuilder/lib/XMLDTDNotation.js":
/*!********************************************************!*\
  !*** ../node_modules/xmlbuilder/lib/XMLDTDNotation.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n// Generated by CoffeeScript 1.12.7\n(function() {\n    var XMLDTDNotation, XMLNode, extend = function(child, parent) {\n        for(var key in parent){\n            if (hasProp.call(parent, key)) child[key] = parent[key];\n        }\n        function ctor() {\n            this.constructor = child;\n        }\n        ctor.prototype = parent.prototype;\n        child.prototype = new ctor();\n        child.__super__ = parent.prototype;\n        return child;\n    }, hasProp = {}.hasOwnProperty;\n    XMLNode = __webpack_require__(/*! ./XMLNode */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLNode.js\");\n    module.exports = XMLDTDNotation = function(superClass) {\n        extend(XMLDTDNotation, superClass);\n        function XMLDTDNotation(parent, name, value) {\n            XMLDTDNotation.__super__.constructor.call(this, parent);\n            if (name == null) {\n                throw new Error(\"Missing DTD notation name. \" + this.debugInfo(name));\n            }\n            if (!value.pubID && !value.sysID) {\n                throw new Error(\"Public or system identifiers are required for an external entity. \" + this.debugInfo(name));\n            }\n            this.name = this.stringify.eleName(name);\n            if (value.pubID != null) {\n                this.pubID = this.stringify.dtdPubID(value.pubID);\n            }\n            if (value.sysID != null) {\n                this.sysID = this.stringify.dtdSysID(value.sysID);\n            }\n        }\n        XMLDTDNotation.prototype.toString = function(options) {\n            return this.options.writer.set(options).dtdNotation(this);\n        };\n        return XMLDTDNotation;\n    }(XMLNode);\n}).call(void 0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL3htbGJ1aWxkZXIvbGliL1hNTERURE5vdGF0aW9uLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxtQ0FBbUM7QUFDbEM7SUFDQyxJQUFJQSxnQkFBZ0JDLFNBQ2xCQyxTQUFTLFNBQVNDLEtBQUssRUFBRUMsTUFBTTtRQUFJLElBQUssSUFBSUMsT0FBT0QsT0FBUTtZQUFFLElBQUlFLFFBQVFDLElBQUksQ0FBQ0gsUUFBUUMsTUFBTUYsS0FBSyxDQUFDRSxJQUFJLEdBQUdELE1BQU0sQ0FBQ0MsSUFBSTtRQUFFO1FBQUUsU0FBU0c7WUFBUyxJQUFJLENBQUNDLFdBQVcsR0FBR047UUFBTztRQUFFSyxLQUFLRSxTQUFTLEdBQUdOLE9BQU9NLFNBQVM7UUFBRVAsTUFBTU8sU0FBUyxHQUFHLElBQUlGO1FBQVFMLE1BQU1RLFNBQVMsR0FBR1AsT0FBT00sU0FBUztRQUFFLE9BQU9QO0lBQU8sR0FDelJHLFVBQVUsQ0FBQyxFQUFFTSxjQUFjO0lBRTdCWCxVQUFVWSxtQkFBT0EsQ0FBQztJQUVsQkMsT0FBT0MsT0FBTyxHQUFHZixpQkFBaUIsU0FBVWdCLFVBQVU7UUFDcERkLE9BQU9GLGdCQUFnQmdCO1FBRXZCLFNBQVNoQixlQUFlSSxNQUFNLEVBQUVhLElBQUksRUFBRUMsS0FBSztZQUN6Q2xCLGVBQWVXLFNBQVMsQ0FBQ0YsV0FBVyxDQUFDRixJQUFJLENBQUMsSUFBSSxFQUFFSDtZQUNoRCxJQUFJYSxRQUFRLE1BQU07Z0JBQ2hCLE1BQU0sSUFBSUUsTUFBTSxnQ0FBZ0MsSUFBSSxDQUFDQyxTQUFTLENBQUNIO1lBQ2pFO1lBQ0EsSUFBSSxDQUFDQyxNQUFNRyxLQUFLLElBQUksQ0FBQ0gsTUFBTUksS0FBSyxFQUFFO2dCQUNoQyxNQUFNLElBQUlILE1BQU0sdUVBQXVFLElBQUksQ0FBQ0MsU0FBUyxDQUFDSDtZQUN4RztZQUNBLElBQUksQ0FBQ0EsSUFBSSxHQUFHLElBQUksQ0FBQ00sU0FBUyxDQUFDQyxPQUFPLENBQUNQO1lBQ25DLElBQUlDLE1BQU1HLEtBQUssSUFBSSxNQUFNO2dCQUN2QixJQUFJLENBQUNBLEtBQUssR0FBRyxJQUFJLENBQUNFLFNBQVMsQ0FBQ0UsUUFBUSxDQUFDUCxNQUFNRyxLQUFLO1lBQ2xEO1lBQ0EsSUFBSUgsTUFBTUksS0FBSyxJQUFJLE1BQU07Z0JBQ3ZCLElBQUksQ0FBQ0EsS0FBSyxHQUFHLElBQUksQ0FBQ0MsU0FBUyxDQUFDRyxRQUFRLENBQUNSLE1BQU1JLEtBQUs7WUFDbEQ7UUFDRjtRQUVBdEIsZUFBZVUsU0FBUyxDQUFDaUIsUUFBUSxHQUFHLFNBQVNDLE9BQU87WUFDbEQsT0FBTyxJQUFJLENBQUNBLE9BQU8sQ0FBQ0MsTUFBTSxDQUFDQyxHQUFHLENBQUNGLFNBQVNHLFdBQVcsQ0FBQyxJQUFJO1FBQzFEO1FBRUEsT0FBTy9CO0lBRVQsRUFBR0M7QUFFTCxHQUFHTSxJQUFJLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ldHMtYWVyby1pc28tZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL3htbGJ1aWxkZXIvbGliL1hNTERURE5vdGF0aW9uLmpzPzgxYWYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gR2VuZXJhdGVkIGJ5IENvZmZlZVNjcmlwdCAxLjEyLjdcbihmdW5jdGlvbigpIHtcbiAgdmFyIFhNTERURE5vdGF0aW9uLCBYTUxOb2RlLFxuICAgIGV4dGVuZCA9IGZ1bmN0aW9uKGNoaWxkLCBwYXJlbnQpIHsgZm9yICh2YXIga2V5IGluIHBhcmVudCkgeyBpZiAoaGFzUHJvcC5jYWxsKHBhcmVudCwga2V5KSkgY2hpbGRba2V5XSA9IHBhcmVudFtrZXldOyB9IGZ1bmN0aW9uIGN0b3IoKSB7IHRoaXMuY29uc3RydWN0b3IgPSBjaGlsZDsgfSBjdG9yLnByb3RvdHlwZSA9IHBhcmVudC5wcm90b3R5cGU7IGNoaWxkLnByb3RvdHlwZSA9IG5ldyBjdG9yKCk7IGNoaWxkLl9fc3VwZXJfXyA9IHBhcmVudC5wcm90b3R5cGU7IHJldHVybiBjaGlsZDsgfSxcbiAgICBoYXNQcm9wID0ge30uaGFzT3duUHJvcGVydHk7XG5cbiAgWE1MTm9kZSA9IHJlcXVpcmUoJy4vWE1MTm9kZScpO1xuXG4gIG1vZHVsZS5leHBvcnRzID0gWE1MRFRETm90YXRpb24gPSAoZnVuY3Rpb24oc3VwZXJDbGFzcykge1xuICAgIGV4dGVuZChYTUxEVEROb3RhdGlvbiwgc3VwZXJDbGFzcyk7XG5cbiAgICBmdW5jdGlvbiBYTUxEVEROb3RhdGlvbihwYXJlbnQsIG5hbWUsIHZhbHVlKSB7XG4gICAgICBYTUxEVEROb3RhdGlvbi5fX3N1cGVyX18uY29uc3RydWN0b3IuY2FsbCh0aGlzLCBwYXJlbnQpO1xuICAgICAgaWYgKG5hbWUgPT0gbnVsbCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJNaXNzaW5nIERURCBub3RhdGlvbiBuYW1lLiBcIiArIHRoaXMuZGVidWdJbmZvKG5hbWUpKTtcbiAgICAgIH1cbiAgICAgIGlmICghdmFsdWUucHViSUQgJiYgIXZhbHVlLnN5c0lEKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIlB1YmxpYyBvciBzeXN0ZW0gaWRlbnRpZmllcnMgYXJlIHJlcXVpcmVkIGZvciBhbiBleHRlcm5hbCBlbnRpdHkuIFwiICsgdGhpcy5kZWJ1Z0luZm8obmFtZSkpO1xuICAgICAgfVxuICAgICAgdGhpcy5uYW1lID0gdGhpcy5zdHJpbmdpZnkuZWxlTmFtZShuYW1lKTtcbiAgICAgIGlmICh2YWx1ZS5wdWJJRCAhPSBudWxsKSB7XG4gICAgICAgIHRoaXMucHViSUQgPSB0aGlzLnN0cmluZ2lmeS5kdGRQdWJJRCh2YWx1ZS5wdWJJRCk7XG4gICAgICB9XG4gICAgICBpZiAodmFsdWUuc3lzSUQgIT0gbnVsbCkge1xuICAgICAgICB0aGlzLnN5c0lEID0gdGhpcy5zdHJpbmdpZnkuZHRkU3lzSUQodmFsdWUuc3lzSUQpO1xuICAgICAgfVxuICAgIH1cblxuICAgIFhNTERURE5vdGF0aW9uLnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uKG9wdGlvbnMpIHtcbiAgICAgIHJldHVybiB0aGlzLm9wdGlvbnMud3JpdGVyLnNldChvcHRpb25zKS5kdGROb3RhdGlvbih0aGlzKTtcbiAgICB9O1xuXG4gICAgcmV0dXJuIFhNTERURE5vdGF0aW9uO1xuXG4gIH0pKFhNTE5vZGUpO1xuXG59KS5jYWxsKHRoaXMpO1xuIl0sIm5hbWVzIjpbIlhNTERURE5vdGF0aW9uIiwiWE1MTm9kZSIsImV4dGVuZCIsImNoaWxkIiwicGFyZW50Iiwia2V5IiwiaGFzUHJvcCIsImNhbGwiLCJjdG9yIiwiY29uc3RydWN0b3IiLCJwcm90b3R5cGUiLCJfX3N1cGVyX18iLCJoYXNPd25Qcm9wZXJ0eSIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwic3VwZXJDbGFzcyIsIm5hbWUiLCJ2YWx1ZSIsIkVycm9yIiwiZGVidWdJbmZvIiwicHViSUQiLCJzeXNJRCIsInN0cmluZ2lmeSIsImVsZU5hbWUiLCJkdGRQdWJJRCIsImR0ZFN5c0lEIiwidG9TdHJpbmciLCJvcHRpb25zIiwid3JpdGVyIiwic2V0IiwiZHRkTm90YXRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/xmlbuilder/lib/XMLDTDNotation.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/xmlbuilder/lib/XMLDeclaration.js":
/*!********************************************************!*\
  !*** ../node_modules/xmlbuilder/lib/XMLDeclaration.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n// Generated by CoffeeScript 1.12.7\n(function() {\n    var XMLDeclaration, XMLNode, isObject, extend = function(child, parent) {\n        for(var key in parent){\n            if (hasProp.call(parent, key)) child[key] = parent[key];\n        }\n        function ctor() {\n            this.constructor = child;\n        }\n        ctor.prototype = parent.prototype;\n        child.prototype = new ctor();\n        child.__super__ = parent.prototype;\n        return child;\n    }, hasProp = {}.hasOwnProperty;\n    isObject = (__webpack_require__(/*! ./Utility */ \"(ssr)/../node_modules/xmlbuilder/lib/Utility.js\").isObject);\n    XMLNode = __webpack_require__(/*! ./XMLNode */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLNode.js\");\n    module.exports = XMLDeclaration = function(superClass) {\n        extend(XMLDeclaration, superClass);\n        function XMLDeclaration(parent, version, encoding, standalone) {\n            var ref;\n            XMLDeclaration.__super__.constructor.call(this, parent);\n            if (isObject(version)) {\n                ref = version, version = ref.version, encoding = ref.encoding, standalone = ref.standalone;\n            }\n            if (!version) {\n                version = \"1.0\";\n            }\n            this.version = this.stringify.xmlVersion(version);\n            if (encoding != null) {\n                this.encoding = this.stringify.xmlEncoding(encoding);\n            }\n            if (standalone != null) {\n                this.standalone = this.stringify.xmlStandalone(standalone);\n            }\n        }\n        XMLDeclaration.prototype.toString = function(options) {\n            return this.options.writer.set(options).declaration(this);\n        };\n        return XMLDeclaration;\n    }(XMLNode);\n}).call(void 0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL3htbGJ1aWxkZXIvbGliL1hNTERlY2xhcmF0aW9uLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxtQ0FBbUM7QUFDbEM7SUFDQyxJQUFJQSxnQkFBZ0JDLFNBQVNDLFVBQzNCQyxTQUFTLFNBQVNDLEtBQUssRUFBRUMsTUFBTTtRQUFJLElBQUssSUFBSUMsT0FBT0QsT0FBUTtZQUFFLElBQUlFLFFBQVFDLElBQUksQ0FBQ0gsUUFBUUMsTUFBTUYsS0FBSyxDQUFDRSxJQUFJLEdBQUdELE1BQU0sQ0FBQ0MsSUFBSTtRQUFFO1FBQUUsU0FBU0c7WUFBUyxJQUFJLENBQUNDLFdBQVcsR0FBR047UUFBTztRQUFFSyxLQUFLRSxTQUFTLEdBQUdOLE9BQU9NLFNBQVM7UUFBRVAsTUFBTU8sU0FBUyxHQUFHLElBQUlGO1FBQVFMLE1BQU1RLFNBQVMsR0FBR1AsT0FBT00sU0FBUztRQUFFLE9BQU9QO0lBQU8sR0FDelJHLFVBQVUsQ0FBQyxFQUFFTSxjQUFjO0lBRTdCWCxXQUFXWSxrR0FBNkI7SUFFeENiLFVBQVVhLG1CQUFPQSxDQUFDO0lBRWxCQyxPQUFPQyxPQUFPLEdBQUdoQixpQkFBaUIsU0FBVWlCLFVBQVU7UUFDcERkLE9BQU9ILGdCQUFnQmlCO1FBRXZCLFNBQVNqQixlQUFlSyxNQUFNLEVBQUVhLE9BQU8sRUFBRUMsUUFBUSxFQUFFQyxVQUFVO1lBQzNELElBQUlDO1lBQ0pyQixlQUFlWSxTQUFTLENBQUNGLFdBQVcsQ0FBQ0YsSUFBSSxDQUFDLElBQUksRUFBRUg7WUFDaEQsSUFBSUgsU0FBU2dCLFVBQVU7Z0JBQ3JCRyxNQUFNSCxTQUFTQSxVQUFVRyxJQUFJSCxPQUFPLEVBQUVDLFdBQVdFLElBQUlGLFFBQVEsRUFBRUMsYUFBYUMsSUFBSUQsVUFBVTtZQUM1RjtZQUNBLElBQUksQ0FBQ0YsU0FBUztnQkFDWkEsVUFBVTtZQUNaO1lBQ0EsSUFBSSxDQUFDQSxPQUFPLEdBQUcsSUFBSSxDQUFDSSxTQUFTLENBQUNDLFVBQVUsQ0FBQ0w7WUFDekMsSUFBSUMsWUFBWSxNQUFNO2dCQUNwQixJQUFJLENBQUNBLFFBQVEsR0FBRyxJQUFJLENBQUNHLFNBQVMsQ0FBQ0UsV0FBVyxDQUFDTDtZQUM3QztZQUNBLElBQUlDLGNBQWMsTUFBTTtnQkFDdEIsSUFBSSxDQUFDQSxVQUFVLEdBQUcsSUFBSSxDQUFDRSxTQUFTLENBQUNHLGFBQWEsQ0FBQ0w7WUFDakQ7UUFDRjtRQUVBcEIsZUFBZVcsU0FBUyxDQUFDZSxRQUFRLEdBQUcsU0FBU0MsT0FBTztZQUNsRCxPQUFPLElBQUksQ0FBQ0EsT0FBTyxDQUFDQyxNQUFNLENBQUNDLEdBQUcsQ0FBQ0YsU0FBU0csV0FBVyxDQUFDLElBQUk7UUFDMUQ7UUFFQSxPQUFPOUI7SUFFVCxFQUFHQztBQUVMLEdBQUdPLElBQUksQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2V0cy1hZXJvLWlzby1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMveG1sYnVpbGRlci9saWIvWE1MRGVjbGFyYXRpb24uanM/ZDAxMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBHZW5lcmF0ZWQgYnkgQ29mZmVlU2NyaXB0IDEuMTIuN1xuKGZ1bmN0aW9uKCkge1xuICB2YXIgWE1MRGVjbGFyYXRpb24sIFhNTE5vZGUsIGlzT2JqZWN0LFxuICAgIGV4dGVuZCA9IGZ1bmN0aW9uKGNoaWxkLCBwYXJlbnQpIHsgZm9yICh2YXIga2V5IGluIHBhcmVudCkgeyBpZiAoaGFzUHJvcC5jYWxsKHBhcmVudCwga2V5KSkgY2hpbGRba2V5XSA9IHBhcmVudFtrZXldOyB9IGZ1bmN0aW9uIGN0b3IoKSB7IHRoaXMuY29uc3RydWN0b3IgPSBjaGlsZDsgfSBjdG9yLnByb3RvdHlwZSA9IHBhcmVudC5wcm90b3R5cGU7IGNoaWxkLnByb3RvdHlwZSA9IG5ldyBjdG9yKCk7IGNoaWxkLl9fc3VwZXJfXyA9IHBhcmVudC5wcm90b3R5cGU7IHJldHVybiBjaGlsZDsgfSxcbiAgICBoYXNQcm9wID0ge30uaGFzT3duUHJvcGVydHk7XG5cbiAgaXNPYmplY3QgPSByZXF1aXJlKCcuL1V0aWxpdHknKS5pc09iamVjdDtcblxuICBYTUxOb2RlID0gcmVxdWlyZSgnLi9YTUxOb2RlJyk7XG5cbiAgbW9kdWxlLmV4cG9ydHMgPSBYTUxEZWNsYXJhdGlvbiA9IChmdW5jdGlvbihzdXBlckNsYXNzKSB7XG4gICAgZXh0ZW5kKFhNTERlY2xhcmF0aW9uLCBzdXBlckNsYXNzKTtcblxuICAgIGZ1bmN0aW9uIFhNTERlY2xhcmF0aW9uKHBhcmVudCwgdmVyc2lvbiwgZW5jb2RpbmcsIHN0YW5kYWxvbmUpIHtcbiAgICAgIHZhciByZWY7XG4gICAgICBYTUxEZWNsYXJhdGlvbi5fX3N1cGVyX18uY29uc3RydWN0b3IuY2FsbCh0aGlzLCBwYXJlbnQpO1xuICAgICAgaWYgKGlzT2JqZWN0KHZlcnNpb24pKSB7XG4gICAgICAgIHJlZiA9IHZlcnNpb24sIHZlcnNpb24gPSByZWYudmVyc2lvbiwgZW5jb2RpbmcgPSByZWYuZW5jb2RpbmcsIHN0YW5kYWxvbmUgPSByZWYuc3RhbmRhbG9uZTtcbiAgICAgIH1cbiAgICAgIGlmICghdmVyc2lvbikge1xuICAgICAgICB2ZXJzaW9uID0gJzEuMCc7XG4gICAgICB9XG4gICAgICB0aGlzLnZlcnNpb24gPSB0aGlzLnN0cmluZ2lmeS54bWxWZXJzaW9uKHZlcnNpb24pO1xuICAgICAgaWYgKGVuY29kaW5nICE9IG51bGwpIHtcbiAgICAgICAgdGhpcy5lbmNvZGluZyA9IHRoaXMuc3RyaW5naWZ5LnhtbEVuY29kaW5nKGVuY29kaW5nKTtcbiAgICAgIH1cbiAgICAgIGlmIChzdGFuZGFsb25lICE9IG51bGwpIHtcbiAgICAgICAgdGhpcy5zdGFuZGFsb25lID0gdGhpcy5zdHJpbmdpZnkueG1sU3RhbmRhbG9uZShzdGFuZGFsb25lKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBYTUxEZWNsYXJhdGlvbi5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbihvcHRpb25zKSB7XG4gICAgICByZXR1cm4gdGhpcy5vcHRpb25zLndyaXRlci5zZXQob3B0aW9ucykuZGVjbGFyYXRpb24odGhpcyk7XG4gICAgfTtcblxuICAgIHJldHVybiBYTUxEZWNsYXJhdGlvbjtcblxuICB9KShYTUxOb2RlKTtcblxufSkuY2FsbCh0aGlzKTtcbiJdLCJuYW1lcyI6WyJYTUxEZWNsYXJhdGlvbiIsIlhNTE5vZGUiLCJpc09iamVjdCIsImV4dGVuZCIsImNoaWxkIiwicGFyZW50Iiwia2V5IiwiaGFzUHJvcCIsImNhbGwiLCJjdG9yIiwiY29uc3RydWN0b3IiLCJwcm90b3R5cGUiLCJfX3N1cGVyX18iLCJoYXNPd25Qcm9wZXJ0eSIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwic3VwZXJDbGFzcyIsInZlcnNpb24iLCJlbmNvZGluZyIsInN0YW5kYWxvbmUiLCJyZWYiLCJzdHJpbmdpZnkiLCJ4bWxWZXJzaW9uIiwieG1sRW5jb2RpbmciLCJ4bWxTdGFuZGFsb25lIiwidG9TdHJpbmciLCJvcHRpb25zIiwid3JpdGVyIiwic2V0IiwiZGVjbGFyYXRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/xmlbuilder/lib/XMLDeclaration.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/xmlbuilder/lib/XMLDocType.js":
/*!****************************************************!*\
  !*** ../node_modules/xmlbuilder/lib/XMLDocType.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n// Generated by CoffeeScript 1.12.7\n(function() {\n    var XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDocType, XMLNode, isObject, extend = function(child, parent) {\n        for(var key in parent){\n            if (hasProp.call(parent, key)) child[key] = parent[key];\n        }\n        function ctor() {\n            this.constructor = child;\n        }\n        ctor.prototype = parent.prototype;\n        child.prototype = new ctor();\n        child.__super__ = parent.prototype;\n        return child;\n    }, hasProp = {}.hasOwnProperty;\n    isObject = (__webpack_require__(/*! ./Utility */ \"(ssr)/../node_modules/xmlbuilder/lib/Utility.js\").isObject);\n    XMLNode = __webpack_require__(/*! ./XMLNode */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLNode.js\");\n    XMLDTDAttList = __webpack_require__(/*! ./XMLDTDAttList */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLDTDAttList.js\");\n    XMLDTDEntity = __webpack_require__(/*! ./XMLDTDEntity */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLDTDEntity.js\");\n    XMLDTDElement = __webpack_require__(/*! ./XMLDTDElement */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLDTDElement.js\");\n    XMLDTDNotation = __webpack_require__(/*! ./XMLDTDNotation */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLDTDNotation.js\");\n    module.exports = XMLDocType = function(superClass) {\n        extend(XMLDocType, superClass);\n        function XMLDocType(parent, pubID, sysID) {\n            var ref, ref1;\n            XMLDocType.__super__.constructor.call(this, parent);\n            this.name = \"!DOCTYPE\";\n            this.documentObject = parent;\n            if (isObject(pubID)) {\n                ref = pubID, pubID = ref.pubID, sysID = ref.sysID;\n            }\n            if (sysID == null) {\n                ref1 = [\n                    pubID,\n                    sysID\n                ], sysID = ref1[0], pubID = ref1[1];\n            }\n            if (pubID != null) {\n                this.pubID = this.stringify.dtdPubID(pubID);\n            }\n            if (sysID != null) {\n                this.sysID = this.stringify.dtdSysID(sysID);\n            }\n        }\n        XMLDocType.prototype.element = function(name, value) {\n            var child;\n            child = new XMLDTDElement(this, name, value);\n            this.children.push(child);\n            return this;\n        };\n        XMLDocType.prototype.attList = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n            var child;\n            child = new XMLDTDAttList(this, elementName, attributeName, attributeType, defaultValueType, defaultValue);\n            this.children.push(child);\n            return this;\n        };\n        XMLDocType.prototype.entity = function(name, value) {\n            var child;\n            child = new XMLDTDEntity(this, false, name, value);\n            this.children.push(child);\n            return this;\n        };\n        XMLDocType.prototype.pEntity = function(name, value) {\n            var child;\n            child = new XMLDTDEntity(this, true, name, value);\n            this.children.push(child);\n            return this;\n        };\n        XMLDocType.prototype.notation = function(name, value) {\n            var child;\n            child = new XMLDTDNotation(this, name, value);\n            this.children.push(child);\n            return this;\n        };\n        XMLDocType.prototype.toString = function(options) {\n            return this.options.writer.set(options).docType(this);\n        };\n        XMLDocType.prototype.ele = function(name, value) {\n            return this.element(name, value);\n        };\n        XMLDocType.prototype.att = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n            return this.attList(elementName, attributeName, attributeType, defaultValueType, defaultValue);\n        };\n        XMLDocType.prototype.ent = function(name, value) {\n            return this.entity(name, value);\n        };\n        XMLDocType.prototype.pent = function(name, value) {\n            return this.pEntity(name, value);\n        };\n        XMLDocType.prototype.not = function(name, value) {\n            return this.notation(name, value);\n        };\n        XMLDocType.prototype.up = function() {\n            return this.root() || this.documentObject;\n        };\n        return XMLDocType;\n    }(XMLNode);\n}).call(void 0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/xmlbuilder/lib/XMLDocType.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/xmlbuilder/lib/XMLDocument.js":
/*!*****************************************************!*\
  !*** ../node_modules/xmlbuilder/lib/XMLDocument.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n// Generated by CoffeeScript 1.12.7\n(function() {\n    var XMLDocument, XMLNode, XMLStringWriter, XMLStringifier, isPlainObject, extend = function(child, parent) {\n        for(var key in parent){\n            if (hasProp.call(parent, key)) child[key] = parent[key];\n        }\n        function ctor() {\n            this.constructor = child;\n        }\n        ctor.prototype = parent.prototype;\n        child.prototype = new ctor();\n        child.__super__ = parent.prototype;\n        return child;\n    }, hasProp = {}.hasOwnProperty;\n    isPlainObject = (__webpack_require__(/*! ./Utility */ \"(ssr)/../node_modules/xmlbuilder/lib/Utility.js\").isPlainObject);\n    XMLNode = __webpack_require__(/*! ./XMLNode */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLNode.js\");\n    XMLStringifier = __webpack_require__(/*! ./XMLStringifier */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLStringifier.js\");\n    XMLStringWriter = __webpack_require__(/*! ./XMLStringWriter */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLStringWriter.js\");\n    module.exports = XMLDocument = function(superClass) {\n        extend(XMLDocument, superClass);\n        function XMLDocument(options) {\n            XMLDocument.__super__.constructor.call(this, null);\n            this.name = \"?xml\";\n            options || (options = {});\n            if (!options.writer) {\n                options.writer = new XMLStringWriter();\n            }\n            this.options = options;\n            this.stringify = new XMLStringifier(options);\n            this.isDocument = true;\n        }\n        XMLDocument.prototype.end = function(writer) {\n            var writerOptions;\n            if (!writer) {\n                writer = this.options.writer;\n            } else if (isPlainObject(writer)) {\n                writerOptions = writer;\n                writer = this.options.writer.set(writerOptions);\n            }\n            return writer.document(this);\n        };\n        XMLDocument.prototype.toString = function(options) {\n            return this.options.writer.set(options).document(this);\n        };\n        return XMLDocument;\n    }(XMLNode);\n}).call(void 0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL3htbGJ1aWxkZXIvbGliL1hNTERvY3VtZW50LmpzIiwibWFwcGluZ3MiOiI7QUFBQSxtQ0FBbUM7QUFDbEM7SUFDQyxJQUFJQSxhQUFhQyxTQUFTQyxpQkFBaUJDLGdCQUFnQkMsZUFDekRDLFNBQVMsU0FBU0MsS0FBSyxFQUFFQyxNQUFNO1FBQUksSUFBSyxJQUFJQyxPQUFPRCxPQUFRO1lBQUUsSUFBSUUsUUFBUUMsSUFBSSxDQUFDSCxRQUFRQyxNQUFNRixLQUFLLENBQUNFLElBQUksR0FBR0QsTUFBTSxDQUFDQyxJQUFJO1FBQUU7UUFBRSxTQUFTRztZQUFTLElBQUksQ0FBQ0MsV0FBVyxHQUFHTjtRQUFPO1FBQUVLLEtBQUtFLFNBQVMsR0FBR04sT0FBT00sU0FBUztRQUFFUCxNQUFNTyxTQUFTLEdBQUcsSUFBSUY7UUFBUUwsTUFBTVEsU0FBUyxHQUFHUCxPQUFPTSxTQUFTO1FBQUUsT0FBT1A7SUFBTyxHQUN6UkcsVUFBVSxDQUFDLEVBQUVNLGNBQWM7SUFFN0JYLGdCQUFnQlksdUdBQWtDO0lBRWxEZixVQUFVZSxtQkFBT0EsQ0FBQztJQUVsQmIsaUJBQWlCYSxtQkFBT0EsQ0FBQztJQUV6QmQsa0JBQWtCYyxtQkFBT0EsQ0FBQztJQUUxQkMsT0FBT0MsT0FBTyxHQUFHbEIsY0FBYyxTQUFVbUIsVUFBVTtRQUNqRGQsT0FBT0wsYUFBYW1CO1FBRXBCLFNBQVNuQixZQUFZb0IsT0FBTztZQUMxQnBCLFlBQVljLFNBQVMsQ0FBQ0YsV0FBVyxDQUFDRixJQUFJLENBQUMsSUFBSSxFQUFFO1lBQzdDLElBQUksQ0FBQ1csSUFBSSxHQUFHO1lBQ1pELFdBQVlBLENBQUFBLFVBQVUsQ0FBQztZQUN2QixJQUFJLENBQUNBLFFBQVFFLE1BQU0sRUFBRTtnQkFDbkJGLFFBQVFFLE1BQU0sR0FBRyxJQUFJcEI7WUFDdkI7WUFDQSxJQUFJLENBQUNrQixPQUFPLEdBQUdBO1lBQ2YsSUFBSSxDQUFDRyxTQUFTLEdBQUcsSUFBSXBCLGVBQWVpQjtZQUNwQyxJQUFJLENBQUNJLFVBQVUsR0FBRztRQUNwQjtRQUVBeEIsWUFBWWEsU0FBUyxDQUFDWSxHQUFHLEdBQUcsU0FBU0gsTUFBTTtZQUN6QyxJQUFJSTtZQUNKLElBQUksQ0FBQ0osUUFBUTtnQkFDWEEsU0FBUyxJQUFJLENBQUNGLE9BQU8sQ0FBQ0UsTUFBTTtZQUM5QixPQUFPLElBQUlsQixjQUFja0IsU0FBUztnQkFDaENJLGdCQUFnQko7Z0JBQ2hCQSxTQUFTLElBQUksQ0FBQ0YsT0FBTyxDQUFDRSxNQUFNLENBQUNLLEdBQUcsQ0FBQ0Q7WUFDbkM7WUFDQSxPQUFPSixPQUFPTSxRQUFRLENBQUMsSUFBSTtRQUM3QjtRQUVBNUIsWUFBWWEsU0FBUyxDQUFDZ0IsUUFBUSxHQUFHLFNBQVNULE9BQU87WUFDL0MsT0FBTyxJQUFJLENBQUNBLE9BQU8sQ0FBQ0UsTUFBTSxDQUFDSyxHQUFHLENBQUNQLFNBQVNRLFFBQVEsQ0FBQyxJQUFJO1FBQ3ZEO1FBRUEsT0FBTzVCO0lBRVQsRUFBR0M7QUFFTCxHQUFHUyxJQUFJLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ldHMtYWVyby1pc28tZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL3htbGJ1aWxkZXIvbGliL1hNTERvY3VtZW50LmpzP2FkYmEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gR2VuZXJhdGVkIGJ5IENvZmZlZVNjcmlwdCAxLjEyLjdcbihmdW5jdGlvbigpIHtcbiAgdmFyIFhNTERvY3VtZW50LCBYTUxOb2RlLCBYTUxTdHJpbmdXcml0ZXIsIFhNTFN0cmluZ2lmaWVyLCBpc1BsYWluT2JqZWN0LFxuICAgIGV4dGVuZCA9IGZ1bmN0aW9uKGNoaWxkLCBwYXJlbnQpIHsgZm9yICh2YXIga2V5IGluIHBhcmVudCkgeyBpZiAoaGFzUHJvcC5jYWxsKHBhcmVudCwga2V5KSkgY2hpbGRba2V5XSA9IHBhcmVudFtrZXldOyB9IGZ1bmN0aW9uIGN0b3IoKSB7IHRoaXMuY29uc3RydWN0b3IgPSBjaGlsZDsgfSBjdG9yLnByb3RvdHlwZSA9IHBhcmVudC5wcm90b3R5cGU7IGNoaWxkLnByb3RvdHlwZSA9IG5ldyBjdG9yKCk7IGNoaWxkLl9fc3VwZXJfXyA9IHBhcmVudC5wcm90b3R5cGU7IHJldHVybiBjaGlsZDsgfSxcbiAgICBoYXNQcm9wID0ge30uaGFzT3duUHJvcGVydHk7XG5cbiAgaXNQbGFpbk9iamVjdCA9IHJlcXVpcmUoJy4vVXRpbGl0eScpLmlzUGxhaW5PYmplY3Q7XG5cbiAgWE1MTm9kZSA9IHJlcXVpcmUoJy4vWE1MTm9kZScpO1xuXG4gIFhNTFN0cmluZ2lmaWVyID0gcmVxdWlyZSgnLi9YTUxTdHJpbmdpZmllcicpO1xuXG4gIFhNTFN0cmluZ1dyaXRlciA9IHJlcXVpcmUoJy4vWE1MU3RyaW5nV3JpdGVyJyk7XG5cbiAgbW9kdWxlLmV4cG9ydHMgPSBYTUxEb2N1bWVudCA9IChmdW5jdGlvbihzdXBlckNsYXNzKSB7XG4gICAgZXh0ZW5kKFhNTERvY3VtZW50LCBzdXBlckNsYXNzKTtcblxuICAgIGZ1bmN0aW9uIFhNTERvY3VtZW50KG9wdGlvbnMpIHtcbiAgICAgIFhNTERvY3VtZW50Ll9fc3VwZXJfXy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsIG51bGwpO1xuICAgICAgdGhpcy5uYW1lID0gXCI/eG1sXCI7XG4gICAgICBvcHRpb25zIHx8IChvcHRpb25zID0ge30pO1xuICAgICAgaWYgKCFvcHRpb25zLndyaXRlcikge1xuICAgICAgICBvcHRpb25zLndyaXRlciA9IG5ldyBYTUxTdHJpbmdXcml0ZXIoKTtcbiAgICAgIH1cbiAgICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG4gICAgICB0aGlzLnN0cmluZ2lmeSA9IG5ldyBYTUxTdHJpbmdpZmllcihvcHRpb25zKTtcbiAgICAgIHRoaXMuaXNEb2N1bWVudCA9IHRydWU7XG4gICAgfVxuXG4gICAgWE1MRG9jdW1lbnQucHJvdG90eXBlLmVuZCA9IGZ1bmN0aW9uKHdyaXRlcikge1xuICAgICAgdmFyIHdyaXRlck9wdGlvbnM7XG4gICAgICBpZiAoIXdyaXRlcikge1xuICAgICAgICB3cml0ZXIgPSB0aGlzLm9wdGlvbnMud3JpdGVyO1xuICAgICAgfSBlbHNlIGlmIChpc1BsYWluT2JqZWN0KHdyaXRlcikpIHtcbiAgICAgICAgd3JpdGVyT3B0aW9ucyA9IHdyaXRlcjtcbiAgICAgICAgd3JpdGVyID0gdGhpcy5vcHRpb25zLndyaXRlci5zZXQod3JpdGVyT3B0aW9ucyk7XG4gICAgICB9XG4gICAgICByZXR1cm4gd3JpdGVyLmRvY3VtZW50KHRoaXMpO1xuICAgIH07XG5cbiAgICBYTUxEb2N1bWVudC5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbihvcHRpb25zKSB7XG4gICAgICByZXR1cm4gdGhpcy5vcHRpb25zLndyaXRlci5zZXQob3B0aW9ucykuZG9jdW1lbnQodGhpcyk7XG4gICAgfTtcblxuICAgIHJldHVybiBYTUxEb2N1bWVudDtcblxuICB9KShYTUxOb2RlKTtcblxufSkuY2FsbCh0aGlzKTtcbiJdLCJuYW1lcyI6WyJYTUxEb2N1bWVudCIsIlhNTE5vZGUiLCJYTUxTdHJpbmdXcml0ZXIiLCJYTUxTdHJpbmdpZmllciIsImlzUGxhaW5PYmplY3QiLCJleHRlbmQiLCJjaGlsZCIsInBhcmVudCIsImtleSIsImhhc1Byb3AiLCJjYWxsIiwiY3RvciIsImNvbnN0cnVjdG9yIiwicHJvdG90eXBlIiwiX19zdXBlcl9fIiwiaGFzT3duUHJvcGVydHkiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsInN1cGVyQ2xhc3MiLCJvcHRpb25zIiwibmFtZSIsIndyaXRlciIsInN0cmluZ2lmeSIsImlzRG9jdW1lbnQiLCJlbmQiLCJ3cml0ZXJPcHRpb25zIiwic2V0IiwiZG9jdW1lbnQiLCJ0b1N0cmluZyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/xmlbuilder/lib/XMLDocument.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/xmlbuilder/lib/XMLDocumentCB.js":
/*!*******************************************************!*\
  !*** ../node_modules/xmlbuilder/lib/XMLDocumentCB.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n// Generated by CoffeeScript 1.12.7\n(function() {\n    var XMLAttribute, XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLDocumentCB, XMLElement, XMLProcessingInstruction, XMLRaw, XMLStringWriter, XMLStringifier, XMLText, getValue, isFunction, isObject, isPlainObject, ref, hasProp = {}.hasOwnProperty;\n    ref = __webpack_require__(/*! ./Utility */ \"(ssr)/../node_modules/xmlbuilder/lib/Utility.js\"), isObject = ref.isObject, isFunction = ref.isFunction, isPlainObject = ref.isPlainObject, getValue = ref.getValue;\n    XMLElement = __webpack_require__(/*! ./XMLElement */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLElement.js\");\n    XMLCData = __webpack_require__(/*! ./XMLCData */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLCData.js\");\n    XMLComment = __webpack_require__(/*! ./XMLComment */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLComment.js\");\n    XMLRaw = __webpack_require__(/*! ./XMLRaw */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLRaw.js\");\n    XMLText = __webpack_require__(/*! ./XMLText */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLText.js\");\n    XMLProcessingInstruction = __webpack_require__(/*! ./XMLProcessingInstruction */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLProcessingInstruction.js\");\n    XMLDeclaration = __webpack_require__(/*! ./XMLDeclaration */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLDeclaration.js\");\n    XMLDocType = __webpack_require__(/*! ./XMLDocType */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLDocType.js\");\n    XMLDTDAttList = __webpack_require__(/*! ./XMLDTDAttList */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLDTDAttList.js\");\n    XMLDTDEntity = __webpack_require__(/*! ./XMLDTDEntity */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLDTDEntity.js\");\n    XMLDTDElement = __webpack_require__(/*! ./XMLDTDElement */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLDTDElement.js\");\n    XMLDTDNotation = __webpack_require__(/*! ./XMLDTDNotation */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLDTDNotation.js\");\n    XMLAttribute = __webpack_require__(/*! ./XMLAttribute */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLAttribute.js\");\n    XMLStringifier = __webpack_require__(/*! ./XMLStringifier */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLStringifier.js\");\n    XMLStringWriter = __webpack_require__(/*! ./XMLStringWriter */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLStringWriter.js\");\n    module.exports = XMLDocumentCB = function() {\n        function XMLDocumentCB(options, onData, onEnd) {\n            var writerOptions;\n            this.name = \"?xml\";\n            options || (options = {});\n            if (!options.writer) {\n                options.writer = new XMLStringWriter(options);\n            } else if (isPlainObject(options.writer)) {\n                writerOptions = options.writer;\n                options.writer = new XMLStringWriter(writerOptions);\n            }\n            this.options = options;\n            this.writer = options.writer;\n            this.stringify = new XMLStringifier(options);\n            this.onDataCallback = onData || function() {};\n            this.onEndCallback = onEnd || function() {};\n            this.currentNode = null;\n            this.currentLevel = -1;\n            this.openTags = {};\n            this.documentStarted = false;\n            this.documentCompleted = false;\n            this.root = null;\n        }\n        XMLDocumentCB.prototype.node = function(name, attributes, text) {\n            var ref1, ref2;\n            if (name == null) {\n                throw new Error(\"Missing node name.\");\n            }\n            if (this.root && this.currentLevel === -1) {\n                throw new Error(\"Document can only have one root node. \" + this.debugInfo(name));\n            }\n            this.openCurrent();\n            name = getValue(name);\n            if (attributes === null && text == null) {\n                ref1 = [\n                    {},\n                    null\n                ], attributes = ref1[0], text = ref1[1];\n            }\n            if (attributes == null) {\n                attributes = {};\n            }\n            attributes = getValue(attributes);\n            if (!isObject(attributes)) {\n                ref2 = [\n                    attributes,\n                    text\n                ], text = ref2[0], attributes = ref2[1];\n            }\n            this.currentNode = new XMLElement(this, name, attributes);\n            this.currentNode.children = false;\n            this.currentLevel++;\n            this.openTags[this.currentLevel] = this.currentNode;\n            if (text != null) {\n                this.text(text);\n            }\n            return this;\n        };\n        XMLDocumentCB.prototype.element = function(name, attributes, text) {\n            if (this.currentNode && this.currentNode instanceof XMLDocType) {\n                return this.dtdElement.apply(this, arguments);\n            } else {\n                return this.node(name, attributes, text);\n            }\n        };\n        XMLDocumentCB.prototype.attribute = function(name, value) {\n            var attName, attValue;\n            if (!this.currentNode || this.currentNode.children) {\n                throw new Error(\"att() can only be used immediately after an ele() call in callback mode. \" + this.debugInfo(name));\n            }\n            if (name != null) {\n                name = getValue(name);\n            }\n            if (isObject(name)) {\n                for(attName in name){\n                    if (!hasProp.call(name, attName)) continue;\n                    attValue = name[attName];\n                    this.attribute(attName, attValue);\n                }\n            } else {\n                if (isFunction(value)) {\n                    value = value.apply();\n                }\n                if (!this.options.skipNullAttributes || value != null) {\n                    this.currentNode.attributes[name] = new XMLAttribute(this, name, value);\n                }\n            }\n            return this;\n        };\n        XMLDocumentCB.prototype.text = function(value) {\n            var node;\n            this.openCurrent();\n            node = new XMLText(this, value);\n            this.onData(this.writer.text(node, this.currentLevel + 1), this.currentLevel + 1);\n            return this;\n        };\n        XMLDocumentCB.prototype.cdata = function(value) {\n            var node;\n            this.openCurrent();\n            node = new XMLCData(this, value);\n            this.onData(this.writer.cdata(node, this.currentLevel + 1), this.currentLevel + 1);\n            return this;\n        };\n        XMLDocumentCB.prototype.comment = function(value) {\n            var node;\n            this.openCurrent();\n            node = new XMLComment(this, value);\n            this.onData(this.writer.comment(node, this.currentLevel + 1), this.currentLevel + 1);\n            return this;\n        };\n        XMLDocumentCB.prototype.raw = function(value) {\n            var node;\n            this.openCurrent();\n            node = new XMLRaw(this, value);\n            this.onData(this.writer.raw(node, this.currentLevel + 1), this.currentLevel + 1);\n            return this;\n        };\n        XMLDocumentCB.prototype.instruction = function(target, value) {\n            var i, insTarget, insValue, len, node;\n            this.openCurrent();\n            if (target != null) {\n                target = getValue(target);\n            }\n            if (value != null) {\n                value = getValue(value);\n            }\n            if (Array.isArray(target)) {\n                for(i = 0, len = target.length; i < len; i++){\n                    insTarget = target[i];\n                    this.instruction(insTarget);\n                }\n            } else if (isObject(target)) {\n                for(insTarget in target){\n                    if (!hasProp.call(target, insTarget)) continue;\n                    insValue = target[insTarget];\n                    this.instruction(insTarget, insValue);\n                }\n            } else {\n                if (isFunction(value)) {\n                    value = value.apply();\n                }\n                node = new XMLProcessingInstruction(this, target, value);\n                this.onData(this.writer.processingInstruction(node, this.currentLevel + 1), this.currentLevel + 1);\n            }\n            return this;\n        };\n        XMLDocumentCB.prototype.declaration = function(version, encoding, standalone) {\n            var node;\n            this.openCurrent();\n            if (this.documentStarted) {\n                throw new Error(\"declaration() must be the first node.\");\n            }\n            node = new XMLDeclaration(this, version, encoding, standalone);\n            this.onData(this.writer.declaration(node, this.currentLevel + 1), this.currentLevel + 1);\n            return this;\n        };\n        XMLDocumentCB.prototype.doctype = function(root, pubID, sysID) {\n            this.openCurrent();\n            if (root == null) {\n                throw new Error(\"Missing root node name.\");\n            }\n            if (this.root) {\n                throw new Error(\"dtd() must come before the root node.\");\n            }\n            this.currentNode = new XMLDocType(this, pubID, sysID);\n            this.currentNode.rootNodeName = root;\n            this.currentNode.children = false;\n            this.currentLevel++;\n            this.openTags[this.currentLevel] = this.currentNode;\n            return this;\n        };\n        XMLDocumentCB.prototype.dtdElement = function(name, value) {\n            var node;\n            this.openCurrent();\n            node = new XMLDTDElement(this, name, value);\n            this.onData(this.writer.dtdElement(node, this.currentLevel + 1), this.currentLevel + 1);\n            return this;\n        };\n        XMLDocumentCB.prototype.attList = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n            var node;\n            this.openCurrent();\n            node = new XMLDTDAttList(this, elementName, attributeName, attributeType, defaultValueType, defaultValue);\n            this.onData(this.writer.dtdAttList(node, this.currentLevel + 1), this.currentLevel + 1);\n            return this;\n        };\n        XMLDocumentCB.prototype.entity = function(name, value) {\n            var node;\n            this.openCurrent();\n            node = new XMLDTDEntity(this, false, name, value);\n            this.onData(this.writer.dtdEntity(node, this.currentLevel + 1), this.currentLevel + 1);\n            return this;\n        };\n        XMLDocumentCB.prototype.pEntity = function(name, value) {\n            var node;\n            this.openCurrent();\n            node = new XMLDTDEntity(this, true, name, value);\n            this.onData(this.writer.dtdEntity(node, this.currentLevel + 1), this.currentLevel + 1);\n            return this;\n        };\n        XMLDocumentCB.prototype.notation = function(name, value) {\n            var node;\n            this.openCurrent();\n            node = new XMLDTDNotation(this, name, value);\n            this.onData(this.writer.dtdNotation(node, this.currentLevel + 1), this.currentLevel + 1);\n            return this;\n        };\n        XMLDocumentCB.prototype.up = function() {\n            if (this.currentLevel < 0) {\n                throw new Error(\"The document node has no parent.\");\n            }\n            if (this.currentNode) {\n                if (this.currentNode.children) {\n                    this.closeNode(this.currentNode);\n                } else {\n                    this.openNode(this.currentNode);\n                }\n                this.currentNode = null;\n            } else {\n                this.closeNode(this.openTags[this.currentLevel]);\n            }\n            delete this.openTags[this.currentLevel];\n            this.currentLevel--;\n            return this;\n        };\n        XMLDocumentCB.prototype.end = function() {\n            while(this.currentLevel >= 0){\n                this.up();\n            }\n            return this.onEnd();\n        };\n        XMLDocumentCB.prototype.openCurrent = function() {\n            if (this.currentNode) {\n                this.currentNode.children = true;\n                return this.openNode(this.currentNode);\n            }\n        };\n        XMLDocumentCB.prototype.openNode = function(node) {\n            if (!node.isOpen) {\n                if (!this.root && this.currentLevel === 0 && node instanceof XMLElement) {\n                    this.root = node;\n                }\n                this.onData(this.writer.openNode(node, this.currentLevel), this.currentLevel);\n                return node.isOpen = true;\n            }\n        };\n        XMLDocumentCB.prototype.closeNode = function(node) {\n            if (!node.isClosed) {\n                this.onData(this.writer.closeNode(node, this.currentLevel), this.currentLevel);\n                return node.isClosed = true;\n            }\n        };\n        XMLDocumentCB.prototype.onData = function(chunk, level) {\n            this.documentStarted = true;\n            return this.onDataCallback(chunk, level + 1);\n        };\n        XMLDocumentCB.prototype.onEnd = function() {\n            this.documentCompleted = true;\n            return this.onEndCallback();\n        };\n        XMLDocumentCB.prototype.debugInfo = function(name) {\n            if (name == null) {\n                return \"\";\n            } else {\n                return \"node: <\" + name + \">\";\n            }\n        };\n        XMLDocumentCB.prototype.ele = function() {\n            return this.element.apply(this, arguments);\n        };\n        XMLDocumentCB.prototype.nod = function(name, attributes, text) {\n            return this.node(name, attributes, text);\n        };\n        XMLDocumentCB.prototype.txt = function(value) {\n            return this.text(value);\n        };\n        XMLDocumentCB.prototype.dat = function(value) {\n            return this.cdata(value);\n        };\n        XMLDocumentCB.prototype.com = function(value) {\n            return this.comment(value);\n        };\n        XMLDocumentCB.prototype.ins = function(target, value) {\n            return this.instruction(target, value);\n        };\n        XMLDocumentCB.prototype.dec = function(version, encoding, standalone) {\n            return this.declaration(version, encoding, standalone);\n        };\n        XMLDocumentCB.prototype.dtd = function(root, pubID, sysID) {\n            return this.doctype(root, pubID, sysID);\n        };\n        XMLDocumentCB.prototype.e = function(name, attributes, text) {\n            return this.element(name, attributes, text);\n        };\n        XMLDocumentCB.prototype.n = function(name, attributes, text) {\n            return this.node(name, attributes, text);\n        };\n        XMLDocumentCB.prototype.t = function(value) {\n            return this.text(value);\n        };\n        XMLDocumentCB.prototype.d = function(value) {\n            return this.cdata(value);\n        };\n        XMLDocumentCB.prototype.c = function(value) {\n            return this.comment(value);\n        };\n        XMLDocumentCB.prototype.r = function(value) {\n            return this.raw(value);\n        };\n        XMLDocumentCB.prototype.i = function(target, value) {\n            return this.instruction(target, value);\n        };\n        XMLDocumentCB.prototype.att = function() {\n            if (this.currentNode && this.currentNode instanceof XMLDocType) {\n                return this.attList.apply(this, arguments);\n            } else {\n                return this.attribute.apply(this, arguments);\n            }\n        };\n        XMLDocumentCB.prototype.a = function() {\n            if (this.currentNode && this.currentNode instanceof XMLDocType) {\n                return this.attList.apply(this, arguments);\n            } else {\n                return this.attribute.apply(this, arguments);\n            }\n        };\n        XMLDocumentCB.prototype.ent = function(name, value) {\n            return this.entity(name, value);\n        };\n        XMLDocumentCB.prototype.pent = function(name, value) {\n            return this.pEntity(name, value);\n        };\n        XMLDocumentCB.prototype.not = function(name, value) {\n            return this.notation(name, value);\n        };\n        return XMLDocumentCB;\n    }();\n}).call(void 0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/xmlbuilder/lib/XMLDocumentCB.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/xmlbuilder/lib/XMLDummy.js":
/*!**************************************************!*\
  !*** ../node_modules/xmlbuilder/lib/XMLDummy.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n// Generated by CoffeeScript 1.12.7\n(function() {\n    var XMLDummy, XMLNode, extend = function(child, parent) {\n        for(var key in parent){\n            if (hasProp.call(parent, key)) child[key] = parent[key];\n        }\n        function ctor() {\n            this.constructor = child;\n        }\n        ctor.prototype = parent.prototype;\n        child.prototype = new ctor();\n        child.__super__ = parent.prototype;\n        return child;\n    }, hasProp = {}.hasOwnProperty;\n    XMLNode = __webpack_require__(/*! ./XMLNode */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLNode.js\");\n    module.exports = XMLDummy = function(superClass) {\n        extend(XMLDummy, superClass);\n        function XMLDummy(parent) {\n            XMLDummy.__super__.constructor.call(this, parent);\n            this.isDummy = true;\n        }\n        XMLDummy.prototype.clone = function() {\n            return Object.create(this);\n        };\n        XMLDummy.prototype.toString = function(options) {\n            return \"\";\n        };\n        return XMLDummy;\n    }(XMLNode);\n}).call(void 0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL3htbGJ1aWxkZXIvbGliL1hNTER1bW15LmpzIiwibWFwcGluZ3MiOiI7QUFBQSxtQ0FBbUM7QUFDbEM7SUFDQyxJQUFJQSxVQUFVQyxTQUNaQyxTQUFTLFNBQVNDLEtBQUssRUFBRUMsTUFBTTtRQUFJLElBQUssSUFBSUMsT0FBT0QsT0FBUTtZQUFFLElBQUlFLFFBQVFDLElBQUksQ0FBQ0gsUUFBUUMsTUFBTUYsS0FBSyxDQUFDRSxJQUFJLEdBQUdELE1BQU0sQ0FBQ0MsSUFBSTtRQUFFO1FBQUUsU0FBU0c7WUFBUyxJQUFJLENBQUNDLFdBQVcsR0FBR047UUFBTztRQUFFSyxLQUFLRSxTQUFTLEdBQUdOLE9BQU9NLFNBQVM7UUFBRVAsTUFBTU8sU0FBUyxHQUFHLElBQUlGO1FBQVFMLE1BQU1RLFNBQVMsR0FBR1AsT0FBT00sU0FBUztRQUFFLE9BQU9QO0lBQU8sR0FDelJHLFVBQVUsQ0FBQyxFQUFFTSxjQUFjO0lBRTdCWCxVQUFVWSxtQkFBT0EsQ0FBQztJQUVsQkMsT0FBT0MsT0FBTyxHQUFHZixXQUFXLFNBQVVnQixVQUFVO1FBQzlDZCxPQUFPRixVQUFVZ0I7UUFFakIsU0FBU2hCLFNBQVNJLE1BQU07WUFDdEJKLFNBQVNXLFNBQVMsQ0FBQ0YsV0FBVyxDQUFDRixJQUFJLENBQUMsSUFBSSxFQUFFSDtZQUMxQyxJQUFJLENBQUNhLE9BQU8sR0FBRztRQUNqQjtRQUVBakIsU0FBU1UsU0FBUyxDQUFDUSxLQUFLLEdBQUc7WUFDekIsT0FBT0MsT0FBT0MsTUFBTSxDQUFDLElBQUk7UUFDM0I7UUFFQXBCLFNBQVNVLFNBQVMsQ0FBQ1csUUFBUSxHQUFHLFNBQVNDLE9BQU87WUFDNUMsT0FBTztRQUNUO1FBRUEsT0FBT3RCO0lBRVQsRUFBR0M7QUFFTCxHQUFHTSxJQUFJLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ldHMtYWVyby1pc28tZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL3htbGJ1aWxkZXIvbGliL1hNTER1bW15LmpzPzI4ZjEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gR2VuZXJhdGVkIGJ5IENvZmZlZVNjcmlwdCAxLjEyLjdcbihmdW5jdGlvbigpIHtcbiAgdmFyIFhNTER1bW15LCBYTUxOb2RlLFxuICAgIGV4dGVuZCA9IGZ1bmN0aW9uKGNoaWxkLCBwYXJlbnQpIHsgZm9yICh2YXIga2V5IGluIHBhcmVudCkgeyBpZiAoaGFzUHJvcC5jYWxsKHBhcmVudCwga2V5KSkgY2hpbGRba2V5XSA9IHBhcmVudFtrZXldOyB9IGZ1bmN0aW9uIGN0b3IoKSB7IHRoaXMuY29uc3RydWN0b3IgPSBjaGlsZDsgfSBjdG9yLnByb3RvdHlwZSA9IHBhcmVudC5wcm90b3R5cGU7IGNoaWxkLnByb3RvdHlwZSA9IG5ldyBjdG9yKCk7IGNoaWxkLl9fc3VwZXJfXyA9IHBhcmVudC5wcm90b3R5cGU7IHJldHVybiBjaGlsZDsgfSxcbiAgICBoYXNQcm9wID0ge30uaGFzT3duUHJvcGVydHk7XG5cbiAgWE1MTm9kZSA9IHJlcXVpcmUoJy4vWE1MTm9kZScpO1xuXG4gIG1vZHVsZS5leHBvcnRzID0gWE1MRHVtbXkgPSAoZnVuY3Rpb24oc3VwZXJDbGFzcykge1xuICAgIGV4dGVuZChYTUxEdW1teSwgc3VwZXJDbGFzcyk7XG5cbiAgICBmdW5jdGlvbiBYTUxEdW1teShwYXJlbnQpIHtcbiAgICAgIFhNTER1bW15Ll9fc3VwZXJfXy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsIHBhcmVudCk7XG4gICAgICB0aGlzLmlzRHVtbXkgPSB0cnVlO1xuICAgIH1cblxuICAgIFhNTER1bW15LnByb3RvdHlwZS5jbG9uZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIE9iamVjdC5jcmVhdGUodGhpcyk7XG4gICAgfTtcblxuICAgIFhNTER1bW15LnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uKG9wdGlvbnMpIHtcbiAgICAgIHJldHVybiAnJztcbiAgICB9O1xuXG4gICAgcmV0dXJuIFhNTER1bW15O1xuXG4gIH0pKFhNTE5vZGUpO1xuXG59KS5jYWxsKHRoaXMpO1xuIl0sIm5hbWVzIjpbIlhNTER1bW15IiwiWE1MTm9kZSIsImV4dGVuZCIsImNoaWxkIiwicGFyZW50Iiwia2V5IiwiaGFzUHJvcCIsImNhbGwiLCJjdG9yIiwiY29uc3RydWN0b3IiLCJwcm90b3R5cGUiLCJfX3N1cGVyX18iLCJoYXNPd25Qcm9wZXJ0eSIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwic3VwZXJDbGFzcyIsImlzRHVtbXkiLCJjbG9uZSIsIk9iamVjdCIsImNyZWF0ZSIsInRvU3RyaW5nIiwib3B0aW9ucyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/xmlbuilder/lib/XMLDummy.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/xmlbuilder/lib/XMLElement.js":
/*!****************************************************!*\
  !*** ../node_modules/xmlbuilder/lib/XMLElement.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n// Generated by CoffeeScript 1.12.7\n(function() {\n    var XMLAttribute, XMLElement, XMLNode, getValue, isFunction, isObject, ref, extend = function(child, parent) {\n        for(var key in parent){\n            if (hasProp.call(parent, key)) child[key] = parent[key];\n        }\n        function ctor() {\n            this.constructor = child;\n        }\n        ctor.prototype = parent.prototype;\n        child.prototype = new ctor();\n        child.__super__ = parent.prototype;\n        return child;\n    }, hasProp = {}.hasOwnProperty;\n    ref = __webpack_require__(/*! ./Utility */ \"(ssr)/../node_modules/xmlbuilder/lib/Utility.js\"), isObject = ref.isObject, isFunction = ref.isFunction, getValue = ref.getValue;\n    XMLNode = __webpack_require__(/*! ./XMLNode */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLNode.js\");\n    XMLAttribute = __webpack_require__(/*! ./XMLAttribute */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLAttribute.js\");\n    module.exports = XMLElement = function(superClass) {\n        extend(XMLElement, superClass);\n        function XMLElement(parent, name, attributes) {\n            XMLElement.__super__.constructor.call(this, parent);\n            if (name == null) {\n                throw new Error(\"Missing element name. \" + this.debugInfo());\n            }\n            this.name = this.stringify.eleName(name);\n            this.attributes = {};\n            if (attributes != null) {\n                this.attribute(attributes);\n            }\n            if (parent.isDocument) {\n                this.isRoot = true;\n                this.documentObject = parent;\n                parent.rootObject = this;\n            }\n        }\n        XMLElement.prototype.clone = function() {\n            var att, attName, clonedSelf, ref1;\n            clonedSelf = Object.create(this);\n            if (clonedSelf.isRoot) {\n                clonedSelf.documentObject = null;\n            }\n            clonedSelf.attributes = {};\n            ref1 = this.attributes;\n            for(attName in ref1){\n                if (!hasProp.call(ref1, attName)) continue;\n                att = ref1[attName];\n                clonedSelf.attributes[attName] = att.clone();\n            }\n            clonedSelf.children = [];\n            this.children.forEach(function(child) {\n                var clonedChild;\n                clonedChild = child.clone();\n                clonedChild.parent = clonedSelf;\n                return clonedSelf.children.push(clonedChild);\n            });\n            return clonedSelf;\n        };\n        XMLElement.prototype.attribute = function(name, value) {\n            var attName, attValue;\n            if (name != null) {\n                name = getValue(name);\n            }\n            if (isObject(name)) {\n                for(attName in name){\n                    if (!hasProp.call(name, attName)) continue;\n                    attValue = name[attName];\n                    this.attribute(attName, attValue);\n                }\n            } else {\n                if (isFunction(value)) {\n                    value = value.apply();\n                }\n                if (!this.options.skipNullAttributes || value != null) {\n                    this.attributes[name] = new XMLAttribute(this, name, value);\n                }\n            }\n            return this;\n        };\n        XMLElement.prototype.removeAttribute = function(name) {\n            var attName, i, len;\n            if (name == null) {\n                throw new Error(\"Missing attribute name. \" + this.debugInfo());\n            }\n            name = getValue(name);\n            if (Array.isArray(name)) {\n                for(i = 0, len = name.length; i < len; i++){\n                    attName = name[i];\n                    delete this.attributes[attName];\n                }\n            } else {\n                delete this.attributes[name];\n            }\n            return this;\n        };\n        XMLElement.prototype.toString = function(options) {\n            return this.options.writer.set(options).element(this);\n        };\n        XMLElement.prototype.att = function(name, value) {\n            return this.attribute(name, value);\n        };\n        XMLElement.prototype.a = function(name, value) {\n            return this.attribute(name, value);\n        };\n        return XMLElement;\n    }(XMLNode);\n}).call(void 0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/xmlbuilder/lib/XMLElement.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/xmlbuilder/lib/XMLNode.js":
/*!*************************************************!*\
  !*** ../node_modules/xmlbuilder/lib/XMLNode.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n// Generated by CoffeeScript 1.12.7\n(function() {\n    var XMLCData, XMLComment, XMLDeclaration, XMLDocType, XMLDummy, XMLElement, XMLNode, XMLProcessingInstruction, XMLRaw, XMLText, getValue, isEmpty, isFunction, isObject, ref, hasProp = {}.hasOwnProperty;\n    ref = __webpack_require__(/*! ./Utility */ \"(ssr)/../node_modules/xmlbuilder/lib/Utility.js\"), isObject = ref.isObject, isFunction = ref.isFunction, isEmpty = ref.isEmpty, getValue = ref.getValue;\n    XMLElement = null;\n    XMLCData = null;\n    XMLComment = null;\n    XMLDeclaration = null;\n    XMLDocType = null;\n    XMLRaw = null;\n    XMLText = null;\n    XMLProcessingInstruction = null;\n    XMLDummy = null;\n    module.exports = XMLNode = function() {\n        function XMLNode(parent) {\n            this.parent = parent;\n            if (this.parent) {\n                this.options = this.parent.options;\n                this.stringify = this.parent.stringify;\n            }\n            this.children = [];\n            if (!XMLElement) {\n                XMLElement = __webpack_require__(/*! ./XMLElement */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLElement.js\");\n                XMLCData = __webpack_require__(/*! ./XMLCData */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLCData.js\");\n                XMLComment = __webpack_require__(/*! ./XMLComment */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLComment.js\");\n                XMLDeclaration = __webpack_require__(/*! ./XMLDeclaration */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLDeclaration.js\");\n                XMLDocType = __webpack_require__(/*! ./XMLDocType */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLDocType.js\");\n                XMLRaw = __webpack_require__(/*! ./XMLRaw */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLRaw.js\");\n                XMLText = __webpack_require__(/*! ./XMLText */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLText.js\");\n                XMLProcessingInstruction = __webpack_require__(/*! ./XMLProcessingInstruction */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLProcessingInstruction.js\");\n                XMLDummy = __webpack_require__(/*! ./XMLDummy */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLDummy.js\");\n            }\n        }\n        XMLNode.prototype.element = function(name, attributes, text) {\n            var childNode, item, j, k, key, lastChild, len, len1, ref1, ref2, val;\n            lastChild = null;\n            if (attributes === null && text == null) {\n                ref1 = [\n                    {},\n                    null\n                ], attributes = ref1[0], text = ref1[1];\n            }\n            if (attributes == null) {\n                attributes = {};\n            }\n            attributes = getValue(attributes);\n            if (!isObject(attributes)) {\n                ref2 = [\n                    attributes,\n                    text\n                ], text = ref2[0], attributes = ref2[1];\n            }\n            if (name != null) {\n                name = getValue(name);\n            }\n            if (Array.isArray(name)) {\n                for(j = 0, len = name.length; j < len; j++){\n                    item = name[j];\n                    lastChild = this.element(item);\n                }\n            } else if (isFunction(name)) {\n                lastChild = this.element(name.apply());\n            } else if (isObject(name)) {\n                for(key in name){\n                    if (!hasProp.call(name, key)) continue;\n                    val = name[key];\n                    if (isFunction(val)) {\n                        val = val.apply();\n                    }\n                    if (isObject(val) && isEmpty(val)) {\n                        val = null;\n                    }\n                    if (!this.options.ignoreDecorators && this.stringify.convertAttKey && key.indexOf(this.stringify.convertAttKey) === 0) {\n                        lastChild = this.attribute(key.substr(this.stringify.convertAttKey.length), val);\n                    } else if (!this.options.separateArrayItems && Array.isArray(val)) {\n                        for(k = 0, len1 = val.length; k < len1; k++){\n                            item = val[k];\n                            childNode = {};\n                            childNode[key] = item;\n                            lastChild = this.element(childNode);\n                        }\n                    } else if (isObject(val)) {\n                        lastChild = this.element(key);\n                        lastChild.element(val);\n                    } else {\n                        lastChild = this.element(key, val);\n                    }\n                }\n            } else if (this.options.skipNullNodes && text === null) {\n                lastChild = this.dummy();\n            } else {\n                if (!this.options.ignoreDecorators && this.stringify.convertTextKey && name.indexOf(this.stringify.convertTextKey) === 0) {\n                    lastChild = this.text(text);\n                } else if (!this.options.ignoreDecorators && this.stringify.convertCDataKey && name.indexOf(this.stringify.convertCDataKey) === 0) {\n                    lastChild = this.cdata(text);\n                } else if (!this.options.ignoreDecorators && this.stringify.convertCommentKey && name.indexOf(this.stringify.convertCommentKey) === 0) {\n                    lastChild = this.comment(text);\n                } else if (!this.options.ignoreDecorators && this.stringify.convertRawKey && name.indexOf(this.stringify.convertRawKey) === 0) {\n                    lastChild = this.raw(text);\n                } else if (!this.options.ignoreDecorators && this.stringify.convertPIKey && name.indexOf(this.stringify.convertPIKey) === 0) {\n                    lastChild = this.instruction(name.substr(this.stringify.convertPIKey.length), text);\n                } else {\n                    lastChild = this.node(name, attributes, text);\n                }\n            }\n            if (lastChild == null) {\n                throw new Error(\"Could not create any elements with: \" + name + \". \" + this.debugInfo());\n            }\n            return lastChild;\n        };\n        XMLNode.prototype.insertBefore = function(name, attributes, text) {\n            var child, i, removed;\n            if (this.isRoot) {\n                throw new Error(\"Cannot insert elements at root level. \" + this.debugInfo(name));\n            }\n            i = this.parent.children.indexOf(this);\n            removed = this.parent.children.splice(i);\n            child = this.parent.element(name, attributes, text);\n            Array.prototype.push.apply(this.parent.children, removed);\n            return child;\n        };\n        XMLNode.prototype.insertAfter = function(name, attributes, text) {\n            var child, i, removed;\n            if (this.isRoot) {\n                throw new Error(\"Cannot insert elements at root level. \" + this.debugInfo(name));\n            }\n            i = this.parent.children.indexOf(this);\n            removed = this.parent.children.splice(i + 1);\n            child = this.parent.element(name, attributes, text);\n            Array.prototype.push.apply(this.parent.children, removed);\n            return child;\n        };\n        XMLNode.prototype.remove = function() {\n            var i, ref1;\n            if (this.isRoot) {\n                throw new Error(\"Cannot remove the root element. \" + this.debugInfo());\n            }\n            i = this.parent.children.indexOf(this);\n            [].splice.apply(this.parent.children, [\n                i,\n                i - i + 1\n            ].concat(ref1 = [])), ref1;\n            return this.parent;\n        };\n        XMLNode.prototype.node = function(name, attributes, text) {\n            var child, ref1;\n            if (name != null) {\n                name = getValue(name);\n            }\n            attributes || (attributes = {});\n            attributes = getValue(attributes);\n            if (!isObject(attributes)) {\n                ref1 = [\n                    attributes,\n                    text\n                ], text = ref1[0], attributes = ref1[1];\n            }\n            child = new XMLElement(this, name, attributes);\n            if (text != null) {\n                child.text(text);\n            }\n            this.children.push(child);\n            return child;\n        };\n        XMLNode.prototype.text = function(value) {\n            var child;\n            child = new XMLText(this, value);\n            this.children.push(child);\n            return this;\n        };\n        XMLNode.prototype.cdata = function(value) {\n            var child;\n            child = new XMLCData(this, value);\n            this.children.push(child);\n            return this;\n        };\n        XMLNode.prototype.comment = function(value) {\n            var child;\n            child = new XMLComment(this, value);\n            this.children.push(child);\n            return this;\n        };\n        XMLNode.prototype.commentBefore = function(value) {\n            var child, i, removed;\n            i = this.parent.children.indexOf(this);\n            removed = this.parent.children.splice(i);\n            child = this.parent.comment(value);\n            Array.prototype.push.apply(this.parent.children, removed);\n            return this;\n        };\n        XMLNode.prototype.commentAfter = function(value) {\n            var child, i, removed;\n            i = this.parent.children.indexOf(this);\n            removed = this.parent.children.splice(i + 1);\n            child = this.parent.comment(value);\n            Array.prototype.push.apply(this.parent.children, removed);\n            return this;\n        };\n        XMLNode.prototype.raw = function(value) {\n            var child;\n            child = new XMLRaw(this, value);\n            this.children.push(child);\n            return this;\n        };\n        XMLNode.prototype.dummy = function() {\n            var child;\n            child = new XMLDummy(this);\n            this.children.push(child);\n            return child;\n        };\n        XMLNode.prototype.instruction = function(target, value) {\n            var insTarget, insValue, instruction, j, len;\n            if (target != null) {\n                target = getValue(target);\n            }\n            if (value != null) {\n                value = getValue(value);\n            }\n            if (Array.isArray(target)) {\n                for(j = 0, len = target.length; j < len; j++){\n                    insTarget = target[j];\n                    this.instruction(insTarget);\n                }\n            } else if (isObject(target)) {\n                for(insTarget in target){\n                    if (!hasProp.call(target, insTarget)) continue;\n                    insValue = target[insTarget];\n                    this.instruction(insTarget, insValue);\n                }\n            } else {\n                if (isFunction(value)) {\n                    value = value.apply();\n                }\n                instruction = new XMLProcessingInstruction(this, target, value);\n                this.children.push(instruction);\n            }\n            return this;\n        };\n        XMLNode.prototype.instructionBefore = function(target, value) {\n            var child, i, removed;\n            i = this.parent.children.indexOf(this);\n            removed = this.parent.children.splice(i);\n            child = this.parent.instruction(target, value);\n            Array.prototype.push.apply(this.parent.children, removed);\n            return this;\n        };\n        XMLNode.prototype.instructionAfter = function(target, value) {\n            var child, i, removed;\n            i = this.parent.children.indexOf(this);\n            removed = this.parent.children.splice(i + 1);\n            child = this.parent.instruction(target, value);\n            Array.prototype.push.apply(this.parent.children, removed);\n            return this;\n        };\n        XMLNode.prototype.declaration = function(version, encoding, standalone) {\n            var doc, xmldec;\n            doc = this.document();\n            xmldec = new XMLDeclaration(doc, version, encoding, standalone);\n            if (doc.children[0] instanceof XMLDeclaration) {\n                doc.children[0] = xmldec;\n            } else {\n                doc.children.unshift(xmldec);\n            }\n            return doc.root() || doc;\n        };\n        XMLNode.prototype.doctype = function(pubID, sysID) {\n            var child, doc, doctype, i, j, k, len, len1, ref1, ref2;\n            doc = this.document();\n            doctype = new XMLDocType(doc, pubID, sysID);\n            ref1 = doc.children;\n            for(i = j = 0, len = ref1.length; j < len; i = ++j){\n                child = ref1[i];\n                if (child instanceof XMLDocType) {\n                    doc.children[i] = doctype;\n                    return doctype;\n                }\n            }\n            ref2 = doc.children;\n            for(i = k = 0, len1 = ref2.length; k < len1; i = ++k){\n                child = ref2[i];\n                if (child.isRoot) {\n                    doc.children.splice(i, 0, doctype);\n                    return doctype;\n                }\n            }\n            doc.children.push(doctype);\n            return doctype;\n        };\n        XMLNode.prototype.up = function() {\n            if (this.isRoot) {\n                throw new Error(\"The root node has no parent. Use doc() if you need to get the document object.\");\n            }\n            return this.parent;\n        };\n        XMLNode.prototype.root = function() {\n            var node;\n            node = this;\n            while(node){\n                if (node.isDocument) {\n                    return node.rootObject;\n                } else if (node.isRoot) {\n                    return node;\n                } else {\n                    node = node.parent;\n                }\n            }\n        };\n        XMLNode.prototype.document = function() {\n            var node;\n            node = this;\n            while(node){\n                if (node.isDocument) {\n                    return node;\n                } else {\n                    node = node.parent;\n                }\n            }\n        };\n        XMLNode.prototype.end = function(options) {\n            return this.document().end(options);\n        };\n        XMLNode.prototype.prev = function() {\n            var i;\n            i = this.parent.children.indexOf(this);\n            while(i > 0 && this.parent.children[i - 1].isDummy){\n                i = i - 1;\n            }\n            if (i < 1) {\n                throw new Error(\"Already at the first node. \" + this.debugInfo());\n            }\n            return this.parent.children[i - 1];\n        };\n        XMLNode.prototype.next = function() {\n            var i;\n            i = this.parent.children.indexOf(this);\n            while(i < this.parent.children.length - 1 && this.parent.children[i + 1].isDummy){\n                i = i + 1;\n            }\n            if (i === -1 || i === this.parent.children.length - 1) {\n                throw new Error(\"Already at the last node. \" + this.debugInfo());\n            }\n            return this.parent.children[i + 1];\n        };\n        XMLNode.prototype.importDocument = function(doc) {\n            var clonedRoot;\n            clonedRoot = doc.root().clone();\n            clonedRoot.parent = this;\n            clonedRoot.isRoot = false;\n            this.children.push(clonedRoot);\n            return this;\n        };\n        XMLNode.prototype.debugInfo = function(name) {\n            var ref1, ref2;\n            name = name || this.name;\n            if (name == null && !((ref1 = this.parent) != null ? ref1.name : void 0)) {\n                return \"\";\n            } else if (name == null) {\n                return \"parent: <\" + this.parent.name + \">\";\n            } else if (!((ref2 = this.parent) != null ? ref2.name : void 0)) {\n                return \"node: <\" + name + \">\";\n            } else {\n                return \"node: <\" + name + \">, parent: <\" + this.parent.name + \">\";\n            }\n        };\n        XMLNode.prototype.ele = function(name, attributes, text) {\n            return this.element(name, attributes, text);\n        };\n        XMLNode.prototype.nod = function(name, attributes, text) {\n            return this.node(name, attributes, text);\n        };\n        XMLNode.prototype.txt = function(value) {\n            return this.text(value);\n        };\n        XMLNode.prototype.dat = function(value) {\n            return this.cdata(value);\n        };\n        XMLNode.prototype.com = function(value) {\n            return this.comment(value);\n        };\n        XMLNode.prototype.ins = function(target, value) {\n            return this.instruction(target, value);\n        };\n        XMLNode.prototype.doc = function() {\n            return this.document();\n        };\n        XMLNode.prototype.dec = function(version, encoding, standalone) {\n            return this.declaration(version, encoding, standalone);\n        };\n        XMLNode.prototype.dtd = function(pubID, sysID) {\n            return this.doctype(pubID, sysID);\n        };\n        XMLNode.prototype.e = function(name, attributes, text) {\n            return this.element(name, attributes, text);\n        };\n        XMLNode.prototype.n = function(name, attributes, text) {\n            return this.node(name, attributes, text);\n        };\n        XMLNode.prototype.t = function(value) {\n            return this.text(value);\n        };\n        XMLNode.prototype.d = function(value) {\n            return this.cdata(value);\n        };\n        XMLNode.prototype.c = function(value) {\n            return this.comment(value);\n        };\n        XMLNode.prototype.r = function(value) {\n            return this.raw(value);\n        };\n        XMLNode.prototype.i = function(target, value) {\n            return this.instruction(target, value);\n        };\n        XMLNode.prototype.u = function() {\n            return this.up();\n        };\n        XMLNode.prototype.importXMLBuilder = function(doc) {\n            return this.importDocument(doc);\n        };\n        return XMLNode;\n    }();\n}).call(void 0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/xmlbuilder/lib/XMLNode.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/xmlbuilder/lib/XMLProcessingInstruction.js":
/*!******************************************************************!*\
  !*** ../node_modules/xmlbuilder/lib/XMLProcessingInstruction.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n// Generated by CoffeeScript 1.12.7\n(function() {\n    var XMLNode, XMLProcessingInstruction, extend = function(child, parent) {\n        for(var key in parent){\n            if (hasProp.call(parent, key)) child[key] = parent[key];\n        }\n        function ctor() {\n            this.constructor = child;\n        }\n        ctor.prototype = parent.prototype;\n        child.prototype = new ctor();\n        child.__super__ = parent.prototype;\n        return child;\n    }, hasProp = {}.hasOwnProperty;\n    XMLNode = __webpack_require__(/*! ./XMLNode */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLNode.js\");\n    module.exports = XMLProcessingInstruction = function(superClass) {\n        extend(XMLProcessingInstruction, superClass);\n        function XMLProcessingInstruction(parent, target, value) {\n            XMLProcessingInstruction.__super__.constructor.call(this, parent);\n            if (target == null) {\n                throw new Error(\"Missing instruction target. \" + this.debugInfo());\n            }\n            this.target = this.stringify.insTarget(target);\n            if (value) {\n                this.value = this.stringify.insValue(value);\n            }\n        }\n        XMLProcessingInstruction.prototype.clone = function() {\n            return Object.create(this);\n        };\n        XMLProcessingInstruction.prototype.toString = function(options) {\n            return this.options.writer.set(options).processingInstruction(this);\n        };\n        return XMLProcessingInstruction;\n    }(XMLNode);\n}).call(void 0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL3htbGJ1aWxkZXIvbGliL1hNTFByb2Nlc3NpbmdJbnN0cnVjdGlvbi5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsbUNBQW1DO0FBQ2xDO0lBQ0MsSUFBSUEsU0FBU0MsMEJBQ1hDLFNBQVMsU0FBU0MsS0FBSyxFQUFFQyxNQUFNO1FBQUksSUFBSyxJQUFJQyxPQUFPRCxPQUFRO1lBQUUsSUFBSUUsUUFBUUMsSUFBSSxDQUFDSCxRQUFRQyxNQUFNRixLQUFLLENBQUNFLElBQUksR0FBR0QsTUFBTSxDQUFDQyxJQUFJO1FBQUU7UUFBRSxTQUFTRztZQUFTLElBQUksQ0FBQ0MsV0FBVyxHQUFHTjtRQUFPO1FBQUVLLEtBQUtFLFNBQVMsR0FBR04sT0FBT00sU0FBUztRQUFFUCxNQUFNTyxTQUFTLEdBQUcsSUFBSUY7UUFBUUwsTUFBTVEsU0FBUyxHQUFHUCxPQUFPTSxTQUFTO1FBQUUsT0FBT1A7SUFBTyxHQUN6UkcsVUFBVSxDQUFDLEVBQUVNLGNBQWM7SUFFN0JaLFVBQVVhLG1CQUFPQSxDQUFDO0lBRWxCQyxPQUFPQyxPQUFPLEdBQUdkLDJCQUEyQixTQUFVZSxVQUFVO1FBQzlEZCxPQUFPRCwwQkFBMEJlO1FBRWpDLFNBQVNmLHlCQUF5QkcsTUFBTSxFQUFFYSxNQUFNLEVBQUVDLEtBQUs7WUFDckRqQix5QkFBeUJVLFNBQVMsQ0FBQ0YsV0FBVyxDQUFDRixJQUFJLENBQUMsSUFBSSxFQUFFSDtZQUMxRCxJQUFJYSxVQUFVLE1BQU07Z0JBQ2xCLE1BQU0sSUFBSUUsTUFBTSxpQ0FBaUMsSUFBSSxDQUFDQyxTQUFTO1lBQ2pFO1lBQ0EsSUFBSSxDQUFDSCxNQUFNLEdBQUcsSUFBSSxDQUFDSSxTQUFTLENBQUNDLFNBQVMsQ0FBQ0w7WUFDdkMsSUFBSUMsT0FBTztnQkFDVCxJQUFJLENBQUNBLEtBQUssR0FBRyxJQUFJLENBQUNHLFNBQVMsQ0FBQ0UsUUFBUSxDQUFDTDtZQUN2QztRQUNGO1FBRUFqQix5QkFBeUJTLFNBQVMsQ0FBQ2MsS0FBSyxHQUFHO1lBQ3pDLE9BQU9DLE9BQU9DLE1BQU0sQ0FBQyxJQUFJO1FBQzNCO1FBRUF6Qix5QkFBeUJTLFNBQVMsQ0FBQ2lCLFFBQVEsR0FBRyxTQUFTQyxPQUFPO1lBQzVELE9BQU8sSUFBSSxDQUFDQSxPQUFPLENBQUNDLE1BQU0sQ0FBQ0MsR0FBRyxDQUFDRixTQUFTRyxxQkFBcUIsQ0FBQyxJQUFJO1FBQ3BFO1FBRUEsT0FBTzlCO0lBRVQsRUFBR0Q7QUFFTCxHQUFHTyxJQUFJLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ldHMtYWVyby1pc28tZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL3htbGJ1aWxkZXIvbGliL1hNTFByb2Nlc3NpbmdJbnN0cnVjdGlvbi5qcz8xNjM2Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEdlbmVyYXRlZCBieSBDb2ZmZWVTY3JpcHQgMS4xMi43XG4oZnVuY3Rpb24oKSB7XG4gIHZhciBYTUxOb2RlLCBYTUxQcm9jZXNzaW5nSW5zdHJ1Y3Rpb24sXG4gICAgZXh0ZW5kID0gZnVuY3Rpb24oY2hpbGQsIHBhcmVudCkgeyBmb3IgKHZhciBrZXkgaW4gcGFyZW50KSB7IGlmIChoYXNQcm9wLmNhbGwocGFyZW50LCBrZXkpKSBjaGlsZFtrZXldID0gcGFyZW50W2tleV07IH0gZnVuY3Rpb24gY3RvcigpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGNoaWxkOyB9IGN0b3IucHJvdG90eXBlID0gcGFyZW50LnByb3RvdHlwZTsgY2hpbGQucHJvdG90eXBlID0gbmV3IGN0b3IoKTsgY2hpbGQuX19zdXBlcl9fID0gcGFyZW50LnByb3RvdHlwZTsgcmV0dXJuIGNoaWxkOyB9LFxuICAgIGhhc1Byb3AgPSB7fS5oYXNPd25Qcm9wZXJ0eTtcblxuICBYTUxOb2RlID0gcmVxdWlyZSgnLi9YTUxOb2RlJyk7XG5cbiAgbW9kdWxlLmV4cG9ydHMgPSBYTUxQcm9jZXNzaW5nSW5zdHJ1Y3Rpb24gPSAoZnVuY3Rpb24oc3VwZXJDbGFzcykge1xuICAgIGV4dGVuZChYTUxQcm9jZXNzaW5nSW5zdHJ1Y3Rpb24sIHN1cGVyQ2xhc3MpO1xuXG4gICAgZnVuY3Rpb24gWE1MUHJvY2Vzc2luZ0luc3RydWN0aW9uKHBhcmVudCwgdGFyZ2V0LCB2YWx1ZSkge1xuICAgICAgWE1MUHJvY2Vzc2luZ0luc3RydWN0aW9uLl9fc3VwZXJfXy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsIHBhcmVudCk7XG4gICAgICBpZiAodGFyZ2V0ID09IG51bGwpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTWlzc2luZyBpbnN0cnVjdGlvbiB0YXJnZXQuIFwiICsgdGhpcy5kZWJ1Z0luZm8oKSk7XG4gICAgICB9XG4gICAgICB0aGlzLnRhcmdldCA9IHRoaXMuc3RyaW5naWZ5Lmluc1RhcmdldCh0YXJnZXQpO1xuICAgICAgaWYgKHZhbHVlKSB7XG4gICAgICAgIHRoaXMudmFsdWUgPSB0aGlzLnN0cmluZ2lmeS5pbnNWYWx1ZSh2YWx1ZSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgWE1MUHJvY2Vzc2luZ0luc3RydWN0aW9uLnByb3RvdHlwZS5jbG9uZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIE9iamVjdC5jcmVhdGUodGhpcyk7XG4gICAgfTtcblxuICAgIFhNTFByb2Nlc3NpbmdJbnN0cnVjdGlvbi5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbihvcHRpb25zKSB7XG4gICAgICByZXR1cm4gdGhpcy5vcHRpb25zLndyaXRlci5zZXQob3B0aW9ucykucHJvY2Vzc2luZ0luc3RydWN0aW9uKHRoaXMpO1xuICAgIH07XG5cbiAgICByZXR1cm4gWE1MUHJvY2Vzc2luZ0luc3RydWN0aW9uO1xuXG4gIH0pKFhNTE5vZGUpO1xuXG59KS5jYWxsKHRoaXMpO1xuIl0sIm5hbWVzIjpbIlhNTE5vZGUiLCJYTUxQcm9jZXNzaW5nSW5zdHJ1Y3Rpb24iLCJleHRlbmQiLCJjaGlsZCIsInBhcmVudCIsImtleSIsImhhc1Byb3AiLCJjYWxsIiwiY3RvciIsImNvbnN0cnVjdG9yIiwicHJvdG90eXBlIiwiX19zdXBlcl9fIiwiaGFzT3duUHJvcGVydHkiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsInN1cGVyQ2xhc3MiLCJ0YXJnZXQiLCJ2YWx1ZSIsIkVycm9yIiwiZGVidWdJbmZvIiwic3RyaW5naWZ5IiwiaW5zVGFyZ2V0IiwiaW5zVmFsdWUiLCJjbG9uZSIsIk9iamVjdCIsImNyZWF0ZSIsInRvU3RyaW5nIiwib3B0aW9ucyIsIndyaXRlciIsInNldCIsInByb2Nlc3NpbmdJbnN0cnVjdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/xmlbuilder/lib/XMLProcessingInstruction.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/xmlbuilder/lib/XMLRaw.js":
/*!************************************************!*\
  !*** ../node_modules/xmlbuilder/lib/XMLRaw.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n// Generated by CoffeeScript 1.12.7\n(function() {\n    var XMLNode, XMLRaw, extend = function(child, parent) {\n        for(var key in parent){\n            if (hasProp.call(parent, key)) child[key] = parent[key];\n        }\n        function ctor() {\n            this.constructor = child;\n        }\n        ctor.prototype = parent.prototype;\n        child.prototype = new ctor();\n        child.__super__ = parent.prototype;\n        return child;\n    }, hasProp = {}.hasOwnProperty;\n    XMLNode = __webpack_require__(/*! ./XMLNode */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLNode.js\");\n    module.exports = XMLRaw = function(superClass) {\n        extend(XMLRaw, superClass);\n        function XMLRaw(parent, text) {\n            XMLRaw.__super__.constructor.call(this, parent);\n            if (text == null) {\n                throw new Error(\"Missing raw text. \" + this.debugInfo());\n            }\n            this.value = this.stringify.raw(text);\n        }\n        XMLRaw.prototype.clone = function() {\n            return Object.create(this);\n        };\n        XMLRaw.prototype.toString = function(options) {\n            return this.options.writer.set(options).raw(this);\n        };\n        return XMLRaw;\n    }(XMLNode);\n}).call(void 0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL3htbGJ1aWxkZXIvbGliL1hNTFJhdy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsbUNBQW1DO0FBQ2xDO0lBQ0MsSUFBSUEsU0FBU0MsUUFDWEMsU0FBUyxTQUFTQyxLQUFLLEVBQUVDLE1BQU07UUFBSSxJQUFLLElBQUlDLE9BQU9ELE9BQVE7WUFBRSxJQUFJRSxRQUFRQyxJQUFJLENBQUNILFFBQVFDLE1BQU1GLEtBQUssQ0FBQ0UsSUFBSSxHQUFHRCxNQUFNLENBQUNDLElBQUk7UUFBRTtRQUFFLFNBQVNHO1lBQVMsSUFBSSxDQUFDQyxXQUFXLEdBQUdOO1FBQU87UUFBRUssS0FBS0UsU0FBUyxHQUFHTixPQUFPTSxTQUFTO1FBQUVQLE1BQU1PLFNBQVMsR0FBRyxJQUFJRjtRQUFRTCxNQUFNUSxTQUFTLEdBQUdQLE9BQU9NLFNBQVM7UUFBRSxPQUFPUDtJQUFPLEdBQ3pSRyxVQUFVLENBQUMsRUFBRU0sY0FBYztJQUU3QlosVUFBVWEsbUJBQU9BLENBQUM7SUFFbEJDLE9BQU9DLE9BQU8sR0FBR2QsU0FBUyxTQUFVZSxVQUFVO1FBQzVDZCxPQUFPRCxRQUFRZTtRQUVmLFNBQVNmLE9BQU9HLE1BQU0sRUFBRWEsSUFBSTtZQUMxQmhCLE9BQU9VLFNBQVMsQ0FBQ0YsV0FBVyxDQUFDRixJQUFJLENBQUMsSUFBSSxFQUFFSDtZQUN4QyxJQUFJYSxRQUFRLE1BQU07Z0JBQ2hCLE1BQU0sSUFBSUMsTUFBTSx1QkFBdUIsSUFBSSxDQUFDQyxTQUFTO1lBQ3ZEO1lBQ0EsSUFBSSxDQUFDQyxLQUFLLEdBQUcsSUFBSSxDQUFDQyxTQUFTLENBQUNDLEdBQUcsQ0FBQ0w7UUFDbEM7UUFFQWhCLE9BQU9TLFNBQVMsQ0FBQ2EsS0FBSyxHQUFHO1lBQ3ZCLE9BQU9DLE9BQU9DLE1BQU0sQ0FBQyxJQUFJO1FBQzNCO1FBRUF4QixPQUFPUyxTQUFTLENBQUNnQixRQUFRLEdBQUcsU0FBU0MsT0FBTztZQUMxQyxPQUFPLElBQUksQ0FBQ0EsT0FBTyxDQUFDQyxNQUFNLENBQUNDLEdBQUcsQ0FBQ0YsU0FBU0wsR0FBRyxDQUFDLElBQUk7UUFDbEQ7UUFFQSxPQUFPckI7SUFFVCxFQUFHRDtBQUVMLEdBQUdPLElBQUksQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2V0cy1hZXJvLWlzby1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMveG1sYnVpbGRlci9saWIvWE1MUmF3LmpzPzdmY2UiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gR2VuZXJhdGVkIGJ5IENvZmZlZVNjcmlwdCAxLjEyLjdcbihmdW5jdGlvbigpIHtcbiAgdmFyIFhNTE5vZGUsIFhNTFJhdyxcbiAgICBleHRlbmQgPSBmdW5jdGlvbihjaGlsZCwgcGFyZW50KSB7IGZvciAodmFyIGtleSBpbiBwYXJlbnQpIHsgaWYgKGhhc1Byb3AuY2FsbChwYXJlbnQsIGtleSkpIGNoaWxkW2tleV0gPSBwYXJlbnRba2V5XTsgfSBmdW5jdGlvbiBjdG9yKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gY2hpbGQ7IH0gY3Rvci5wcm90b3R5cGUgPSBwYXJlbnQucHJvdG90eXBlOyBjaGlsZC5wcm90b3R5cGUgPSBuZXcgY3RvcigpOyBjaGlsZC5fX3N1cGVyX18gPSBwYXJlbnQucHJvdG90eXBlOyByZXR1cm4gY2hpbGQ7IH0sXG4gICAgaGFzUHJvcCA9IHt9Lmhhc093blByb3BlcnR5O1xuXG4gIFhNTE5vZGUgPSByZXF1aXJlKCcuL1hNTE5vZGUnKTtcblxuICBtb2R1bGUuZXhwb3J0cyA9IFhNTFJhdyA9IChmdW5jdGlvbihzdXBlckNsYXNzKSB7XG4gICAgZXh0ZW5kKFhNTFJhdywgc3VwZXJDbGFzcyk7XG5cbiAgICBmdW5jdGlvbiBYTUxSYXcocGFyZW50LCB0ZXh0KSB7XG4gICAgICBYTUxSYXcuX19zdXBlcl9fLmNvbnN0cnVjdG9yLmNhbGwodGhpcywgcGFyZW50KTtcbiAgICAgIGlmICh0ZXh0ID09IG51bGwpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTWlzc2luZyByYXcgdGV4dC4gXCIgKyB0aGlzLmRlYnVnSW5mbygpKTtcbiAgICAgIH1cbiAgICAgIHRoaXMudmFsdWUgPSB0aGlzLnN0cmluZ2lmeS5yYXcodGV4dCk7XG4gICAgfVxuXG4gICAgWE1MUmF3LnByb3RvdHlwZS5jbG9uZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIE9iamVjdC5jcmVhdGUodGhpcyk7XG4gICAgfTtcblxuICAgIFhNTFJhdy5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbihvcHRpb25zKSB7XG4gICAgICByZXR1cm4gdGhpcy5vcHRpb25zLndyaXRlci5zZXQob3B0aW9ucykucmF3KHRoaXMpO1xuICAgIH07XG5cbiAgICByZXR1cm4gWE1MUmF3O1xuXG4gIH0pKFhNTE5vZGUpO1xuXG59KS5jYWxsKHRoaXMpO1xuIl0sIm5hbWVzIjpbIlhNTE5vZGUiLCJYTUxSYXciLCJleHRlbmQiLCJjaGlsZCIsInBhcmVudCIsImtleSIsImhhc1Byb3AiLCJjYWxsIiwiY3RvciIsImNvbnN0cnVjdG9yIiwicHJvdG90eXBlIiwiX19zdXBlcl9fIiwiaGFzT3duUHJvcGVydHkiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsInN1cGVyQ2xhc3MiLCJ0ZXh0IiwiRXJyb3IiLCJkZWJ1Z0luZm8iLCJ2YWx1ZSIsInN0cmluZ2lmeSIsInJhdyIsImNsb25lIiwiT2JqZWN0IiwiY3JlYXRlIiwidG9TdHJpbmciLCJvcHRpb25zIiwid3JpdGVyIiwic2V0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/xmlbuilder/lib/XMLRaw.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/xmlbuilder/lib/XMLStreamWriter.js":
/*!*********************************************************!*\
  !*** ../node_modules/xmlbuilder/lib/XMLStreamWriter.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n// Generated by CoffeeScript 1.12.7\n(function() {\n    var XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLDummy, XMLElement, XMLProcessingInstruction, XMLRaw, XMLStreamWriter, XMLText, XMLWriterBase, extend = function(child, parent) {\n        for(var key in parent){\n            if (hasProp.call(parent, key)) child[key] = parent[key];\n        }\n        function ctor() {\n            this.constructor = child;\n        }\n        ctor.prototype = parent.prototype;\n        child.prototype = new ctor();\n        child.__super__ = parent.prototype;\n        return child;\n    }, hasProp = {}.hasOwnProperty;\n    XMLDeclaration = __webpack_require__(/*! ./XMLDeclaration */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLDeclaration.js\");\n    XMLDocType = __webpack_require__(/*! ./XMLDocType */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLDocType.js\");\n    XMLCData = __webpack_require__(/*! ./XMLCData */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLCData.js\");\n    XMLComment = __webpack_require__(/*! ./XMLComment */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLComment.js\");\n    XMLElement = __webpack_require__(/*! ./XMLElement */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLElement.js\");\n    XMLRaw = __webpack_require__(/*! ./XMLRaw */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLRaw.js\");\n    XMLText = __webpack_require__(/*! ./XMLText */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLText.js\");\n    XMLProcessingInstruction = __webpack_require__(/*! ./XMLProcessingInstruction */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLProcessingInstruction.js\");\n    XMLDummy = __webpack_require__(/*! ./XMLDummy */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLDummy.js\");\n    XMLDTDAttList = __webpack_require__(/*! ./XMLDTDAttList */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLDTDAttList.js\");\n    XMLDTDElement = __webpack_require__(/*! ./XMLDTDElement */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLDTDElement.js\");\n    XMLDTDEntity = __webpack_require__(/*! ./XMLDTDEntity */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLDTDEntity.js\");\n    XMLDTDNotation = __webpack_require__(/*! ./XMLDTDNotation */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLDTDNotation.js\");\n    XMLWriterBase = __webpack_require__(/*! ./XMLWriterBase */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLWriterBase.js\");\n    module.exports = XMLStreamWriter = function(superClass) {\n        extend(XMLStreamWriter, superClass);\n        function XMLStreamWriter(stream, options) {\n            XMLStreamWriter.__super__.constructor.call(this, options);\n            this.stream = stream;\n        }\n        XMLStreamWriter.prototype.document = function(doc) {\n            var child, i, j, len, len1, ref, ref1, results;\n            ref = doc.children;\n            for(i = 0, len = ref.length; i < len; i++){\n                child = ref[i];\n                child.isLastRootNode = false;\n            }\n            doc.children[doc.children.length - 1].isLastRootNode = true;\n            ref1 = doc.children;\n            results = [];\n            for(j = 0, len1 = ref1.length; j < len1; j++){\n                child = ref1[j];\n                if (child instanceof XMLDummy) {\n                    continue;\n                }\n                switch(false){\n                    case !(child instanceof XMLDeclaration):\n                        results.push(this.declaration(child));\n                        break;\n                    case !(child instanceof XMLDocType):\n                        results.push(this.docType(child));\n                        break;\n                    case !(child instanceof XMLComment):\n                        results.push(this.comment(child));\n                        break;\n                    case !(child instanceof XMLProcessingInstruction):\n                        results.push(this.processingInstruction(child));\n                        break;\n                    default:\n                        results.push(this.element(child));\n                }\n            }\n            return results;\n        };\n        XMLStreamWriter.prototype.attribute = function(att) {\n            return this.stream.write(\" \" + att.name + '=\"' + att.value + '\"');\n        };\n        XMLStreamWriter.prototype.cdata = function(node, level) {\n            return this.stream.write(this.space(level) + \"<![CDATA[\" + node.text + \"]]>\" + this.endline(node));\n        };\n        XMLStreamWriter.prototype.comment = function(node, level) {\n            return this.stream.write(this.space(level) + \"<!-- \" + node.text + \" -->\" + this.endline(node));\n        };\n        XMLStreamWriter.prototype.declaration = function(node, level) {\n            this.stream.write(this.space(level));\n            this.stream.write('<?xml version=\"' + node.version + '\"');\n            if (node.encoding != null) {\n                this.stream.write(' encoding=\"' + node.encoding + '\"');\n            }\n            if (node.standalone != null) {\n                this.stream.write(' standalone=\"' + node.standalone + '\"');\n            }\n            this.stream.write(this.spacebeforeslash + \"?>\");\n            return this.stream.write(this.endline(node));\n        };\n        XMLStreamWriter.prototype.docType = function(node, level) {\n            var child, i, len, ref;\n            level || (level = 0);\n            this.stream.write(this.space(level));\n            this.stream.write(\"<!DOCTYPE \" + node.root().name);\n            if (node.pubID && node.sysID) {\n                this.stream.write(' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"');\n            } else if (node.sysID) {\n                this.stream.write(' SYSTEM \"' + node.sysID + '\"');\n            }\n            if (node.children.length > 0) {\n                this.stream.write(\" [\");\n                this.stream.write(this.endline(node));\n                ref = node.children;\n                for(i = 0, len = ref.length; i < len; i++){\n                    child = ref[i];\n                    switch(false){\n                        case !(child instanceof XMLDTDAttList):\n                            this.dtdAttList(child, level + 1);\n                            break;\n                        case !(child instanceof XMLDTDElement):\n                            this.dtdElement(child, level + 1);\n                            break;\n                        case !(child instanceof XMLDTDEntity):\n                            this.dtdEntity(child, level + 1);\n                            break;\n                        case !(child instanceof XMLDTDNotation):\n                            this.dtdNotation(child, level + 1);\n                            break;\n                        case !(child instanceof XMLCData):\n                            this.cdata(child, level + 1);\n                            break;\n                        case !(child instanceof XMLComment):\n                            this.comment(child, level + 1);\n                            break;\n                        case !(child instanceof XMLProcessingInstruction):\n                            this.processingInstruction(child, level + 1);\n                            break;\n                        default:\n                            throw new Error(\"Unknown DTD node type: \" + child.constructor.name);\n                    }\n                }\n                this.stream.write(\"]\");\n            }\n            this.stream.write(this.spacebeforeslash + \">\");\n            return this.stream.write(this.endline(node));\n        };\n        XMLStreamWriter.prototype.element = function(node, level) {\n            var att, child, i, len, name, ref, ref1, space;\n            level || (level = 0);\n            space = this.space(level);\n            this.stream.write(space + \"<\" + node.name);\n            ref = node.attributes;\n            for(name in ref){\n                if (!hasProp.call(ref, name)) continue;\n                att = ref[name];\n                this.attribute(att);\n            }\n            if (node.children.length === 0 || node.children.every(function(e) {\n                return e.value === \"\";\n            })) {\n                if (this.allowEmpty) {\n                    this.stream.write(\"></\" + node.name + \">\");\n                } else {\n                    this.stream.write(this.spacebeforeslash + \"/>\");\n                }\n            } else if (this.pretty && node.children.length === 1 && node.children[0].value != null) {\n                this.stream.write(\">\");\n                this.stream.write(node.children[0].value);\n                this.stream.write(\"</\" + node.name + \">\");\n            } else {\n                this.stream.write(\">\" + this.newline);\n                ref1 = node.children;\n                for(i = 0, len = ref1.length; i < len; i++){\n                    child = ref1[i];\n                    switch(false){\n                        case !(child instanceof XMLCData):\n                            this.cdata(child, level + 1);\n                            break;\n                        case !(child instanceof XMLComment):\n                            this.comment(child, level + 1);\n                            break;\n                        case !(child instanceof XMLElement):\n                            this.element(child, level + 1);\n                            break;\n                        case !(child instanceof XMLRaw):\n                            this.raw(child, level + 1);\n                            break;\n                        case !(child instanceof XMLText):\n                            this.text(child, level + 1);\n                            break;\n                        case !(child instanceof XMLProcessingInstruction):\n                            this.processingInstruction(child, level + 1);\n                            break;\n                        case !(child instanceof XMLDummy):\n                            \"\";\n                            break;\n                        default:\n                            throw new Error(\"Unknown XML node type: \" + child.constructor.name);\n                    }\n                }\n                this.stream.write(space + \"</\" + node.name + \">\");\n            }\n            return this.stream.write(this.endline(node));\n        };\n        XMLStreamWriter.prototype.processingInstruction = function(node, level) {\n            this.stream.write(this.space(level) + \"<?\" + node.target);\n            if (node.value) {\n                this.stream.write(\" \" + node.value);\n            }\n            return this.stream.write(this.spacebeforeslash + \"?>\" + this.endline(node));\n        };\n        XMLStreamWriter.prototype.raw = function(node, level) {\n            return this.stream.write(this.space(level) + node.value + this.endline(node));\n        };\n        XMLStreamWriter.prototype.text = function(node, level) {\n            return this.stream.write(this.space(level) + node.value + this.endline(node));\n        };\n        XMLStreamWriter.prototype.dtdAttList = function(node, level) {\n            this.stream.write(this.space(level) + \"<!ATTLIST \" + node.elementName + \" \" + node.attributeName + \" \" + node.attributeType);\n            if (node.defaultValueType !== \"#DEFAULT\") {\n                this.stream.write(\" \" + node.defaultValueType);\n            }\n            if (node.defaultValue) {\n                this.stream.write(' \"' + node.defaultValue + '\"');\n            }\n            return this.stream.write(this.spacebeforeslash + \">\" + this.endline(node));\n        };\n        XMLStreamWriter.prototype.dtdElement = function(node, level) {\n            this.stream.write(this.space(level) + \"<!ELEMENT \" + node.name + \" \" + node.value);\n            return this.stream.write(this.spacebeforeslash + \">\" + this.endline(node));\n        };\n        XMLStreamWriter.prototype.dtdEntity = function(node, level) {\n            this.stream.write(this.space(level) + \"<!ENTITY\");\n            if (node.pe) {\n                this.stream.write(\" %\");\n            }\n            this.stream.write(\" \" + node.name);\n            if (node.value) {\n                this.stream.write(' \"' + node.value + '\"');\n            } else {\n                if (node.pubID && node.sysID) {\n                    this.stream.write(' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"');\n                } else if (node.sysID) {\n                    this.stream.write(' SYSTEM \"' + node.sysID + '\"');\n                }\n                if (node.nData) {\n                    this.stream.write(\" NDATA \" + node.nData);\n                }\n            }\n            return this.stream.write(this.spacebeforeslash + \">\" + this.endline(node));\n        };\n        XMLStreamWriter.prototype.dtdNotation = function(node, level) {\n            this.stream.write(this.space(level) + \"<!NOTATION \" + node.name);\n            if (node.pubID && node.sysID) {\n                this.stream.write(' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"');\n            } else if (node.pubID) {\n                this.stream.write(' PUBLIC \"' + node.pubID + '\"');\n            } else if (node.sysID) {\n                this.stream.write(' SYSTEM \"' + node.sysID + '\"');\n            }\n            return this.stream.write(this.spacebeforeslash + \">\" + this.endline(node));\n        };\n        XMLStreamWriter.prototype.endline = function(node) {\n            if (!node.isLastRootNode) {\n                return this.newline;\n            } else {\n                return \"\";\n            }\n        };\n        return XMLStreamWriter;\n    }(XMLWriterBase);\n}).call(void 0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/xmlbuilder/lib/XMLStreamWriter.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/xmlbuilder/lib/XMLStringWriter.js":
/*!*********************************************************!*\
  !*** ../node_modules/xmlbuilder/lib/XMLStringWriter.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n// Generated by CoffeeScript 1.12.7\n(function() {\n    var XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLDummy, XMLElement, XMLProcessingInstruction, XMLRaw, XMLStringWriter, XMLText, XMLWriterBase, extend = function(child, parent) {\n        for(var key in parent){\n            if (hasProp.call(parent, key)) child[key] = parent[key];\n        }\n        function ctor() {\n            this.constructor = child;\n        }\n        ctor.prototype = parent.prototype;\n        child.prototype = new ctor();\n        child.__super__ = parent.prototype;\n        return child;\n    }, hasProp = {}.hasOwnProperty;\n    XMLDeclaration = __webpack_require__(/*! ./XMLDeclaration */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLDeclaration.js\");\n    XMLDocType = __webpack_require__(/*! ./XMLDocType */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLDocType.js\");\n    XMLCData = __webpack_require__(/*! ./XMLCData */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLCData.js\");\n    XMLComment = __webpack_require__(/*! ./XMLComment */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLComment.js\");\n    XMLElement = __webpack_require__(/*! ./XMLElement */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLElement.js\");\n    XMLRaw = __webpack_require__(/*! ./XMLRaw */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLRaw.js\");\n    XMLText = __webpack_require__(/*! ./XMLText */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLText.js\");\n    XMLProcessingInstruction = __webpack_require__(/*! ./XMLProcessingInstruction */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLProcessingInstruction.js\");\n    XMLDummy = __webpack_require__(/*! ./XMLDummy */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLDummy.js\");\n    XMLDTDAttList = __webpack_require__(/*! ./XMLDTDAttList */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLDTDAttList.js\");\n    XMLDTDElement = __webpack_require__(/*! ./XMLDTDElement */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLDTDElement.js\");\n    XMLDTDEntity = __webpack_require__(/*! ./XMLDTDEntity */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLDTDEntity.js\");\n    XMLDTDNotation = __webpack_require__(/*! ./XMLDTDNotation */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLDTDNotation.js\");\n    XMLWriterBase = __webpack_require__(/*! ./XMLWriterBase */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLWriterBase.js\");\n    module.exports = XMLStringWriter = function(superClass) {\n        extend(XMLStringWriter, superClass);\n        function XMLStringWriter(options) {\n            XMLStringWriter.__super__.constructor.call(this, options);\n        }\n        XMLStringWriter.prototype.document = function(doc) {\n            var child, i, len, r, ref;\n            this.textispresent = false;\n            r = \"\";\n            ref = doc.children;\n            for(i = 0, len = ref.length; i < len; i++){\n                child = ref[i];\n                if (child instanceof XMLDummy) {\n                    continue;\n                }\n                r += (function() {\n                    switch(false){\n                        case !(child instanceof XMLDeclaration):\n                            return this.declaration(child);\n                        case !(child instanceof XMLDocType):\n                            return this.docType(child);\n                        case !(child instanceof XMLComment):\n                            return this.comment(child);\n                        case !(child instanceof XMLProcessingInstruction):\n                            return this.processingInstruction(child);\n                        default:\n                            return this.element(child, 0);\n                    }\n                }).call(this);\n            }\n            if (this.pretty && r.slice(-this.newline.length) === this.newline) {\n                r = r.slice(0, -this.newline.length);\n            }\n            return r;\n        };\n        XMLStringWriter.prototype.attribute = function(att) {\n            return \" \" + att.name + '=\"' + att.value + '\"';\n        };\n        XMLStringWriter.prototype.cdata = function(node, level) {\n            return this.space(level) + \"<![CDATA[\" + node.text + \"]]>\" + this.newline;\n        };\n        XMLStringWriter.prototype.comment = function(node, level) {\n            return this.space(level) + \"<!-- \" + node.text + \" -->\" + this.newline;\n        };\n        XMLStringWriter.prototype.declaration = function(node, level) {\n            var r;\n            r = this.space(level);\n            r += '<?xml version=\"' + node.version + '\"';\n            if (node.encoding != null) {\n                r += ' encoding=\"' + node.encoding + '\"';\n            }\n            if (node.standalone != null) {\n                r += ' standalone=\"' + node.standalone + '\"';\n            }\n            r += this.spacebeforeslash + \"?>\";\n            r += this.newline;\n            return r;\n        };\n        XMLStringWriter.prototype.docType = function(node, level) {\n            var child, i, len, r, ref;\n            level || (level = 0);\n            r = this.space(level);\n            r += \"<!DOCTYPE \" + node.root().name;\n            if (node.pubID && node.sysID) {\n                r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n            } else if (node.sysID) {\n                r += ' SYSTEM \"' + node.sysID + '\"';\n            }\n            if (node.children.length > 0) {\n                r += \" [\";\n                r += this.newline;\n                ref = node.children;\n                for(i = 0, len = ref.length; i < len; i++){\n                    child = ref[i];\n                    r += (function() {\n                        switch(false){\n                            case !(child instanceof XMLDTDAttList):\n                                return this.dtdAttList(child, level + 1);\n                            case !(child instanceof XMLDTDElement):\n                                return this.dtdElement(child, level + 1);\n                            case !(child instanceof XMLDTDEntity):\n                                return this.dtdEntity(child, level + 1);\n                            case !(child instanceof XMLDTDNotation):\n                                return this.dtdNotation(child, level + 1);\n                            case !(child instanceof XMLCData):\n                                return this.cdata(child, level + 1);\n                            case !(child instanceof XMLComment):\n                                return this.comment(child, level + 1);\n                            case !(child instanceof XMLProcessingInstruction):\n                                return this.processingInstruction(child, level + 1);\n                            default:\n                                throw new Error(\"Unknown DTD node type: \" + child.constructor.name);\n                        }\n                    }).call(this);\n                }\n                r += \"]\";\n            }\n            r += this.spacebeforeslash + \">\";\n            r += this.newline;\n            return r;\n        };\n        XMLStringWriter.prototype.element = function(node, level) {\n            var att, child, i, j, len, len1, name, r, ref, ref1, ref2, space, textispresentwasset;\n            level || (level = 0);\n            textispresentwasset = false;\n            if (this.textispresent) {\n                this.newline = \"\";\n                this.pretty = false;\n            } else {\n                this.newline = this.newlinedefault;\n                this.pretty = this.prettydefault;\n            }\n            space = this.space(level);\n            r = \"\";\n            r += space + \"<\" + node.name;\n            ref = node.attributes;\n            for(name in ref){\n                if (!hasProp.call(ref, name)) continue;\n                att = ref[name];\n                r += this.attribute(att);\n            }\n            if (node.children.length === 0 || node.children.every(function(e) {\n                return e.value === \"\";\n            })) {\n                if (this.allowEmpty) {\n                    r += \"></\" + node.name + \">\" + this.newline;\n                } else {\n                    r += this.spacebeforeslash + \"/>\" + this.newline;\n                }\n            } else if (this.pretty && node.children.length === 1 && node.children[0].value != null) {\n                r += \">\";\n                r += node.children[0].value;\n                r += \"</\" + node.name + \">\" + this.newline;\n            } else {\n                if (this.dontprettytextnodes) {\n                    ref1 = node.children;\n                    for(i = 0, len = ref1.length; i < len; i++){\n                        child = ref1[i];\n                        if (child.value != null) {\n                            this.textispresent++;\n                            textispresentwasset = true;\n                            break;\n                        }\n                    }\n                }\n                if (this.textispresent) {\n                    this.newline = \"\";\n                    this.pretty = false;\n                    space = this.space(level);\n                }\n                r += \">\" + this.newline;\n                ref2 = node.children;\n                for(j = 0, len1 = ref2.length; j < len1; j++){\n                    child = ref2[j];\n                    r += (function() {\n                        switch(false){\n                            case !(child instanceof XMLCData):\n                                return this.cdata(child, level + 1);\n                            case !(child instanceof XMLComment):\n                                return this.comment(child, level + 1);\n                            case !(child instanceof XMLElement):\n                                return this.element(child, level + 1);\n                            case !(child instanceof XMLRaw):\n                                return this.raw(child, level + 1);\n                            case !(child instanceof XMLText):\n                                return this.text(child, level + 1);\n                            case !(child instanceof XMLProcessingInstruction):\n                                return this.processingInstruction(child, level + 1);\n                            case !(child instanceof XMLDummy):\n                                return \"\";\n                            default:\n                                throw new Error(\"Unknown XML node type: \" + child.constructor.name);\n                        }\n                    }).call(this);\n                }\n                if (textispresentwasset) {\n                    this.textispresent--;\n                }\n                if (!this.textispresent) {\n                    this.newline = this.newlinedefault;\n                    this.pretty = this.prettydefault;\n                }\n                r += space + \"</\" + node.name + \">\" + this.newline;\n            }\n            return r;\n        };\n        XMLStringWriter.prototype.processingInstruction = function(node, level) {\n            var r;\n            r = this.space(level) + \"<?\" + node.target;\n            if (node.value) {\n                r += \" \" + node.value;\n            }\n            r += this.spacebeforeslash + \"?>\" + this.newline;\n            return r;\n        };\n        XMLStringWriter.prototype.raw = function(node, level) {\n            return this.space(level) + node.value + this.newline;\n        };\n        XMLStringWriter.prototype.text = function(node, level) {\n            return this.space(level) + node.value + this.newline;\n        };\n        XMLStringWriter.prototype.dtdAttList = function(node, level) {\n            var r;\n            r = this.space(level) + \"<!ATTLIST \" + node.elementName + \" \" + node.attributeName + \" \" + node.attributeType;\n            if (node.defaultValueType !== \"#DEFAULT\") {\n                r += \" \" + node.defaultValueType;\n            }\n            if (node.defaultValue) {\n                r += ' \"' + node.defaultValue + '\"';\n            }\n            r += this.spacebeforeslash + \">\" + this.newline;\n            return r;\n        };\n        XMLStringWriter.prototype.dtdElement = function(node, level) {\n            return this.space(level) + \"<!ELEMENT \" + node.name + \" \" + node.value + this.spacebeforeslash + \">\" + this.newline;\n        };\n        XMLStringWriter.prototype.dtdEntity = function(node, level) {\n            var r;\n            r = this.space(level) + \"<!ENTITY\";\n            if (node.pe) {\n                r += \" %\";\n            }\n            r += \" \" + node.name;\n            if (node.value) {\n                r += ' \"' + node.value + '\"';\n            } else {\n                if (node.pubID && node.sysID) {\n                    r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n                } else if (node.sysID) {\n                    r += ' SYSTEM \"' + node.sysID + '\"';\n                }\n                if (node.nData) {\n                    r += \" NDATA \" + node.nData;\n                }\n            }\n            r += this.spacebeforeslash + \">\" + this.newline;\n            return r;\n        };\n        XMLStringWriter.prototype.dtdNotation = function(node, level) {\n            var r;\n            r = this.space(level) + \"<!NOTATION \" + node.name;\n            if (node.pubID && node.sysID) {\n                r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n            } else if (node.pubID) {\n                r += ' PUBLIC \"' + node.pubID + '\"';\n            } else if (node.sysID) {\n                r += ' SYSTEM \"' + node.sysID + '\"';\n            }\n            r += this.spacebeforeslash + \">\" + this.newline;\n            return r;\n        };\n        XMLStringWriter.prototype.openNode = function(node, level) {\n            var att, name, r, ref;\n            level || (level = 0);\n            if (node instanceof XMLElement) {\n                r = this.space(level) + \"<\" + node.name;\n                ref = node.attributes;\n                for(name in ref){\n                    if (!hasProp.call(ref, name)) continue;\n                    att = ref[name];\n                    r += this.attribute(att);\n                }\n                r += (node.children ? \">\" : \"/>\") + this.newline;\n                return r;\n            } else {\n                r = this.space(level) + \"<!DOCTYPE \" + node.rootNodeName;\n                if (node.pubID && node.sysID) {\n                    r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n                } else if (node.sysID) {\n                    r += ' SYSTEM \"' + node.sysID + '\"';\n                }\n                r += (node.children ? \" [\" : \">\") + this.newline;\n                return r;\n            }\n        };\n        XMLStringWriter.prototype.closeNode = function(node, level) {\n            level || (level = 0);\n            switch(false){\n                case !(node instanceof XMLElement):\n                    return this.space(level) + \"</\" + node.name + \">\" + this.newline;\n                case !(node instanceof XMLDocType):\n                    return this.space(level) + \"]>\" + this.newline;\n            }\n        };\n        return XMLStringWriter;\n    }(XMLWriterBase);\n}).call(void 0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/xmlbuilder/lib/XMLStringWriter.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/xmlbuilder/lib/XMLStringifier.js":
/*!********************************************************!*\
  !*** ../node_modules/xmlbuilder/lib/XMLStringifier.js ***!
  \********************************************************/
/***/ ((module) => {

eval("\n// Generated by CoffeeScript 1.12.7\n(function() {\n    var XMLStringifier, bind = function(fn, me) {\n        return function() {\n            return fn.apply(me, arguments);\n        };\n    }, hasProp = {}.hasOwnProperty;\n    module.exports = XMLStringifier = function() {\n        function XMLStringifier(options) {\n            this.assertLegalChar = bind(this.assertLegalChar, this);\n            var key, ref, value;\n            options || (options = {});\n            this.noDoubleEncoding = options.noDoubleEncoding;\n            ref = options.stringify || {};\n            for(key in ref){\n                if (!hasProp.call(ref, key)) continue;\n                value = ref[key];\n                this[key] = value;\n            }\n        }\n        XMLStringifier.prototype.eleName = function(val) {\n            val = \"\" + val || \"\";\n            return this.assertLegalChar(val);\n        };\n        XMLStringifier.prototype.eleText = function(val) {\n            val = \"\" + val || \"\";\n            return this.assertLegalChar(this.elEscape(val));\n        };\n        XMLStringifier.prototype.cdata = function(val) {\n            val = \"\" + val || \"\";\n            val = val.replace(\"]]>\", \"]]]]><![CDATA[>\");\n            return this.assertLegalChar(val);\n        };\n        XMLStringifier.prototype.comment = function(val) {\n            val = \"\" + val || \"\";\n            if (val.match(/--/)) {\n                throw new Error(\"Comment text cannot contain double-hypen: \" + val);\n            }\n            return this.assertLegalChar(val);\n        };\n        XMLStringifier.prototype.raw = function(val) {\n            return \"\" + val || \"\";\n        };\n        XMLStringifier.prototype.attName = function(val) {\n            return val = \"\" + val || \"\";\n        };\n        XMLStringifier.prototype.attValue = function(val) {\n            val = \"\" + val || \"\";\n            return this.attEscape(val);\n        };\n        XMLStringifier.prototype.insTarget = function(val) {\n            return \"\" + val || \"\";\n        };\n        XMLStringifier.prototype.insValue = function(val) {\n            val = \"\" + val || \"\";\n            if (val.match(/\\?>/)) {\n                throw new Error(\"Invalid processing instruction value: \" + val);\n            }\n            return val;\n        };\n        XMLStringifier.prototype.xmlVersion = function(val) {\n            val = \"\" + val || \"\";\n            if (!val.match(/1\\.[0-9]+/)) {\n                throw new Error(\"Invalid version number: \" + val);\n            }\n            return val;\n        };\n        XMLStringifier.prototype.xmlEncoding = function(val) {\n            val = \"\" + val || \"\";\n            if (!val.match(/^[A-Za-z](?:[A-Za-z0-9._-])*$/)) {\n                throw new Error(\"Invalid encoding: \" + val);\n            }\n            return val;\n        };\n        XMLStringifier.prototype.xmlStandalone = function(val) {\n            if (val) {\n                return \"yes\";\n            } else {\n                return \"no\";\n            }\n        };\n        XMLStringifier.prototype.dtdPubID = function(val) {\n            return \"\" + val || \"\";\n        };\n        XMLStringifier.prototype.dtdSysID = function(val) {\n            return \"\" + val || \"\";\n        };\n        XMLStringifier.prototype.dtdElementValue = function(val) {\n            return \"\" + val || \"\";\n        };\n        XMLStringifier.prototype.dtdAttType = function(val) {\n            return \"\" + val || \"\";\n        };\n        XMLStringifier.prototype.dtdAttDefault = function(val) {\n            if (val != null) {\n                return \"\" + val || \"\";\n            } else {\n                return val;\n            }\n        };\n        XMLStringifier.prototype.dtdEntityValue = function(val) {\n            return \"\" + val || \"\";\n        };\n        XMLStringifier.prototype.dtdNData = function(val) {\n            return \"\" + val || \"\";\n        };\n        XMLStringifier.prototype.convertAttKey = \"@\";\n        XMLStringifier.prototype.convertPIKey = \"?\";\n        XMLStringifier.prototype.convertTextKey = \"#text\";\n        XMLStringifier.prototype.convertCDataKey = \"#cdata\";\n        XMLStringifier.prototype.convertCommentKey = \"#comment\";\n        XMLStringifier.prototype.convertRawKey = \"#raw\";\n        XMLStringifier.prototype.assertLegalChar = function(str) {\n            var res;\n            res = str.match(/[\\0\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/);\n            if (res) {\n                throw new Error(\"Invalid character in string: \" + str + \" at index \" + res.index);\n            }\n            return str;\n        };\n        XMLStringifier.prototype.elEscape = function(str) {\n            var ampregex;\n            ampregex = this.noDoubleEncoding ? /(?!&\\S+;)&/g : /&/g;\n            return str.replace(ampregex, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\\r/g, \"&#xD;\");\n        };\n        XMLStringifier.prototype.attEscape = function(str) {\n            var ampregex;\n            ampregex = this.noDoubleEncoding ? /(?!&\\S+;)&/g : /&/g;\n            return str.replace(ampregex, \"&amp;\").replace(/</g, \"&lt;\").replace(/\"/g, \"&quot;\").replace(/\\t/g, \"&#x9;\").replace(/\\n/g, \"&#xA;\").replace(/\\r/g, \"&#xD;\");\n        };\n        return XMLStringifier;\n    }();\n}).call(void 0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/xmlbuilder/lib/XMLStringifier.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/xmlbuilder/lib/XMLText.js":
/*!*************************************************!*\
  !*** ../node_modules/xmlbuilder/lib/XMLText.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n// Generated by CoffeeScript 1.12.7\n(function() {\n    var XMLNode, XMLText, extend = function(child, parent) {\n        for(var key in parent){\n            if (hasProp.call(parent, key)) child[key] = parent[key];\n        }\n        function ctor() {\n            this.constructor = child;\n        }\n        ctor.prototype = parent.prototype;\n        child.prototype = new ctor();\n        child.__super__ = parent.prototype;\n        return child;\n    }, hasProp = {}.hasOwnProperty;\n    XMLNode = __webpack_require__(/*! ./XMLNode */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLNode.js\");\n    module.exports = XMLText = function(superClass) {\n        extend(XMLText, superClass);\n        function XMLText(parent, text) {\n            XMLText.__super__.constructor.call(this, parent);\n            if (text == null) {\n                throw new Error(\"Missing element text. \" + this.debugInfo());\n            }\n            this.value = this.stringify.eleText(text);\n        }\n        XMLText.prototype.clone = function() {\n            return Object.create(this);\n        };\n        XMLText.prototype.toString = function(options) {\n            return this.options.writer.set(options).text(this);\n        };\n        return XMLText;\n    }(XMLNode);\n}).call(void 0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL3htbGJ1aWxkZXIvbGliL1hNTFRleHQuanMiLCJtYXBwaW5ncyI6IjtBQUFBLG1DQUFtQztBQUNsQztJQUNDLElBQUlBLFNBQVNDLFNBQ1hDLFNBQVMsU0FBU0MsS0FBSyxFQUFFQyxNQUFNO1FBQUksSUFBSyxJQUFJQyxPQUFPRCxPQUFRO1lBQUUsSUFBSUUsUUFBUUMsSUFBSSxDQUFDSCxRQUFRQyxNQUFNRixLQUFLLENBQUNFLElBQUksR0FBR0QsTUFBTSxDQUFDQyxJQUFJO1FBQUU7UUFBRSxTQUFTRztZQUFTLElBQUksQ0FBQ0MsV0FBVyxHQUFHTjtRQUFPO1FBQUVLLEtBQUtFLFNBQVMsR0FBR04sT0FBT00sU0FBUztRQUFFUCxNQUFNTyxTQUFTLEdBQUcsSUFBSUY7UUFBUUwsTUFBTVEsU0FBUyxHQUFHUCxPQUFPTSxTQUFTO1FBQUUsT0FBT1A7SUFBTyxHQUN6UkcsVUFBVSxDQUFDLEVBQUVNLGNBQWM7SUFFN0JaLFVBQVVhLG1CQUFPQSxDQUFDO0lBRWxCQyxPQUFPQyxPQUFPLEdBQUdkLFVBQVUsU0FBVWUsVUFBVTtRQUM3Q2QsT0FBT0QsU0FBU2U7UUFFaEIsU0FBU2YsUUFBUUcsTUFBTSxFQUFFYSxJQUFJO1lBQzNCaEIsUUFBUVUsU0FBUyxDQUFDRixXQUFXLENBQUNGLElBQUksQ0FBQyxJQUFJLEVBQUVIO1lBQ3pDLElBQUlhLFFBQVEsTUFBTTtnQkFDaEIsTUFBTSxJQUFJQyxNQUFNLDJCQUEyQixJQUFJLENBQUNDLFNBQVM7WUFDM0Q7WUFDQSxJQUFJLENBQUNDLEtBQUssR0FBRyxJQUFJLENBQUNDLFNBQVMsQ0FBQ0MsT0FBTyxDQUFDTDtRQUN0QztRQUVBaEIsUUFBUVMsU0FBUyxDQUFDYSxLQUFLLEdBQUc7WUFDeEIsT0FBT0MsT0FBT0MsTUFBTSxDQUFDLElBQUk7UUFDM0I7UUFFQXhCLFFBQVFTLFNBQVMsQ0FBQ2dCLFFBQVEsR0FBRyxTQUFTQyxPQUFPO1lBQzNDLE9BQU8sSUFBSSxDQUFDQSxPQUFPLENBQUNDLE1BQU0sQ0FBQ0MsR0FBRyxDQUFDRixTQUFTVixJQUFJLENBQUMsSUFBSTtRQUNuRDtRQUVBLE9BQU9oQjtJQUVULEVBQUdEO0FBRUwsR0FBR08sSUFBSSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZXRzLWFlcm8taXNvLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy94bWxidWlsZGVyL2xpYi9YTUxUZXh0LmpzPzk1ZTciXSwic291cmNlc0NvbnRlbnQiOlsiLy8gR2VuZXJhdGVkIGJ5IENvZmZlZVNjcmlwdCAxLjEyLjdcbihmdW5jdGlvbigpIHtcbiAgdmFyIFhNTE5vZGUsIFhNTFRleHQsXG4gICAgZXh0ZW5kID0gZnVuY3Rpb24oY2hpbGQsIHBhcmVudCkgeyBmb3IgKHZhciBrZXkgaW4gcGFyZW50KSB7IGlmIChoYXNQcm9wLmNhbGwocGFyZW50LCBrZXkpKSBjaGlsZFtrZXldID0gcGFyZW50W2tleV07IH0gZnVuY3Rpb24gY3RvcigpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGNoaWxkOyB9IGN0b3IucHJvdG90eXBlID0gcGFyZW50LnByb3RvdHlwZTsgY2hpbGQucHJvdG90eXBlID0gbmV3IGN0b3IoKTsgY2hpbGQuX19zdXBlcl9fID0gcGFyZW50LnByb3RvdHlwZTsgcmV0dXJuIGNoaWxkOyB9LFxuICAgIGhhc1Byb3AgPSB7fS5oYXNPd25Qcm9wZXJ0eTtcblxuICBYTUxOb2RlID0gcmVxdWlyZSgnLi9YTUxOb2RlJyk7XG5cbiAgbW9kdWxlLmV4cG9ydHMgPSBYTUxUZXh0ID0gKGZ1bmN0aW9uKHN1cGVyQ2xhc3MpIHtcbiAgICBleHRlbmQoWE1MVGV4dCwgc3VwZXJDbGFzcyk7XG5cbiAgICBmdW5jdGlvbiBYTUxUZXh0KHBhcmVudCwgdGV4dCkge1xuICAgICAgWE1MVGV4dC5fX3N1cGVyX18uY29uc3RydWN0b3IuY2FsbCh0aGlzLCBwYXJlbnQpO1xuICAgICAgaWYgKHRleHQgPT0gbnVsbCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJNaXNzaW5nIGVsZW1lbnQgdGV4dC4gXCIgKyB0aGlzLmRlYnVnSW5mbygpKTtcbiAgICAgIH1cbiAgICAgIHRoaXMudmFsdWUgPSB0aGlzLnN0cmluZ2lmeS5lbGVUZXh0KHRleHQpO1xuICAgIH1cblxuICAgIFhNTFRleHQucHJvdG90eXBlLmNsb25lID0gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gT2JqZWN0LmNyZWF0ZSh0aGlzKTtcbiAgICB9O1xuXG4gICAgWE1MVGV4dC5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbihvcHRpb25zKSB7XG4gICAgICByZXR1cm4gdGhpcy5vcHRpb25zLndyaXRlci5zZXQob3B0aW9ucykudGV4dCh0aGlzKTtcbiAgICB9O1xuXG4gICAgcmV0dXJuIFhNTFRleHQ7XG5cbiAgfSkoWE1MTm9kZSk7XG5cbn0pLmNhbGwodGhpcyk7XG4iXSwibmFtZXMiOlsiWE1MTm9kZSIsIlhNTFRleHQiLCJleHRlbmQiLCJjaGlsZCIsInBhcmVudCIsImtleSIsImhhc1Byb3AiLCJjYWxsIiwiY3RvciIsImNvbnN0cnVjdG9yIiwicHJvdG90eXBlIiwiX19zdXBlcl9fIiwiaGFzT3duUHJvcGVydHkiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsInN1cGVyQ2xhc3MiLCJ0ZXh0IiwiRXJyb3IiLCJkZWJ1Z0luZm8iLCJ2YWx1ZSIsInN0cmluZ2lmeSIsImVsZVRleHQiLCJjbG9uZSIsIk9iamVjdCIsImNyZWF0ZSIsInRvU3RyaW5nIiwib3B0aW9ucyIsIndyaXRlciIsInNldCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/xmlbuilder/lib/XMLText.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/xmlbuilder/lib/XMLWriterBase.js":
/*!*******************************************************!*\
  !*** ../node_modules/xmlbuilder/lib/XMLWriterBase.js ***!
  \*******************************************************/
/***/ ((module) => {

eval("\n// Generated by CoffeeScript 1.12.7\n(function() {\n    var XMLWriterBase, hasProp = {}.hasOwnProperty;\n    module.exports = XMLWriterBase = function() {\n        function XMLWriterBase(options) {\n            var key, ref, ref1, ref2, ref3, ref4, ref5, ref6, value;\n            options || (options = {});\n            this.pretty = options.pretty || false;\n            this.allowEmpty = (ref = options.allowEmpty) != null ? ref : false;\n            if (this.pretty) {\n                this.indent = (ref1 = options.indent) != null ? ref1 : \"  \";\n                this.newline = (ref2 = options.newline) != null ? ref2 : \"\\n\";\n                this.offset = (ref3 = options.offset) != null ? ref3 : 0;\n                this.dontprettytextnodes = (ref4 = options.dontprettytextnodes) != null ? ref4 : 0;\n            } else {\n                this.indent = \"\";\n                this.newline = \"\";\n                this.offset = 0;\n                this.dontprettytextnodes = 0;\n            }\n            this.spacebeforeslash = (ref5 = options.spacebeforeslash) != null ? ref5 : \"\";\n            if (this.spacebeforeslash === true) {\n                this.spacebeforeslash = \" \";\n            }\n            this.newlinedefault = this.newline;\n            this.prettydefault = this.pretty;\n            ref6 = options.writer || {};\n            for(key in ref6){\n                if (!hasProp.call(ref6, key)) continue;\n                value = ref6[key];\n                this[key] = value;\n            }\n        }\n        XMLWriterBase.prototype.set = function(options) {\n            var key, ref, value;\n            options || (options = {});\n            if (\"pretty\" in options) {\n                this.pretty = options.pretty;\n            }\n            if (\"allowEmpty\" in options) {\n                this.allowEmpty = options.allowEmpty;\n            }\n            if (this.pretty) {\n                this.indent = \"indent\" in options ? options.indent : \"  \";\n                this.newline = \"newline\" in options ? options.newline : \"\\n\";\n                this.offset = \"offset\" in options ? options.offset : 0;\n                this.dontprettytextnodes = \"dontprettytextnodes\" in options ? options.dontprettytextnodes : 0;\n            } else {\n                this.indent = \"\";\n                this.newline = \"\";\n                this.offset = 0;\n                this.dontprettytextnodes = 0;\n            }\n            this.spacebeforeslash = \"spacebeforeslash\" in options ? options.spacebeforeslash : \"\";\n            if (this.spacebeforeslash === true) {\n                this.spacebeforeslash = \" \";\n            }\n            this.newlinedefault = this.newline;\n            this.prettydefault = this.pretty;\n            ref = options.writer || {};\n            for(key in ref){\n                if (!hasProp.call(ref, key)) continue;\n                value = ref[key];\n                this[key] = value;\n            }\n            return this;\n        };\n        XMLWriterBase.prototype.space = function(level) {\n            var indent;\n            if (this.pretty) {\n                indent = (level || 0) + this.offset + 1;\n                if (indent > 0) {\n                    return new Array(indent).join(this.indent);\n                } else {\n                    return \"\";\n                }\n            } else {\n                return \"\";\n            }\n        };\n        return XMLWriterBase;\n    }();\n}).call(void 0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/xmlbuilder/lib/XMLWriterBase.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/xmlbuilder/lib/index.js":
/*!***********************************************!*\
  !*** ../node_modules/xmlbuilder/lib/index.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n// Generated by CoffeeScript 1.12.7\n(function() {\n    var XMLDocument, XMLDocumentCB, XMLStreamWriter, XMLStringWriter, assign, isFunction, ref;\n    ref = __webpack_require__(/*! ./Utility */ \"(ssr)/../node_modules/xmlbuilder/lib/Utility.js\"), assign = ref.assign, isFunction = ref.isFunction;\n    XMLDocument = __webpack_require__(/*! ./XMLDocument */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLDocument.js\");\n    XMLDocumentCB = __webpack_require__(/*! ./XMLDocumentCB */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLDocumentCB.js\");\n    XMLStringWriter = __webpack_require__(/*! ./XMLStringWriter */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLStringWriter.js\");\n    XMLStreamWriter = __webpack_require__(/*! ./XMLStreamWriter */ \"(ssr)/../node_modules/xmlbuilder/lib/XMLStreamWriter.js\");\n    module.exports.create = function(name, xmldec, doctype, options) {\n        var doc, root;\n        if (name == null) {\n            throw new Error(\"Root element needs a name.\");\n        }\n        options = assign({}, xmldec, doctype, options);\n        doc = new XMLDocument(options);\n        root = doc.element(name);\n        if (!options.headless) {\n            doc.declaration(options);\n            if (options.pubID != null || options.sysID != null) {\n                doc.doctype(options);\n            }\n        }\n        return root;\n    };\n    module.exports.begin = function(options, onData, onEnd) {\n        var ref1;\n        if (isFunction(options)) {\n            ref1 = [\n                options,\n                onData\n            ], onData = ref1[0], onEnd = ref1[1];\n            options = {};\n        }\n        if (onData) {\n            return new XMLDocumentCB(options, onData, onEnd);\n        } else {\n            return new XMLDocument(options);\n        }\n    };\n    module.exports.stringWriter = function(options) {\n        return new XMLStringWriter(options);\n    };\n    module.exports.streamWriter = function(stream, options) {\n        return new XMLStreamWriter(stream, options);\n    };\n}).call(void 0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL3htbGJ1aWxkZXIvbGliL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7QUFBQSxtQ0FBbUM7QUFDbEM7SUFDQyxJQUFJQSxhQUFhQyxlQUFlQyxpQkFBaUJDLGlCQUFpQkMsUUFBUUMsWUFBWUM7SUFFdEZBLE1BQU1DLG1CQUFPQSxDQUFDLHFFQUFjSCxTQUFTRSxJQUFJRixNQUFNLEVBQUVDLGFBQWFDLElBQUlELFVBQVU7SUFFNUVMLGNBQWNPLG1CQUFPQSxDQUFDO0lBRXRCTixnQkFBZ0JNLG1CQUFPQSxDQUFDO0lBRXhCSixrQkFBa0JJLG1CQUFPQSxDQUFDO0lBRTFCTCxrQkFBa0JLLG1CQUFPQSxDQUFDO0lBRTFCQyxxQkFBcUIsR0FBRyxTQUFTRyxJQUFJLEVBQUVDLE1BQU0sRUFBRUMsT0FBTyxFQUFFQyxPQUFPO1FBQzdELElBQUlDLEtBQUtDO1FBQ1QsSUFBSUwsUUFBUSxNQUFNO1lBQ2hCLE1BQU0sSUFBSU0sTUFBTTtRQUNsQjtRQUNBSCxVQUFVVixPQUFPLENBQUMsR0FBR1EsUUFBUUMsU0FBU0M7UUFDdENDLE1BQU0sSUFBSWYsWUFBWWM7UUFDdEJFLE9BQU9ELElBQUlHLE9BQU8sQ0FBQ1A7UUFDbkIsSUFBSSxDQUFDRyxRQUFRSyxRQUFRLEVBQUU7WUFDckJKLElBQUlLLFdBQVcsQ0FBQ047WUFDaEIsSUFBSSxRQUFTTyxLQUFLLElBQUksUUFBVVAsUUFBUVEsS0FBSyxJQUFJLE1BQU87Z0JBQ3REUCxJQUFJRixPQUFPLENBQUNDO1lBQ2Q7UUFDRjtRQUNBLE9BQU9FO0lBQ1Q7SUFFQVIsb0JBQW9CLEdBQUcsU0FBU00sT0FBTyxFQUFFVSxNQUFNLEVBQUVDLEtBQUs7UUFDcEQsSUFBSUM7UUFDSixJQUFJckIsV0FBV1MsVUFBVTtZQUN2QlksT0FBTztnQkFBQ1o7Z0JBQVNVO2FBQU8sRUFBRUEsU0FBU0UsSUFBSSxDQUFDLEVBQUUsRUFBRUQsUUFBUUMsSUFBSSxDQUFDLEVBQUU7WUFDM0RaLFVBQVUsQ0FBQztRQUNiO1FBQ0EsSUFBSVUsUUFBUTtZQUNWLE9BQU8sSUFBSXZCLGNBQWNhLFNBQVNVLFFBQVFDO1FBQzVDLE9BQU87WUFDTCxPQUFPLElBQUl6QixZQUFZYztRQUN6QjtJQUNGO0lBRUFOLDJCQUEyQixHQUFHLFNBQVNNLE9BQU87UUFDNUMsT0FBTyxJQUFJWCxnQkFBZ0JXO0lBQzdCO0lBRUFOLDJCQUEyQixHQUFHLFNBQVNxQixNQUFNLEVBQUVmLE9BQU87UUFDcEQsT0FBTyxJQUFJWixnQkFBZ0IyQixRQUFRZjtJQUNyQztBQUVGLEdBQUdnQixJQUFJLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ldHMtYWVyby1pc28tZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL3htbGJ1aWxkZXIvbGliL2luZGV4LmpzP2Y4ZTEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gR2VuZXJhdGVkIGJ5IENvZmZlZVNjcmlwdCAxLjEyLjdcbihmdW5jdGlvbigpIHtcbiAgdmFyIFhNTERvY3VtZW50LCBYTUxEb2N1bWVudENCLCBYTUxTdHJlYW1Xcml0ZXIsIFhNTFN0cmluZ1dyaXRlciwgYXNzaWduLCBpc0Z1bmN0aW9uLCByZWY7XG5cbiAgcmVmID0gcmVxdWlyZSgnLi9VdGlsaXR5JyksIGFzc2lnbiA9IHJlZi5hc3NpZ24sIGlzRnVuY3Rpb24gPSByZWYuaXNGdW5jdGlvbjtcblxuICBYTUxEb2N1bWVudCA9IHJlcXVpcmUoJy4vWE1MRG9jdW1lbnQnKTtcblxuICBYTUxEb2N1bWVudENCID0gcmVxdWlyZSgnLi9YTUxEb2N1bWVudENCJyk7XG5cbiAgWE1MU3RyaW5nV3JpdGVyID0gcmVxdWlyZSgnLi9YTUxTdHJpbmdXcml0ZXInKTtcblxuICBYTUxTdHJlYW1Xcml0ZXIgPSByZXF1aXJlKCcuL1hNTFN0cmVhbVdyaXRlcicpO1xuXG4gIG1vZHVsZS5leHBvcnRzLmNyZWF0ZSA9IGZ1bmN0aW9uKG5hbWUsIHhtbGRlYywgZG9jdHlwZSwgb3B0aW9ucykge1xuICAgIHZhciBkb2MsIHJvb3Q7XG4gICAgaWYgKG5hbWUgPT0gbnVsbCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiUm9vdCBlbGVtZW50IG5lZWRzIGEgbmFtZS5cIik7XG4gICAgfVxuICAgIG9wdGlvbnMgPSBhc3NpZ24oe30sIHhtbGRlYywgZG9jdHlwZSwgb3B0aW9ucyk7XG4gICAgZG9jID0gbmV3IFhNTERvY3VtZW50KG9wdGlvbnMpO1xuICAgIHJvb3QgPSBkb2MuZWxlbWVudChuYW1lKTtcbiAgICBpZiAoIW9wdGlvbnMuaGVhZGxlc3MpIHtcbiAgICAgIGRvYy5kZWNsYXJhdGlvbihvcHRpb25zKTtcbiAgICAgIGlmICgob3B0aW9ucy5wdWJJRCAhPSBudWxsKSB8fCAob3B0aW9ucy5zeXNJRCAhPSBudWxsKSkge1xuICAgICAgICBkb2MuZG9jdHlwZShvcHRpb25zKTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHJvb3Q7XG4gIH07XG5cbiAgbW9kdWxlLmV4cG9ydHMuYmVnaW4gPSBmdW5jdGlvbihvcHRpb25zLCBvbkRhdGEsIG9uRW5kKSB7XG4gICAgdmFyIHJlZjE7XG4gICAgaWYgKGlzRnVuY3Rpb24ob3B0aW9ucykpIHtcbiAgICAgIHJlZjEgPSBbb3B0aW9ucywgb25EYXRhXSwgb25EYXRhID0gcmVmMVswXSwgb25FbmQgPSByZWYxWzFdO1xuICAgICAgb3B0aW9ucyA9IHt9O1xuICAgIH1cbiAgICBpZiAob25EYXRhKSB7XG4gICAgICByZXR1cm4gbmV3IFhNTERvY3VtZW50Q0Iob3B0aW9ucywgb25EYXRhLCBvbkVuZCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBuZXcgWE1MRG9jdW1lbnQob3B0aW9ucyk7XG4gICAgfVxuICB9O1xuXG4gIG1vZHVsZS5leHBvcnRzLnN0cmluZ1dyaXRlciA9IGZ1bmN0aW9uKG9wdGlvbnMpIHtcbiAgICByZXR1cm4gbmV3IFhNTFN0cmluZ1dyaXRlcihvcHRpb25zKTtcbiAgfTtcblxuICBtb2R1bGUuZXhwb3J0cy5zdHJlYW1Xcml0ZXIgPSBmdW5jdGlvbihzdHJlYW0sIG9wdGlvbnMpIHtcbiAgICByZXR1cm4gbmV3IFhNTFN0cmVhbVdyaXRlcihzdHJlYW0sIG9wdGlvbnMpO1xuICB9O1xuXG59KS5jYWxsKHRoaXMpO1xuIl0sIm5hbWVzIjpbIlhNTERvY3VtZW50IiwiWE1MRG9jdW1lbnRDQiIsIlhNTFN0cmVhbVdyaXRlciIsIlhNTFN0cmluZ1dyaXRlciIsImFzc2lnbiIsImlzRnVuY3Rpb24iLCJyZWYiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsImNyZWF0ZSIsIm5hbWUiLCJ4bWxkZWMiLCJkb2N0eXBlIiwib3B0aW9ucyIsImRvYyIsInJvb3QiLCJFcnJvciIsImVsZW1lbnQiLCJoZWFkbGVzcyIsImRlY2xhcmF0aW9uIiwicHViSUQiLCJzeXNJRCIsImJlZ2luIiwib25EYXRhIiwib25FbmQiLCJyZWYxIiwic3RyaW5nV3JpdGVyIiwic3RyZWFtV3JpdGVyIiwic3RyZWFtIiwiY2FsbCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/xmlbuilder/lib/index.js\n");

/***/ })

};
;